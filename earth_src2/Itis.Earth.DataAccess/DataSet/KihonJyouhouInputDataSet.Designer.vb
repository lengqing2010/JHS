'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.1433
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("KihonJyouhouInputDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class KihonJyouhouInputDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableKameitenCdTable As KameitenCdTableDataTable
    
    Private tableParam_KameitenInfo As Param_KameitenInfoDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("KameitenCdTable")) Is Nothing) Then
                MyBase.Tables.Add(New KameitenCdTableDataTable(ds.Tables("KameitenCdTable")))
            End If
            If (Not (ds.Tables("Param_KameitenInfo")) Is Nothing) Then
                MyBase.Tables.Add(New Param_KameitenInfoDataTable(ds.Tables("Param_KameitenInfo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KameitenCdTable() As KameitenCdTableDataTable
        Get
            Return Me.tableKameitenCdTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Param_KameitenInfo() As Param_KameitenInfoDataTable
        Get
            Return Me.tableParam_KameitenInfo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As KihonJyouhouInputDataSet = CType(MyBase.Clone,KihonJyouhouInputDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("KameitenCdTable")) Is Nothing) Then
                MyBase.Tables.Add(New KameitenCdTableDataTable(ds.Tables("KameitenCdTable")))
            End If
            If (Not (ds.Tables("Param_KameitenInfo")) Is Nothing) Then
                MyBase.Tables.Add(New Param_KameitenInfoDataTable(ds.Tables("Param_KameitenInfo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableKameitenCdTable = CType(MyBase.Tables("KameitenCdTable"),KameitenCdTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKameitenCdTable) Is Nothing) Then
                Me.tableKameitenCdTable.InitVars
            End If
        End If
        Me.tableParam_KameitenInfo = CType(MyBase.Tables("Param_KameitenInfo"),Param_KameitenInfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableParam_KameitenInfo) Is Nothing) Then
                Me.tableParam_KameitenInfo.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "KihonJyouhouInputDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/KihonJyouhouInputDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableKameitenCdTable = New KameitenCdTableDataTable
        MyBase.Tables.Add(Me.tableKameitenCdTable)
        Me.tableParam_KameitenInfo = New Param_KameitenInfoDataTable
        MyBase.Tables.Add(Me.tableParam_KameitenInfo)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeKameitenCdTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeParam_KameitenInfo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As KihonJyouhouInputDataSet = New KihonJyouhouInputDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub KameitenCdTableRowChangeEventHandler(ByVal sender As Object, ByVal e As KameitenCdTableRowChangeEvent)
    
    Public Delegate Sub Param_KameitenInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As Param_KameitenInfoRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KameitenCdTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnkameiten_cd As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KameitenCdTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kameiten_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkameiten_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KameitenCdTableRow
            Get
                Return CType(Me.Rows(index),KameitenCdTableRow)
            End Get
        End Property
        
        Public Event KameitenCdTableRowChanging As KameitenCdTableRowChangeEventHandler
        
        Public Event KameitenCdTableRowChanged As KameitenCdTableRowChangeEventHandler
        
        Public Event KameitenCdTableRowDeleting As KameitenCdTableRowChangeEventHandler
        
        Public Event KameitenCdTableRowDeleted As KameitenCdTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddKameitenCdTableRow(ByVal row As KameitenCdTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddKameitenCdTableRow(ByVal kameiten_cd As String) As KameitenCdTableRow
            Dim rowKameitenCdTableRow As KameitenCdTableRow = CType(Me.NewRow,KameitenCdTableRow)
            Dim columnValuesArray() As Object = New Object() {kameiten_cd}
            rowKameitenCdTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKameitenCdTableRow)
            Return rowKameitenCdTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KameitenCdTableDataTable = CType(MyBase.Clone,KameitenCdTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KameitenCdTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnkameiten_cd = MyBase.Columns("kameiten_cd")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnkameiten_cd = New Global.System.Data.DataColumn("kameiten_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkameiten_cd)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewKameitenCdTableRow() As KameitenCdTableRow
            Return CType(Me.NewRow,KameitenCdTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KameitenCdTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KameitenCdTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KameitenCdTableRowChangedEvent) Is Nothing) Then
                RaiseEvent KameitenCdTableRowChanged(Me, New KameitenCdTableRowChangeEvent(CType(e.Row,KameitenCdTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KameitenCdTableRowChangingEvent) Is Nothing) Then
                RaiseEvent KameitenCdTableRowChanging(Me, New KameitenCdTableRowChangeEvent(CType(e.Row,KameitenCdTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KameitenCdTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent KameitenCdTableRowDeleted(Me, New KameitenCdTableRowChangeEvent(CType(e.Row,KameitenCdTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KameitenCdTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent KameitenCdTableRowDeleting(Me, New KameitenCdTableRowChangeEvent(CType(e.Row,KameitenCdTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveKameitenCdTableRow(ByVal row As KameitenCdTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As KihonJyouhouInputDataSet = New KihonJyouhouInputDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KameitenCdTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Param_KameitenInfoDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnkameiten_cd As Global.System.Data.DataColumn
        
        Private columnkbn As Global.System.Data.DataColumn
        
        Private columntorikesi As Global.System.Data.DataColumn
        
        Private columnkameiten_mei1 As Global.System.Data.DataColumn
        
        Private columntenmei_kana1 As Global.System.Data.DataColumn
        
        Private columnkameiten_mei2 As Global.System.Data.DataColumn
        
        Private columntenmei_kana2 As Global.System.Data.DataColumn
        
        Private columnbuilder_no As Global.System.Data.DataColumn
        
        Private columnkeiretu_cd As Global.System.Data.DataColumn
        
        Private columneigyousyo_cd As Global.System.Data.DataColumn
        
        Private columnth_kasi_cd As Global.System.Data.DataColumn
        
        Private columnadd_login_user_id As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Param_KameitenInfo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kameiten_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkameiten_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kbnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkbn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property torikesiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntorikesi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kameiten_mei1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnkameiten_mei1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tenmei_kana1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntenmei_kana1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kameiten_mei2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnkameiten_mei2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tenmei_kana2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntenmei_kana2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property builder_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbuilder_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property keiretu_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkeiretu_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property eigyousyo_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columneigyousyo_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property th_kasi_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnth_kasi_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_login_user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_login_user_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Param_KameitenInfoRow
            Get
                Return CType(Me.Rows(index),Param_KameitenInfoRow)
            End Get
        End Property
        
        Public Event Param_KameitenInfoRowChanging As Param_KameitenInfoRowChangeEventHandler
        
        Public Event Param_KameitenInfoRowChanged As Param_KameitenInfoRowChangeEventHandler
        
        Public Event Param_KameitenInfoRowDeleting As Param_KameitenInfoRowChangeEventHandler
        
        Public Event Param_KameitenInfoRowDeleted As Param_KameitenInfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddParam_KameitenInfoRow(ByVal row As Param_KameitenInfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddParam_KameitenInfoRow(ByVal kameiten_cd As String, ByVal kbn As String, ByVal torikesi As String, ByVal kameiten_mei1 As String, ByVal tenmei_kana1 As String, ByVal kameiten_mei2 As String, ByVal tenmei_kana2 As String, ByVal builder_no As String, ByVal keiretu_cd As String, ByVal eigyousyo_cd As String, ByVal th_kasi_cd As String, ByVal add_login_user_id As String) As Param_KameitenInfoRow
            Dim rowParam_KameitenInfoRow As Param_KameitenInfoRow = CType(Me.NewRow,Param_KameitenInfoRow)
            Dim columnValuesArray() As Object = New Object() {kameiten_cd, kbn, torikesi, kameiten_mei1, tenmei_kana1, kameiten_mei2, tenmei_kana2, builder_no, keiretu_cd, eigyousyo_cd, th_kasi_cd, add_login_user_id}
            rowParam_KameitenInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowParam_KameitenInfoRow)
            Return rowParam_KameitenInfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Param_KameitenInfoDataTable = CType(MyBase.Clone,Param_KameitenInfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Param_KameitenInfoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnkameiten_cd = MyBase.Columns("kameiten_cd")
            Me.columnkbn = MyBase.Columns("kbn")
            Me.columntorikesi = MyBase.Columns("torikesi")
            Me.columnkameiten_mei1 = MyBase.Columns("kameiten_mei1")
            Me.columntenmei_kana1 = MyBase.Columns("tenmei_kana1")
            Me.columnkameiten_mei2 = MyBase.Columns("kameiten_mei2")
            Me.columntenmei_kana2 = MyBase.Columns("tenmei_kana2")
            Me.columnbuilder_no = MyBase.Columns("builder_no")
            Me.columnkeiretu_cd = MyBase.Columns("keiretu_cd")
            Me.columneigyousyo_cd = MyBase.Columns("eigyousyo_cd")
            Me.columnth_kasi_cd = MyBase.Columns("th_kasi_cd")
            Me.columnadd_login_user_id = MyBase.Columns("add_login_user_id")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnkameiten_cd = New Global.System.Data.DataColumn("kameiten_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkameiten_cd)
            Me.columnkbn = New Global.System.Data.DataColumn("kbn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkbn)
            Me.columntorikesi = New Global.System.Data.DataColumn("torikesi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntorikesi)
            Me.columnkameiten_mei1 = New Global.System.Data.DataColumn("kameiten_mei1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkameiten_mei1)
            Me.columntenmei_kana1 = New Global.System.Data.DataColumn("tenmei_kana1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntenmei_kana1)
            Me.columnkameiten_mei2 = New Global.System.Data.DataColumn("kameiten_mei2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkameiten_mei2)
            Me.columntenmei_kana2 = New Global.System.Data.DataColumn("tenmei_kana2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntenmei_kana2)
            Me.columnbuilder_no = New Global.System.Data.DataColumn("builder_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbuilder_no)
            Me.columnkeiretu_cd = New Global.System.Data.DataColumn("keiretu_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkeiretu_cd)
            Me.columneigyousyo_cd = New Global.System.Data.DataColumn("eigyousyo_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columneigyousyo_cd)
            Me.columnth_kasi_cd = New Global.System.Data.DataColumn("th_kasi_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnth_kasi_cd)
            Me.columnadd_login_user_id = New Global.System.Data.DataColumn("add_login_user_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_login_user_id)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewParam_KameitenInfoRow() As Param_KameitenInfoRow
            Return CType(Me.NewRow,Param_KameitenInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Param_KameitenInfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Param_KameitenInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Param_KameitenInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent Param_KameitenInfoRowChanged(Me, New Param_KameitenInfoRowChangeEvent(CType(e.Row,Param_KameitenInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Param_KameitenInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent Param_KameitenInfoRowChanging(Me, New Param_KameitenInfoRowChangeEvent(CType(e.Row,Param_KameitenInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Param_KameitenInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent Param_KameitenInfoRowDeleted(Me, New Param_KameitenInfoRowChangeEvent(CType(e.Row,Param_KameitenInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Param_KameitenInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent Param_KameitenInfoRowDeleting(Me, New Param_KameitenInfoRowChangeEvent(CType(e.Row,Param_KameitenInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveParam_KameitenInfoRow(ByVal row As Param_KameitenInfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As KihonJyouhouInputDataSet = New KihonJyouhouInputDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Param_KameitenInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class KameitenCdTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableKameitenCdTable As KameitenCdTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKameitenCdTable = CType(Me.Table,KameitenCdTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kameiten_cd() As String
            Get
                If Me.Iskameiten_cdNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKameitenCdTable.kameiten_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKameitenCdTable.kameiten_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskameiten_cdNull() As Boolean
            Return Me.IsNull(Me.tableKameitenCdTable.kameiten_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkameiten_cdNull()
            Me(Me.tableKameitenCdTable.kameiten_cdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Param_KameitenInfoRow
        Inherits Global.System.Data.DataRow
        
        Private tableParam_KameitenInfo As Param_KameitenInfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableParam_KameitenInfo = CType(Me.Table,Param_KameitenInfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kameiten_cd() As String
            Get
                If Me.Iskameiten_cdNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.kameiten_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.kameiten_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kbn() As String
            Get
                If Me.IskbnNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.kbnColumn),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.kbnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property torikesi() As String
            Get
                If Me.IstorikesiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.torikesiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.torikesiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kameiten_mei1() As String
            Get
                If Me.Iskameiten_mei1Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.kameiten_mei1Column),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.kameiten_mei1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tenmei_kana1() As String
            Get
                If Me.Istenmei_kana1Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.tenmei_kana1Column),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.tenmei_kana1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kameiten_mei2() As String
            Get
                If Me.Iskameiten_mei2Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.kameiten_mei2Column),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.kameiten_mei2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tenmei_kana2() As String
            Get
                If Me.Istenmei_kana2Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.tenmei_kana2Column),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.tenmei_kana2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property builder_no() As String
            Get
                If Me.Isbuilder_noNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.builder_noColumn),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.builder_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property keiretu_cd() As String
            Get
                If Me.Iskeiretu_cdNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.keiretu_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.keiretu_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property eigyousyo_cd() As String
            Get
                If Me.Iseigyousyo_cdNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.eigyousyo_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.eigyousyo_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property th_kasi_cd() As String
            Get
                If Me.Isth_kasi_cdNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.th_kasi_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.th_kasi_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_login_user_id() As String
            Get
                If Me.Isadd_login_user_idNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableParam_KameitenInfo.add_login_user_idColumn),String)
                End If
            End Get
            Set
                Me(Me.tableParam_KameitenInfo.add_login_user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskameiten_cdNull() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.kameiten_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkameiten_cdNull()
            Me(Me.tableParam_KameitenInfo.kameiten_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IskbnNull() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.kbnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetkbnNull()
            Me(Me.tableParam_KameitenInfo.kbnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstorikesiNull() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.torikesiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettorikesiNull()
            Me(Me.tableParam_KameitenInfo.torikesiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskameiten_mei1Null() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.kameiten_mei1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkameiten_mei1Null()
            Me(Me.tableParam_KameitenInfo.kameiten_mei1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istenmei_kana1Null() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.tenmei_kana1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settenmei_kana1Null()
            Me(Me.tableParam_KameitenInfo.tenmei_kana1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskameiten_mei2Null() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.kameiten_mei2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkameiten_mei2Null()
            Me(Me.tableParam_KameitenInfo.kameiten_mei2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istenmei_kana2Null() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.tenmei_kana2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settenmei_kana2Null()
            Me(Me.tableParam_KameitenInfo.tenmei_kana2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbuilder_noNull() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.builder_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbuilder_noNull()
            Me(Me.tableParam_KameitenInfo.builder_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskeiretu_cdNull() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.keiretu_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkeiretu_cdNull()
            Me(Me.tableParam_KameitenInfo.keiretu_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iseigyousyo_cdNull() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.eigyousyo_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Seteigyousyo_cdNull()
            Me(Me.tableParam_KameitenInfo.eigyousyo_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isth_kasi_cdNull() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.th_kasi_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setth_kasi_cdNull()
            Me(Me.tableParam_KameitenInfo.th_kasi_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_login_user_idNull() As Boolean
            Return Me.IsNull(Me.tableParam_KameitenInfo.add_login_user_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_login_user_idNull()
            Me(Me.tableParam_KameitenInfo.add_login_user_idColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class KameitenCdTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KameitenCdTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As KameitenCdTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As KameitenCdTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Param_KameitenInfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Param_KameitenInfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Param_KameitenInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Param_KameitenInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

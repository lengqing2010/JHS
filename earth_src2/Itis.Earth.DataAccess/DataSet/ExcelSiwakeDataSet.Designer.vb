'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.3053
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ExcelSiwakeDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ExcelSiwakeDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableExcelSiwakeUriageDataTable As ExcelSiwakeUriageDataTableDataTable
    
    Private tableExcelSiwakeSiireDataTable As ExcelSiwakeSiireDataTableDataTable
    
    Private tableExcelSiwakeNyuukinDataTable As ExcelSiwakeNyuukinDataTableDataTable
    
    Private tableUrikakekinZandakaHyou As UrikakekinZandakaHyouDataTable
    
    Private tableKaikakekinZandakaHyou As KaikakekinZandakaHyouDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ExcelSiwakeUriageDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New ExcelSiwakeUriageDataTableDataTable(ds.Tables("ExcelSiwakeUriageDataTable")))
            End If
            If (Not (ds.Tables("ExcelSiwakeSiireDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New ExcelSiwakeSiireDataTableDataTable(ds.Tables("ExcelSiwakeSiireDataTable")))
            End If
            If (Not (ds.Tables("ExcelSiwakeNyuukinDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New ExcelSiwakeNyuukinDataTableDataTable(ds.Tables("ExcelSiwakeNyuukinDataTable")))
            End If
            If (Not (ds.Tables("UrikakekinZandakaHyou")) Is Nothing) Then
                MyBase.Tables.Add(New UrikakekinZandakaHyouDataTable(ds.Tables("UrikakekinZandakaHyou")))
            End If
            If (Not (ds.Tables("KaikakekinZandakaHyou")) Is Nothing) Then
                MyBase.Tables.Add(New KaikakekinZandakaHyouDataTable(ds.Tables("KaikakekinZandakaHyou")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ExcelSiwakeUriageDataTable() As ExcelSiwakeUriageDataTableDataTable
        Get
            Return Me.tableExcelSiwakeUriageDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ExcelSiwakeSiireDataTable() As ExcelSiwakeSiireDataTableDataTable
        Get
            Return Me.tableExcelSiwakeSiireDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ExcelSiwakeNyuukinDataTable() As ExcelSiwakeNyuukinDataTableDataTable
        Get
            Return Me.tableExcelSiwakeNyuukinDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property UrikakekinZandakaHyou() As UrikakekinZandakaHyouDataTable
        Get
            Return Me.tableUrikakekinZandakaHyou
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KaikakekinZandakaHyou() As KaikakekinZandakaHyouDataTable
        Get
            Return Me.tableKaikakekinZandakaHyou
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ExcelSiwakeDataSet = CType(MyBase.Clone,ExcelSiwakeDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("ExcelSiwakeUriageDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New ExcelSiwakeUriageDataTableDataTable(ds.Tables("ExcelSiwakeUriageDataTable")))
            End If
            If (Not (ds.Tables("ExcelSiwakeSiireDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New ExcelSiwakeSiireDataTableDataTable(ds.Tables("ExcelSiwakeSiireDataTable")))
            End If
            If (Not (ds.Tables("ExcelSiwakeNyuukinDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New ExcelSiwakeNyuukinDataTableDataTable(ds.Tables("ExcelSiwakeNyuukinDataTable")))
            End If
            If (Not (ds.Tables("UrikakekinZandakaHyou")) Is Nothing) Then
                MyBase.Tables.Add(New UrikakekinZandakaHyouDataTable(ds.Tables("UrikakekinZandakaHyou")))
            End If
            If (Not (ds.Tables("KaikakekinZandakaHyou")) Is Nothing) Then
                MyBase.Tables.Add(New KaikakekinZandakaHyouDataTable(ds.Tables("KaikakekinZandakaHyou")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableExcelSiwakeUriageDataTable = CType(MyBase.Tables("ExcelSiwakeUriageDataTable"),ExcelSiwakeUriageDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableExcelSiwakeUriageDataTable) Is Nothing) Then
                Me.tableExcelSiwakeUriageDataTable.InitVars
            End If
        End If
        Me.tableExcelSiwakeSiireDataTable = CType(MyBase.Tables("ExcelSiwakeSiireDataTable"),ExcelSiwakeSiireDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableExcelSiwakeSiireDataTable) Is Nothing) Then
                Me.tableExcelSiwakeSiireDataTable.InitVars
            End If
        End If
        Me.tableExcelSiwakeNyuukinDataTable = CType(MyBase.Tables("ExcelSiwakeNyuukinDataTable"),ExcelSiwakeNyuukinDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableExcelSiwakeNyuukinDataTable) Is Nothing) Then
                Me.tableExcelSiwakeNyuukinDataTable.InitVars
            End If
        End If
        Me.tableUrikakekinZandakaHyou = CType(MyBase.Tables("UrikakekinZandakaHyou"),UrikakekinZandakaHyouDataTable)
        If (initTable = true) Then
            If (Not (Me.tableUrikakekinZandakaHyou) Is Nothing) Then
                Me.tableUrikakekinZandakaHyou.InitVars
            End If
        End If
        Me.tableKaikakekinZandakaHyou = CType(MyBase.Tables("KaikakekinZandakaHyou"),KaikakekinZandakaHyouDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKaikakekinZandakaHyou) Is Nothing) Then
                Me.tableKaikakekinZandakaHyou.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "ExcelSiwakeDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ExcelSiwakeDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableExcelSiwakeUriageDataTable = New ExcelSiwakeUriageDataTableDataTable
        MyBase.Tables.Add(Me.tableExcelSiwakeUriageDataTable)
        Me.tableExcelSiwakeSiireDataTable = New ExcelSiwakeSiireDataTableDataTable
        MyBase.Tables.Add(Me.tableExcelSiwakeSiireDataTable)
        Me.tableExcelSiwakeNyuukinDataTable = New ExcelSiwakeNyuukinDataTableDataTable
        MyBase.Tables.Add(Me.tableExcelSiwakeNyuukinDataTable)
        Me.tableUrikakekinZandakaHyou = New UrikakekinZandakaHyouDataTable
        MyBase.Tables.Add(Me.tableUrikakekinZandakaHyou)
        Me.tableKaikakekinZandakaHyou = New KaikakekinZandakaHyouDataTable
        MyBase.Tables.Add(Me.tableKaikakekinZandakaHyou)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeExcelSiwakeUriageDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeExcelSiwakeSiireDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeExcelSiwakeNyuukinDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeUrikakekinZandakaHyou() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeKaikakekinZandakaHyou() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ExcelSiwakeDataSet = New ExcelSiwakeDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub ExcelSiwakeUriageDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As ExcelSiwakeUriageDataTableRowChangeEvent)
    
    Public Delegate Sub ExcelSiwakeSiireDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As ExcelSiwakeSiireDataTableRowChangeEvent)
    
    Public Delegate Sub ExcelSiwakeNyuukinDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As ExcelSiwakeNyuukinDataTableRowChangeEvent)
    
    Public Delegate Sub UrikakekinZandakaHyouRowChangeEventHandler(ByVal sender As Object, ByVal e As UrikakekinZandakaHyouRowChangeEvent)
    
    Public Delegate Sub KaikakekinZandakaHyouRowChangeEventHandler(ByVal sender As Object, ByVal e As KaikakekinZandakaHyouRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ExcelSiwakeUriageDataTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columntekiyou As Global.System.Data.DataColumn
        
        Private columnkari_zei As Global.System.Data.DataColumn
        
        Private columnkari_kamoku_mei As Global.System.Data.DataColumn
        
        Private columnkari_kamoku As Global.System.Data.DataColumn
        
        Private columnkari_saimoku As Global.System.Data.DataColumn
        
        Private columnkari_keisiki As Global.System.Data.DataColumn
        
        Private columnkari_youto As Global.System.Data.DataColumn
        
        Private columnkari_tukekaesaki As Global.System.Data.DataColumn
        
        Private columnkari_line As Global.System.Data.DataColumn
        
        Private columnkari_aitesaki As Global.System.Data.DataColumn
        
        Private columnkari_kingaku As Global.System.Data.DataColumn
        
        Private columnkasi_zei As Global.System.Data.DataColumn
        
        Private columnkasi_kamoku_mei As Global.System.Data.DataColumn
        
        Private columnkasi_kamoku As Global.System.Data.DataColumn
        
        Private columnkasi_saimoku As Global.System.Data.DataColumn
        
        Private columnkasi_keisiki As Global.System.Data.DataColumn
        
        Private columnkasi_youto As Global.System.Data.DataColumn
        
        Private columnkasi_tukekaesaki As Global.System.Data.DataColumn
        
        Private columnkasi_line As Global.System.Data.DataColumn
        
        Private columnkasi_aitesaki As Global.System.Data.DataColumn
        
        Private columnkasi_kingaku As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ExcelSiwakeUriageDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tekiyouColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntekiyou
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_zeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_zei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kamoku_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kamoku_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kamokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kamoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_saimokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_saimoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_keisikiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_keisiki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_youtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_youto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_tukekaesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_tukekaesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_lineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_line
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_aitesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_aitesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kingakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kingaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_zeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_zei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kamoku_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kamoku_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kamokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kamoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_saimokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_saimoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_keisikiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_keisiki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_youtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_youto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_tukekaesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_tukekaesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_lineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_line
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_aitesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_aitesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kingakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kingaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ExcelSiwakeUriageDataTableRow
            Get
                Return CType(Me.Rows(index),ExcelSiwakeUriageDataTableRow)
            End Get
        End Property
        
        Public Event ExcelSiwakeUriageDataTableRowChanging As ExcelSiwakeUriageDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeUriageDataTableRowChanged As ExcelSiwakeUriageDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeUriageDataTableRowDeleting As ExcelSiwakeUriageDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeUriageDataTableRowDeleted As ExcelSiwakeUriageDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddExcelSiwakeUriageDataTableRow(ByVal row As ExcelSiwakeUriageDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddExcelSiwakeUriageDataTableRow( _
                    ByVal tekiyou As String,  _
                    ByVal kari_zei As String,  _
                    ByVal kari_kamoku_mei As String,  _
                    ByVal kari_kamoku As String,  _
                    ByVal kari_saimoku As String,  _
                    ByVal kari_keisiki As String,  _
                    ByVal kari_youto As String,  _
                    ByVal kari_tukekaesaki As String,  _
                    ByVal kari_line As String,  _
                    ByVal kari_aitesaki As String,  _
                    ByVal kari_kingaku As String,  _
                    ByVal kasi_zei As String,  _
                    ByVal kasi_kamoku_mei As String,  _
                    ByVal kasi_kamoku As String,  _
                    ByVal kasi_saimoku As String,  _
                    ByVal kasi_keisiki As String,  _
                    ByVal kasi_youto As String,  _
                    ByVal kasi_tukekaesaki As String,  _
                    ByVal kasi_line As String,  _
                    ByVal kasi_aitesaki As String,  _
                    ByVal kasi_kingaku As String) As ExcelSiwakeUriageDataTableRow
            Dim rowExcelSiwakeUriageDataTableRow As ExcelSiwakeUriageDataTableRow = CType(Me.NewRow,ExcelSiwakeUriageDataTableRow)
            Dim columnValuesArray() As Object = New Object() {tekiyou, kari_zei, kari_kamoku_mei, kari_kamoku, kari_saimoku, kari_keisiki, kari_youto, kari_tukekaesaki, kari_line, kari_aitesaki, kari_kingaku, kasi_zei, kasi_kamoku_mei, kasi_kamoku, kasi_saimoku, kasi_keisiki, kasi_youto, kasi_tukekaesaki, kasi_line, kasi_aitesaki, kasi_kingaku}
            rowExcelSiwakeUriageDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowExcelSiwakeUriageDataTableRow)
            Return rowExcelSiwakeUriageDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ExcelSiwakeUriageDataTableDataTable = CType(MyBase.Clone,ExcelSiwakeUriageDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ExcelSiwakeUriageDataTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columntekiyou = MyBase.Columns("tekiyou")
            Me.columnkari_zei = MyBase.Columns("kari_zei")
            Me.columnkari_kamoku_mei = MyBase.Columns("kari_kamoku_mei")
            Me.columnkari_kamoku = MyBase.Columns("kari_kamoku")
            Me.columnkari_saimoku = MyBase.Columns("kari_saimoku")
            Me.columnkari_keisiki = MyBase.Columns("kari_keisiki")
            Me.columnkari_youto = MyBase.Columns("kari_youto")
            Me.columnkari_tukekaesaki = MyBase.Columns("kari_tukekaesaki")
            Me.columnkari_line = MyBase.Columns("kari_line")
            Me.columnkari_aitesaki = MyBase.Columns("kari_aitesaki")
            Me.columnkari_kingaku = MyBase.Columns("kari_kingaku")
            Me.columnkasi_zei = MyBase.Columns("kasi_zei")
            Me.columnkasi_kamoku_mei = MyBase.Columns("kasi_kamoku_mei")
            Me.columnkasi_kamoku = MyBase.Columns("kasi_kamoku")
            Me.columnkasi_saimoku = MyBase.Columns("kasi_saimoku")
            Me.columnkasi_keisiki = MyBase.Columns("kasi_keisiki")
            Me.columnkasi_youto = MyBase.Columns("kasi_youto")
            Me.columnkasi_tukekaesaki = MyBase.Columns("kasi_tukekaesaki")
            Me.columnkasi_line = MyBase.Columns("kasi_line")
            Me.columnkasi_aitesaki = MyBase.Columns("kasi_aitesaki")
            Me.columnkasi_kingaku = MyBase.Columns("kasi_kingaku")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columntekiyou = New Global.System.Data.DataColumn("tekiyou", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntekiyou)
            Me.columnkari_zei = New Global.System.Data.DataColumn("kari_zei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_zei)
            Me.columnkari_kamoku_mei = New Global.System.Data.DataColumn("kari_kamoku_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kamoku_mei)
            Me.columnkari_kamoku = New Global.System.Data.DataColumn("kari_kamoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kamoku)
            Me.columnkari_saimoku = New Global.System.Data.DataColumn("kari_saimoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_saimoku)
            Me.columnkari_keisiki = New Global.System.Data.DataColumn("kari_keisiki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_keisiki)
            Me.columnkari_youto = New Global.System.Data.DataColumn("kari_youto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_youto)
            Me.columnkari_tukekaesaki = New Global.System.Data.DataColumn("kari_tukekaesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_tukekaesaki)
            Me.columnkari_line = New Global.System.Data.DataColumn("kari_line", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_line)
            Me.columnkari_aitesaki = New Global.System.Data.DataColumn("kari_aitesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_aitesaki)
            Me.columnkari_kingaku = New Global.System.Data.DataColumn("kari_kingaku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kingaku)
            Me.columnkasi_zei = New Global.System.Data.DataColumn("kasi_zei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_zei)
            Me.columnkasi_kamoku_mei = New Global.System.Data.DataColumn("kasi_kamoku_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kamoku_mei)
            Me.columnkasi_kamoku = New Global.System.Data.DataColumn("kasi_kamoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kamoku)
            Me.columnkasi_saimoku = New Global.System.Data.DataColumn("kasi_saimoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_saimoku)
            Me.columnkasi_keisiki = New Global.System.Data.DataColumn("kasi_keisiki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_keisiki)
            Me.columnkasi_youto = New Global.System.Data.DataColumn("kasi_youto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_youto)
            Me.columnkasi_tukekaesaki = New Global.System.Data.DataColumn("kasi_tukekaesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_tukekaesaki)
            Me.columnkasi_line = New Global.System.Data.DataColumn("kasi_line", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_line)
            Me.columnkasi_aitesaki = New Global.System.Data.DataColumn("kasi_aitesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_aitesaki)
            Me.columnkasi_kingaku = New Global.System.Data.DataColumn("kasi_kingaku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kingaku)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewExcelSiwakeUriageDataTableRow() As ExcelSiwakeUriageDataTableRow
            Return CType(Me.NewRow,ExcelSiwakeUriageDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ExcelSiwakeUriageDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ExcelSiwakeUriageDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ExcelSiwakeUriageDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeUriageDataTableRowChanged(Me, New ExcelSiwakeUriageDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeUriageDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ExcelSiwakeUriageDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeUriageDataTableRowChanging(Me, New ExcelSiwakeUriageDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeUriageDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ExcelSiwakeUriageDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeUriageDataTableRowDeleted(Me, New ExcelSiwakeUriageDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeUriageDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ExcelSiwakeUriageDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeUriageDataTableRowDeleting(Me, New ExcelSiwakeUriageDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeUriageDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveExcelSiwakeUriageDataTableRow(ByVal row As ExcelSiwakeUriageDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ExcelSiwakeDataSet = New ExcelSiwakeDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ExcelSiwakeUriageDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ExcelSiwakeSiireDataTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columntekiyou As Global.System.Data.DataColumn
        
        Private columnkari_zei As Global.System.Data.DataColumn
        
        Private columnkari_kamoku_mei As Global.System.Data.DataColumn
        
        Private columnkari_kamoku As Global.System.Data.DataColumn
        
        Private columnkari_saimoku As Global.System.Data.DataColumn
        
        Private columnkari_keisiki As Global.System.Data.DataColumn
        
        Private columnkari_youto As Global.System.Data.DataColumn
        
        Private columnkari_tukekaesaki As Global.System.Data.DataColumn
        
        Private columnkari_line As Global.System.Data.DataColumn
        
        Private columnkari_aitesaki As Global.System.Data.DataColumn
        
        Private columnkari_kingaku As Global.System.Data.DataColumn
        
        Private columnkasi_zei As Global.System.Data.DataColumn
        
        Private columnkasi_kamoku_mei As Global.System.Data.DataColumn
        
        Private columnkasi_kamoku As Global.System.Data.DataColumn
        
        Private columnkasi_saimoku As Global.System.Data.DataColumn
        
        Private columnkasi_keisiki As Global.System.Data.DataColumn
        
        Private columnkasi_youto As Global.System.Data.DataColumn
        
        Private columnkasi_tukekaesaki As Global.System.Data.DataColumn
        
        Private columnkasi_line As Global.System.Data.DataColumn
        
        Private columnkasi_aitesaki As Global.System.Data.DataColumn
        
        Private columnkasi_kingaku As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ExcelSiwakeSiireDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tekiyouColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntekiyou
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_zeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_zei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kamoku_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kamoku_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kamokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kamoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_saimokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_saimoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_keisikiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_keisiki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_youtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_youto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_tukekaesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_tukekaesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_lineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_line
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_aitesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_aitesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kingakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kingaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_zeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_zei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kamoku_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kamoku_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kamokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kamoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_saimokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_saimoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_keisikiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_keisiki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_youtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_youto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_tukekaesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_tukekaesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_lineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_line
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_aitesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_aitesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kingakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kingaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ExcelSiwakeSiireDataTableRow
            Get
                Return CType(Me.Rows(index),ExcelSiwakeSiireDataTableRow)
            End Get
        End Property
        
        Public Event ExcelSiwakeSiireDataTableRowChanging As ExcelSiwakeSiireDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeSiireDataTableRowChanged As ExcelSiwakeSiireDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeSiireDataTableRowDeleting As ExcelSiwakeSiireDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeSiireDataTableRowDeleted As ExcelSiwakeSiireDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddExcelSiwakeSiireDataTableRow(ByVal row As ExcelSiwakeSiireDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddExcelSiwakeSiireDataTableRow( _
                    ByVal tekiyou As String,  _
                    ByVal kari_zei As String,  _
                    ByVal kari_kamoku_mei As String,  _
                    ByVal kari_kamoku As String,  _
                    ByVal kari_saimoku As String,  _
                    ByVal kari_keisiki As String,  _
                    ByVal kari_youto As String,  _
                    ByVal kari_tukekaesaki As String,  _
                    ByVal kari_line As String,  _
                    ByVal kari_aitesaki As String,  _
                    ByVal kari_kingaku As String,  _
                    ByVal kasi_zei As String,  _
                    ByVal kasi_kamoku_mei As String,  _
                    ByVal kasi_kamoku As String,  _
                    ByVal kasi_saimoku As String,  _
                    ByVal kasi_keisiki As String,  _
                    ByVal kasi_youto As String,  _
                    ByVal kasi_tukekaesaki As String,  _
                    ByVal kasi_line As String,  _
                    ByVal kasi_aitesaki As String,  _
                    ByVal kasi_kingaku As String) As ExcelSiwakeSiireDataTableRow
            Dim rowExcelSiwakeSiireDataTableRow As ExcelSiwakeSiireDataTableRow = CType(Me.NewRow,ExcelSiwakeSiireDataTableRow)
            Dim columnValuesArray() As Object = New Object() {tekiyou, kari_zei, kari_kamoku_mei, kari_kamoku, kari_saimoku, kari_keisiki, kari_youto, kari_tukekaesaki, kari_line, kari_aitesaki, kari_kingaku, kasi_zei, kasi_kamoku_mei, kasi_kamoku, kasi_saimoku, kasi_keisiki, kasi_youto, kasi_tukekaesaki, kasi_line, kasi_aitesaki, kasi_kingaku}
            rowExcelSiwakeSiireDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowExcelSiwakeSiireDataTableRow)
            Return rowExcelSiwakeSiireDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ExcelSiwakeSiireDataTableDataTable = CType(MyBase.Clone,ExcelSiwakeSiireDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ExcelSiwakeSiireDataTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columntekiyou = MyBase.Columns("tekiyou")
            Me.columnkari_zei = MyBase.Columns("kari_zei")
            Me.columnkari_kamoku_mei = MyBase.Columns("kari_kamoku_mei")
            Me.columnkari_kamoku = MyBase.Columns("kari_kamoku")
            Me.columnkari_saimoku = MyBase.Columns("kari_saimoku")
            Me.columnkari_keisiki = MyBase.Columns("kari_keisiki")
            Me.columnkari_youto = MyBase.Columns("kari_youto")
            Me.columnkari_tukekaesaki = MyBase.Columns("kari_tukekaesaki")
            Me.columnkari_line = MyBase.Columns("kari_line")
            Me.columnkari_aitesaki = MyBase.Columns("kari_aitesaki")
            Me.columnkari_kingaku = MyBase.Columns("kari_kingaku")
            Me.columnkasi_zei = MyBase.Columns("kasi_zei")
            Me.columnkasi_kamoku_mei = MyBase.Columns("kasi_kamoku_mei")
            Me.columnkasi_kamoku = MyBase.Columns("kasi_kamoku")
            Me.columnkasi_saimoku = MyBase.Columns("kasi_saimoku")
            Me.columnkasi_keisiki = MyBase.Columns("kasi_keisiki")
            Me.columnkasi_youto = MyBase.Columns("kasi_youto")
            Me.columnkasi_tukekaesaki = MyBase.Columns("kasi_tukekaesaki")
            Me.columnkasi_line = MyBase.Columns("kasi_line")
            Me.columnkasi_aitesaki = MyBase.Columns("kasi_aitesaki")
            Me.columnkasi_kingaku = MyBase.Columns("kasi_kingaku")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columntekiyou = New Global.System.Data.DataColumn("tekiyou", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntekiyou)
            Me.columnkari_zei = New Global.System.Data.DataColumn("kari_zei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_zei)
            Me.columnkari_kamoku_mei = New Global.System.Data.DataColumn("kari_kamoku_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kamoku_mei)
            Me.columnkari_kamoku = New Global.System.Data.DataColumn("kari_kamoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kamoku)
            Me.columnkari_saimoku = New Global.System.Data.DataColumn("kari_saimoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_saimoku)
            Me.columnkari_keisiki = New Global.System.Data.DataColumn("kari_keisiki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_keisiki)
            Me.columnkari_youto = New Global.System.Data.DataColumn("kari_youto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_youto)
            Me.columnkari_tukekaesaki = New Global.System.Data.DataColumn("kari_tukekaesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_tukekaesaki)
            Me.columnkari_line = New Global.System.Data.DataColumn("kari_line", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_line)
            Me.columnkari_aitesaki = New Global.System.Data.DataColumn("kari_aitesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_aitesaki)
            Me.columnkari_kingaku = New Global.System.Data.DataColumn("kari_kingaku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kingaku)
            Me.columnkasi_zei = New Global.System.Data.DataColumn("kasi_zei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_zei)
            Me.columnkasi_kamoku_mei = New Global.System.Data.DataColumn("kasi_kamoku_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kamoku_mei)
            Me.columnkasi_kamoku = New Global.System.Data.DataColumn("kasi_kamoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kamoku)
            Me.columnkasi_saimoku = New Global.System.Data.DataColumn("kasi_saimoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_saimoku)
            Me.columnkasi_keisiki = New Global.System.Data.DataColumn("kasi_keisiki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_keisiki)
            Me.columnkasi_youto = New Global.System.Data.DataColumn("kasi_youto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_youto)
            Me.columnkasi_tukekaesaki = New Global.System.Data.DataColumn("kasi_tukekaesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_tukekaesaki)
            Me.columnkasi_line = New Global.System.Data.DataColumn("kasi_line", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_line)
            Me.columnkasi_aitesaki = New Global.System.Data.DataColumn("kasi_aitesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_aitesaki)
            Me.columnkasi_kingaku = New Global.System.Data.DataColumn("kasi_kingaku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kingaku)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewExcelSiwakeSiireDataTableRow() As ExcelSiwakeSiireDataTableRow
            Return CType(Me.NewRow,ExcelSiwakeSiireDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ExcelSiwakeSiireDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ExcelSiwakeSiireDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ExcelSiwakeSiireDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeSiireDataTableRowChanged(Me, New ExcelSiwakeSiireDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeSiireDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ExcelSiwakeSiireDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeSiireDataTableRowChanging(Me, New ExcelSiwakeSiireDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeSiireDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ExcelSiwakeSiireDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeSiireDataTableRowDeleted(Me, New ExcelSiwakeSiireDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeSiireDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ExcelSiwakeSiireDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeSiireDataTableRowDeleting(Me, New ExcelSiwakeSiireDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeSiireDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveExcelSiwakeSiireDataTableRow(ByVal row As ExcelSiwakeSiireDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ExcelSiwakeDataSet = New ExcelSiwakeDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ExcelSiwakeSiireDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ExcelSiwakeNyuukinDataTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columntekiyou As Global.System.Data.DataColumn
        
        Private columnkari_zei As Global.System.Data.DataColumn
        
        Private columnkari_kamoku_mei As Global.System.Data.DataColumn
        
        Private columnkari_kamoku As Global.System.Data.DataColumn
        
        Private columnkari_saimoku As Global.System.Data.DataColumn
        
        Private columnkari_keisiki As Global.System.Data.DataColumn
        
        Private columnkari_youto As Global.System.Data.DataColumn
        
        Private columnkari_tukekaesaki As Global.System.Data.DataColumn
        
        Private columnkari_line As Global.System.Data.DataColumn
        
        Private columnkari_aitesaki As Global.System.Data.DataColumn
        
        Private columnkari_kingaku As Global.System.Data.DataColumn
        
        Private columnkasi_zei As Global.System.Data.DataColumn
        
        Private columnkasi_kamoku_mei As Global.System.Data.DataColumn
        
        Private columnkasi_kamoku As Global.System.Data.DataColumn
        
        Private columnkasi_saimoku As Global.System.Data.DataColumn
        
        Private columnkasi_keisiki As Global.System.Data.DataColumn
        
        Private columnkasi_youto As Global.System.Data.DataColumn
        
        Private columnkasi_tukekaesaki As Global.System.Data.DataColumn
        
        Private columnkasi_line As Global.System.Data.DataColumn
        
        Private columnkasi_aitesaki As Global.System.Data.DataColumn
        
        Private columnkasi_kingaku As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ExcelSiwakeNyuukinDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tekiyouColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntekiyou
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_zeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_zei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kamoku_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kamoku_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kamokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kamoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_saimokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_saimoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_keisikiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_keisiki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_youtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_youto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_tukekaesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_tukekaesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_lineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_line
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_aitesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_aitesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kari_kingakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkari_kingaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_zeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_zei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kamoku_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kamoku_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kamokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kamoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_saimokuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_saimoku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_keisikiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_keisiki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_youtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_youto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_tukekaesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_tukekaesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_lineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_line
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_aitesakiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_aitesaki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kasi_kingakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkasi_kingaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ExcelSiwakeNyuukinDataTableRow
            Get
                Return CType(Me.Rows(index),ExcelSiwakeNyuukinDataTableRow)
            End Get
        End Property
        
        Public Event ExcelSiwakeNyuukinDataTableRowChanging As ExcelSiwakeNyuukinDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeNyuukinDataTableRowChanged As ExcelSiwakeNyuukinDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeNyuukinDataTableRowDeleting As ExcelSiwakeNyuukinDataTableRowChangeEventHandler
        
        Public Event ExcelSiwakeNyuukinDataTableRowDeleted As ExcelSiwakeNyuukinDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddExcelSiwakeNyuukinDataTableRow(ByVal row As ExcelSiwakeNyuukinDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddExcelSiwakeNyuukinDataTableRow( _
                    ByVal tekiyou As String,  _
                    ByVal kari_zei As String,  _
                    ByVal kari_kamoku_mei As String,  _
                    ByVal kari_kamoku As String,  _
                    ByVal kari_saimoku As String,  _
                    ByVal kari_keisiki As String,  _
                    ByVal kari_youto As String,  _
                    ByVal kari_tukekaesaki As String,  _
                    ByVal kari_line As String,  _
                    ByVal kari_aitesaki As String,  _
                    ByVal kari_kingaku As String,  _
                    ByVal kasi_zei As String,  _
                    ByVal kasi_kamoku_mei As String,  _
                    ByVal kasi_kamoku As String,  _
                    ByVal kasi_saimoku As String,  _
                    ByVal kasi_keisiki As String,  _
                    ByVal kasi_youto As String,  _
                    ByVal kasi_tukekaesaki As String,  _
                    ByVal kasi_line As String,  _
                    ByVal kasi_aitesaki As String,  _
                    ByVal kasi_kingaku As String) As ExcelSiwakeNyuukinDataTableRow
            Dim rowExcelSiwakeNyuukinDataTableRow As ExcelSiwakeNyuukinDataTableRow = CType(Me.NewRow,ExcelSiwakeNyuukinDataTableRow)
            Dim columnValuesArray() As Object = New Object() {tekiyou, kari_zei, kari_kamoku_mei, kari_kamoku, kari_saimoku, kari_keisiki, kari_youto, kari_tukekaesaki, kari_line, kari_aitesaki, kari_kingaku, kasi_zei, kasi_kamoku_mei, kasi_kamoku, kasi_saimoku, kasi_keisiki, kasi_youto, kasi_tukekaesaki, kasi_line, kasi_aitesaki, kasi_kingaku}
            rowExcelSiwakeNyuukinDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowExcelSiwakeNyuukinDataTableRow)
            Return rowExcelSiwakeNyuukinDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ExcelSiwakeNyuukinDataTableDataTable = CType(MyBase.Clone,ExcelSiwakeNyuukinDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ExcelSiwakeNyuukinDataTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columntekiyou = MyBase.Columns("tekiyou")
            Me.columnkari_zei = MyBase.Columns("kari_zei")
            Me.columnkari_kamoku_mei = MyBase.Columns("kari_kamoku_mei")
            Me.columnkari_kamoku = MyBase.Columns("kari_kamoku")
            Me.columnkari_saimoku = MyBase.Columns("kari_saimoku")
            Me.columnkari_keisiki = MyBase.Columns("kari_keisiki")
            Me.columnkari_youto = MyBase.Columns("kari_youto")
            Me.columnkari_tukekaesaki = MyBase.Columns("kari_tukekaesaki")
            Me.columnkari_line = MyBase.Columns("kari_line")
            Me.columnkari_aitesaki = MyBase.Columns("kari_aitesaki")
            Me.columnkari_kingaku = MyBase.Columns("kari_kingaku")
            Me.columnkasi_zei = MyBase.Columns("kasi_zei")
            Me.columnkasi_kamoku_mei = MyBase.Columns("kasi_kamoku_mei")
            Me.columnkasi_kamoku = MyBase.Columns("kasi_kamoku")
            Me.columnkasi_saimoku = MyBase.Columns("kasi_saimoku")
            Me.columnkasi_keisiki = MyBase.Columns("kasi_keisiki")
            Me.columnkasi_youto = MyBase.Columns("kasi_youto")
            Me.columnkasi_tukekaesaki = MyBase.Columns("kasi_tukekaesaki")
            Me.columnkasi_line = MyBase.Columns("kasi_line")
            Me.columnkasi_aitesaki = MyBase.Columns("kasi_aitesaki")
            Me.columnkasi_kingaku = MyBase.Columns("kasi_kingaku")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columntekiyou = New Global.System.Data.DataColumn("tekiyou", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntekiyou)
            Me.columnkari_zei = New Global.System.Data.DataColumn("kari_zei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_zei)
            Me.columnkari_kamoku_mei = New Global.System.Data.DataColumn("kari_kamoku_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kamoku_mei)
            Me.columnkari_kamoku = New Global.System.Data.DataColumn("kari_kamoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kamoku)
            Me.columnkari_saimoku = New Global.System.Data.DataColumn("kari_saimoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_saimoku)
            Me.columnkari_keisiki = New Global.System.Data.DataColumn("kari_keisiki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_keisiki)
            Me.columnkari_youto = New Global.System.Data.DataColumn("kari_youto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_youto)
            Me.columnkari_tukekaesaki = New Global.System.Data.DataColumn("kari_tukekaesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_tukekaesaki)
            Me.columnkari_line = New Global.System.Data.DataColumn("kari_line", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_line)
            Me.columnkari_aitesaki = New Global.System.Data.DataColumn("kari_aitesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_aitesaki)
            Me.columnkari_kingaku = New Global.System.Data.DataColumn("kari_kingaku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkari_kingaku)
            Me.columnkasi_zei = New Global.System.Data.DataColumn("kasi_zei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_zei)
            Me.columnkasi_kamoku_mei = New Global.System.Data.DataColumn("kasi_kamoku_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kamoku_mei)
            Me.columnkasi_kamoku = New Global.System.Data.DataColumn("kasi_kamoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kamoku)
            Me.columnkasi_saimoku = New Global.System.Data.DataColumn("kasi_saimoku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_saimoku)
            Me.columnkasi_keisiki = New Global.System.Data.DataColumn("kasi_keisiki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_keisiki)
            Me.columnkasi_youto = New Global.System.Data.DataColumn("kasi_youto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_youto)
            Me.columnkasi_tukekaesaki = New Global.System.Data.DataColumn("kasi_tukekaesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_tukekaesaki)
            Me.columnkasi_line = New Global.System.Data.DataColumn("kasi_line", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_line)
            Me.columnkasi_aitesaki = New Global.System.Data.DataColumn("kasi_aitesaki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_aitesaki)
            Me.columnkasi_kingaku = New Global.System.Data.DataColumn("kasi_kingaku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkasi_kingaku)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewExcelSiwakeNyuukinDataTableRow() As ExcelSiwakeNyuukinDataTableRow
            Return CType(Me.NewRow,ExcelSiwakeNyuukinDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ExcelSiwakeNyuukinDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ExcelSiwakeNyuukinDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ExcelSiwakeNyuukinDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeNyuukinDataTableRowChanged(Me, New ExcelSiwakeNyuukinDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeNyuukinDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ExcelSiwakeNyuukinDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeNyuukinDataTableRowChanging(Me, New ExcelSiwakeNyuukinDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeNyuukinDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ExcelSiwakeNyuukinDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeNyuukinDataTableRowDeleted(Me, New ExcelSiwakeNyuukinDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeNyuukinDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ExcelSiwakeNyuukinDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent ExcelSiwakeNyuukinDataTableRowDeleting(Me, New ExcelSiwakeNyuukinDataTableRowChangeEvent(CType(e.Row,ExcelSiwakeNyuukinDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveExcelSiwakeNyuukinDataTableRow(ByVal row As ExcelSiwakeNyuukinDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ExcelSiwakeDataSet = New ExcelSiwakeDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ExcelSiwakeNyuukinDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class UrikakekinZandakaHyouDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndatakbn As Global.System.Data.DataColumn
        
        Private columntokuisaki_cd As Global.System.Data.DataColumn
        
        Private columntokuisaki_mei1 As Global.System.Data.DataColumn
        
        Private columntokuisaki_mei2 As Global.System.Data.DataColumn
        
        Private columnkurikosi_zanndaka As Global.System.Data.DataColumn
        
        Private columngenkin_furikomi As Global.System.Data.DataColumn
        
        Private columntegata As Global.System.Data.DataColumn
        
        Private columnsousaihoka As Global.System.Data.DataColumn
        
        Private columnnyuukin_goukei As Global.System.Data.DataColumn
        
        Private columnmikaisyuu_zanndaka As Global.System.Data.DataColumn
        
        Private columnuriagedaka As Global.System.Data.DataColumn
        
        Private columnsyouhizeinado As Global.System.Data.DataColumn
        
        Private columnsasihiki_zanndaka As Global.System.Data.DataColumn
        
        Private columntegata_zanndaka As Global.System.Data.DataColumn
        
        Private columnuriage_saiken As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "UrikakekinZandakaHyou"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property datakbnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndatakbn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tokuisaki_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntokuisaki_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tokuisaki_mei1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntokuisaki_mei1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tokuisaki_mei2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntokuisaki_mei2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kurikosi_zanndakaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkurikosi_zanndaka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property genkin_furikomiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngenkin_furikomi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tegataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntegata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sousaihokaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsousaihoka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nyuukin_goukeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnyuukin_goukei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mikaisyuu_zanndakaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmikaisyuu_zanndaka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property uriagedakaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuriagedaka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property syouhizeinadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsyouhizeinado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sasihiki_zanndakaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsasihiki_zanndaka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tegata_zanndakaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntegata_zanndaka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property uriage_saikenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuriage_saiken
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As UrikakekinZandakaHyouRow
            Get
                Return CType(Me.Rows(index),UrikakekinZandakaHyouRow)
            End Get
        End Property
        
        Public Event UrikakekinZandakaHyouRowChanging As UrikakekinZandakaHyouRowChangeEventHandler
        
        Public Event UrikakekinZandakaHyouRowChanged As UrikakekinZandakaHyouRowChangeEventHandler
        
        Public Event UrikakekinZandakaHyouRowDeleting As UrikakekinZandakaHyouRowChangeEventHandler
        
        Public Event UrikakekinZandakaHyouRowDeleted As UrikakekinZandakaHyouRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddUrikakekinZandakaHyouRow(ByVal row As UrikakekinZandakaHyouRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddUrikakekinZandakaHyouRow(ByVal datakbn As String, ByVal tokuisaki_cd As String, ByVal tokuisaki_mei1 As String, ByVal tokuisaki_mei2 As String, ByVal kurikosi_zanndaka As String, ByVal genkin_furikomi As String, ByVal tegata As String, ByVal sousaihoka As String, ByVal nyuukin_goukei As String, ByVal mikaisyuu_zanndaka As String, ByVal uriagedaka As String, ByVal syouhizeinado As String, ByVal sasihiki_zanndaka As String, ByVal tegata_zanndaka As String, ByVal uriage_saiken As String) As UrikakekinZandakaHyouRow
            Dim rowUrikakekinZandakaHyouRow As UrikakekinZandakaHyouRow = CType(Me.NewRow,UrikakekinZandakaHyouRow)
            Dim columnValuesArray() As Object = New Object() {datakbn, tokuisaki_cd, tokuisaki_mei1, tokuisaki_mei2, kurikosi_zanndaka, genkin_furikomi, tegata, sousaihoka, nyuukin_goukei, mikaisyuu_zanndaka, uriagedaka, syouhizeinado, sasihiki_zanndaka, tegata_zanndaka, uriage_saiken}
            rowUrikakekinZandakaHyouRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUrikakekinZandakaHyouRow)
            Return rowUrikakekinZandakaHyouRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UrikakekinZandakaHyouDataTable = CType(MyBase.Clone,UrikakekinZandakaHyouDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UrikakekinZandakaHyouDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndatakbn = MyBase.Columns("datakbn")
            Me.columntokuisaki_cd = MyBase.Columns("tokuisaki_cd")
            Me.columntokuisaki_mei1 = MyBase.Columns("tokuisaki_mei1")
            Me.columntokuisaki_mei2 = MyBase.Columns("tokuisaki_mei2")
            Me.columnkurikosi_zanndaka = MyBase.Columns("kurikosi_zanndaka")
            Me.columngenkin_furikomi = MyBase.Columns("genkin_furikomi")
            Me.columntegata = MyBase.Columns("tegata")
            Me.columnsousaihoka = MyBase.Columns("sousaihoka")
            Me.columnnyuukin_goukei = MyBase.Columns("nyuukin_goukei")
            Me.columnmikaisyuu_zanndaka = MyBase.Columns("mikaisyuu_zanndaka")
            Me.columnuriagedaka = MyBase.Columns("uriagedaka")
            Me.columnsyouhizeinado = MyBase.Columns("syouhizeinado")
            Me.columnsasihiki_zanndaka = MyBase.Columns("sasihiki_zanndaka")
            Me.columntegata_zanndaka = MyBase.Columns("tegata_zanndaka")
            Me.columnuriage_saiken = MyBase.Columns("uriage_saiken")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndatakbn = New Global.System.Data.DataColumn("datakbn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndatakbn)
            Me.columntokuisaki_cd = New Global.System.Data.DataColumn("tokuisaki_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntokuisaki_cd)
            Me.columntokuisaki_mei1 = New Global.System.Data.DataColumn("tokuisaki_mei1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntokuisaki_mei1)
            Me.columntokuisaki_mei2 = New Global.System.Data.DataColumn("tokuisaki_mei2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntokuisaki_mei2)
            Me.columnkurikosi_zanndaka = New Global.System.Data.DataColumn("kurikosi_zanndaka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkurikosi_zanndaka)
            Me.columngenkin_furikomi = New Global.System.Data.DataColumn("genkin_furikomi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngenkin_furikomi)
            Me.columntegata = New Global.System.Data.DataColumn("tegata", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntegata)
            Me.columnsousaihoka = New Global.System.Data.DataColumn("sousaihoka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsousaihoka)
            Me.columnnyuukin_goukei = New Global.System.Data.DataColumn("nyuukin_goukei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnyuukin_goukei)
            Me.columnmikaisyuu_zanndaka = New Global.System.Data.DataColumn("mikaisyuu_zanndaka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmikaisyuu_zanndaka)
            Me.columnuriagedaka = New Global.System.Data.DataColumn("uriagedaka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuriagedaka)
            Me.columnsyouhizeinado = New Global.System.Data.DataColumn("syouhizeinado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsyouhizeinado)
            Me.columnsasihiki_zanndaka = New Global.System.Data.DataColumn("sasihiki_zanndaka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsasihiki_zanndaka)
            Me.columntegata_zanndaka = New Global.System.Data.DataColumn("tegata_zanndaka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntegata_zanndaka)
            Me.columnuriage_saiken = New Global.System.Data.DataColumn("uriage_saiken", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuriage_saiken)
            Me.columndatakbn.Caption = "tekiyou"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewUrikakekinZandakaHyouRow() As UrikakekinZandakaHyouRow
            Return CType(Me.NewRow,UrikakekinZandakaHyouRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UrikakekinZandakaHyouRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UrikakekinZandakaHyouRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UrikakekinZandakaHyouRowChangedEvent) Is Nothing) Then
                RaiseEvent UrikakekinZandakaHyouRowChanged(Me, New UrikakekinZandakaHyouRowChangeEvent(CType(e.Row,UrikakekinZandakaHyouRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UrikakekinZandakaHyouRowChangingEvent) Is Nothing) Then
                RaiseEvent UrikakekinZandakaHyouRowChanging(Me, New UrikakekinZandakaHyouRowChangeEvent(CType(e.Row,UrikakekinZandakaHyouRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UrikakekinZandakaHyouRowDeletedEvent) Is Nothing) Then
                RaiseEvent UrikakekinZandakaHyouRowDeleted(Me, New UrikakekinZandakaHyouRowChangeEvent(CType(e.Row,UrikakekinZandakaHyouRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UrikakekinZandakaHyouRowDeletingEvent) Is Nothing) Then
                RaiseEvent UrikakekinZandakaHyouRowDeleting(Me, New UrikakekinZandakaHyouRowChangeEvent(CType(e.Row,UrikakekinZandakaHyouRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveUrikakekinZandakaHyouRow(ByVal row As UrikakekinZandakaHyouRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ExcelSiwakeDataSet = New ExcelSiwakeDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UrikakekinZandakaHyouDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KaikakekinZandakaHyouDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndatakbn As Global.System.Data.DataColumn
        
        Private columntokuisaki_cd As Global.System.Data.DataColumn
        
        Private columntokuisaki_mei1 As Global.System.Data.DataColumn
        
        Private columntokuisaki_mei2 As Global.System.Data.DataColumn
        
        Private columnkurikosi_zanndaka As Global.System.Data.DataColumn
        
        Private columnfurikomi As Global.System.Data.DataColumn
        
        Private columnsousai As Global.System.Data.DataColumn
        
        Private columngoukei As Global.System.Data.DataColumn
        
        Private columngou_zandaka As Global.System.Data.DataColumn
        
        Private columnsiire_gaku As Global.System.Data.DataColumn
        
        Private columnsotozei_gaku As Global.System.Data.DataColumn
        
        Private columnsai_zandaka As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KaikakekinZandakaHyou"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property datakbnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndatakbn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tokuisaki_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntokuisaki_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tokuisaki_mei1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntokuisaki_mei1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tokuisaki_mei2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntokuisaki_mei2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kurikosi_zanndakaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkurikosi_zanndaka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property furikomiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfurikomi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sousaiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsousai
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property goukeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngoukei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property gou_zandakaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngou_zandaka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_gakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_gaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sotozei_gakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsotozei_gaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sai_zandakaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsai_zandaka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KaikakekinZandakaHyouRow
            Get
                Return CType(Me.Rows(index),KaikakekinZandakaHyouRow)
            End Get
        End Property
        
        Public Event KaikakekinZandakaHyouRowChanging As KaikakekinZandakaHyouRowChangeEventHandler
        
        Public Event KaikakekinZandakaHyouRowChanged As KaikakekinZandakaHyouRowChangeEventHandler
        
        Public Event KaikakekinZandakaHyouRowDeleting As KaikakekinZandakaHyouRowChangeEventHandler
        
        Public Event KaikakekinZandakaHyouRowDeleted As KaikakekinZandakaHyouRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddKaikakekinZandakaHyouRow(ByVal row As KaikakekinZandakaHyouRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddKaikakekinZandakaHyouRow(ByVal datakbn As String, ByVal tokuisaki_cd As String, ByVal tokuisaki_mei1 As String, ByVal tokuisaki_mei2 As String, ByVal kurikosi_zanndaka As String, ByVal furikomi As String, ByVal sousai As String, ByVal goukei As String, ByVal gou_zandaka As String, ByVal siire_gaku As String, ByVal sotozei_gaku As String, ByVal sai_zandaka As String) As KaikakekinZandakaHyouRow
            Dim rowKaikakekinZandakaHyouRow As KaikakekinZandakaHyouRow = CType(Me.NewRow,KaikakekinZandakaHyouRow)
            Dim columnValuesArray() As Object = New Object() {datakbn, tokuisaki_cd, tokuisaki_mei1, tokuisaki_mei2, kurikosi_zanndaka, furikomi, sousai, goukei, gou_zandaka, siire_gaku, sotozei_gaku, sai_zandaka}
            rowKaikakekinZandakaHyouRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKaikakekinZandakaHyouRow)
            Return rowKaikakekinZandakaHyouRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KaikakekinZandakaHyouDataTable = CType(MyBase.Clone,KaikakekinZandakaHyouDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KaikakekinZandakaHyouDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndatakbn = MyBase.Columns("datakbn")
            Me.columntokuisaki_cd = MyBase.Columns("tokuisaki_cd")
            Me.columntokuisaki_mei1 = MyBase.Columns("tokuisaki_mei1")
            Me.columntokuisaki_mei2 = MyBase.Columns("tokuisaki_mei2")
            Me.columnkurikosi_zanndaka = MyBase.Columns("kurikosi_zanndaka")
            Me.columnfurikomi = MyBase.Columns("furikomi")
            Me.columnsousai = MyBase.Columns("sousai")
            Me.columngoukei = MyBase.Columns("goukei")
            Me.columngou_zandaka = MyBase.Columns("gou_zandaka")
            Me.columnsiire_gaku = MyBase.Columns("siire_gaku")
            Me.columnsotozei_gaku = MyBase.Columns("sotozei_gaku")
            Me.columnsai_zandaka = MyBase.Columns("sai_zandaka")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndatakbn = New Global.System.Data.DataColumn("datakbn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndatakbn)
            Me.columntokuisaki_cd = New Global.System.Data.DataColumn("tokuisaki_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntokuisaki_cd)
            Me.columntokuisaki_mei1 = New Global.System.Data.DataColumn("tokuisaki_mei1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntokuisaki_mei1)
            Me.columntokuisaki_mei2 = New Global.System.Data.DataColumn("tokuisaki_mei2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntokuisaki_mei2)
            Me.columnkurikosi_zanndaka = New Global.System.Data.DataColumn("kurikosi_zanndaka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkurikosi_zanndaka)
            Me.columnfurikomi = New Global.System.Data.DataColumn("furikomi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfurikomi)
            Me.columnsousai = New Global.System.Data.DataColumn("sousai", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsousai)
            Me.columngoukei = New Global.System.Data.DataColumn("goukei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngoukei)
            Me.columngou_zandaka = New Global.System.Data.DataColumn("gou_zandaka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngou_zandaka)
            Me.columnsiire_gaku = New Global.System.Data.DataColumn("siire_gaku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_gaku)
            Me.columnsotozei_gaku = New Global.System.Data.DataColumn("sotozei_gaku", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsotozei_gaku)
            Me.columnsai_zandaka = New Global.System.Data.DataColumn("sai_zandaka", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsai_zandaka)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewKaikakekinZandakaHyouRow() As KaikakekinZandakaHyouRow
            Return CType(Me.NewRow,KaikakekinZandakaHyouRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KaikakekinZandakaHyouRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KaikakekinZandakaHyouRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KaikakekinZandakaHyouRowChangedEvent) Is Nothing) Then
                RaiseEvent KaikakekinZandakaHyouRowChanged(Me, New KaikakekinZandakaHyouRowChangeEvent(CType(e.Row,KaikakekinZandakaHyouRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KaikakekinZandakaHyouRowChangingEvent) Is Nothing) Then
                RaiseEvent KaikakekinZandakaHyouRowChanging(Me, New KaikakekinZandakaHyouRowChangeEvent(CType(e.Row,KaikakekinZandakaHyouRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KaikakekinZandakaHyouRowDeletedEvent) Is Nothing) Then
                RaiseEvent KaikakekinZandakaHyouRowDeleted(Me, New KaikakekinZandakaHyouRowChangeEvent(CType(e.Row,KaikakekinZandakaHyouRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KaikakekinZandakaHyouRowDeletingEvent) Is Nothing) Then
                RaiseEvent KaikakekinZandakaHyouRowDeleting(Me, New KaikakekinZandakaHyouRowChangeEvent(CType(e.Row,KaikakekinZandakaHyouRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveKaikakekinZandakaHyouRow(ByVal row As KaikakekinZandakaHyouRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As ExcelSiwakeDataSet = New ExcelSiwakeDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KaikakekinZandakaHyouDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ExcelSiwakeUriageDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableExcelSiwakeUriageDataTable As ExcelSiwakeUriageDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableExcelSiwakeUriageDataTable = CType(Me.Table,ExcelSiwakeUriageDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tekiyou() As String
            Get
                If Me.IstekiyouNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.tekiyouColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.tekiyouColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_zei() As String
            Get
                If Me.Iskari_zeiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_zeiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_zeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kamoku_mei() As String
            Get
                If Me.Iskari_kamoku_meiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_kamoku_meiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_kamoku_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kamoku() As String
            Get
                If Me.Iskari_kamokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_kamokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_kamokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_saimoku() As String
            Get
                If Me.Iskari_saimokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_saimokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_saimokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_keisiki() As String
            Get
                If Me.Iskari_keisikiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_keisikiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_keisikiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_youto() As String
            Get
                If Me.Iskari_youtoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_youtoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_youtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_tukekaesaki() As String
            Get
                If Me.Iskari_tukekaesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_tukekaesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_tukekaesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_line() As String
            Get
                If Me.Iskari_lineNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_lineColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_lineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_aitesaki() As String
            Get
                If Me.Iskari_aitesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_aitesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_aitesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kingaku() As String
            Get
                If Me.Iskari_kingakuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kari_kingakuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kari_kingakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_zei() As String
            Get
                If Me.Iskasi_zeiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_zeiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_zeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kamoku_mei() As String
            Get
                If Me.Iskasi_kamoku_meiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_kamoku_meiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_kamoku_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kamoku() As String
            Get
                If Me.Iskasi_kamokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_kamokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_kamokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_saimoku() As String
            Get
                If Me.Iskasi_saimokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_saimokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_saimokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_keisiki() As String
            Get
                If Me.Iskasi_keisikiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_keisikiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_keisikiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_youto() As String
            Get
                If Me.Iskasi_youtoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_youtoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_youtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_tukekaesaki() As String
            Get
                If Me.Iskasi_tukekaesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_tukekaesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_tukekaesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_line() As String
            Get
                If Me.Iskasi_lineNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_lineColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_lineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_aitesaki() As String
            Get
                If Me.Iskasi_aitesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_aitesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_aitesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kingaku() As String
            Get
                If Me.Iskasi_kingakuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeUriageDataTable.kasi_kingakuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeUriageDataTable.kasi_kingakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstekiyouNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.tekiyouColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettekiyouNull()
            Me(Me.tableExcelSiwakeUriageDataTable.tekiyouColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_zeiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_zeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_zeiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_zeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kamoku_meiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_kamoku_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kamoku_meiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_kamoku_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kamokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_kamokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kamokuNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_kamokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_saimokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_saimokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_saimokuNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_saimokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_keisikiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_keisikiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_keisikiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_keisikiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_youtoNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_youtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_youtoNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_youtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_tukekaesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_tukekaesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_tukekaesakiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_tukekaesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_lineNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_lineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_lineNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_lineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_aitesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_aitesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_aitesakiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_aitesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kingakuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kari_kingakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kingakuNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kari_kingakuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_zeiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_zeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_zeiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_zeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kamoku_meiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_kamoku_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kamoku_meiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_kamoku_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kamokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_kamokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kamokuNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_kamokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_saimokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_saimokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_saimokuNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_saimokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_keisikiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_keisikiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_keisikiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_keisikiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_youtoNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_youtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_youtoNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_youtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_tukekaesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_tukekaesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_tukekaesakiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_tukekaesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_lineNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_lineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_lineNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_lineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_aitesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_aitesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_aitesakiNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_aitesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kingakuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeUriageDataTable.kasi_kingakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kingakuNull()
            Me(Me.tableExcelSiwakeUriageDataTable.kasi_kingakuColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ExcelSiwakeSiireDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableExcelSiwakeSiireDataTable As ExcelSiwakeSiireDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableExcelSiwakeSiireDataTable = CType(Me.Table,ExcelSiwakeSiireDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tekiyou() As String
            Get
                If Me.IstekiyouNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.tekiyouColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.tekiyouColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_zei() As String
            Get
                If Me.Iskari_zeiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_zeiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_zeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kamoku_mei() As String
            Get
                If Me.Iskari_kamoku_meiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_kamoku_meiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_kamoku_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kamoku() As String
            Get
                If Me.Iskari_kamokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_kamokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_kamokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_saimoku() As String
            Get
                If Me.Iskari_saimokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_saimokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_saimokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_keisiki() As String
            Get
                If Me.Iskari_keisikiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_keisikiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_keisikiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_youto() As String
            Get
                If Me.Iskari_youtoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_youtoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_youtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_tukekaesaki() As String
            Get
                If Me.Iskari_tukekaesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_tukekaesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_tukekaesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_line() As String
            Get
                If Me.Iskari_lineNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_lineColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_lineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_aitesaki() As String
            Get
                If Me.Iskari_aitesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_aitesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_aitesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kingaku() As String
            Get
                If Me.Iskari_kingakuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kari_kingakuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kari_kingakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_zei() As String
            Get
                If Me.Iskasi_zeiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_zeiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_zeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kamoku_mei() As String
            Get
                If Me.Iskasi_kamoku_meiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_kamoku_meiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_kamoku_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kamoku() As String
            Get
                If Me.Iskasi_kamokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_kamokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_kamokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_saimoku() As String
            Get
                If Me.Iskasi_saimokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_saimokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_saimokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_keisiki() As String
            Get
                If Me.Iskasi_keisikiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_keisikiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_keisikiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_youto() As String
            Get
                If Me.Iskasi_youtoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_youtoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_youtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_tukekaesaki() As String
            Get
                If Me.Iskasi_tukekaesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_tukekaesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_tukekaesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_line() As String
            Get
                If Me.Iskasi_lineNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_lineColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_lineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_aitesaki() As String
            Get
                If Me.Iskasi_aitesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_aitesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_aitesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kingaku() As String
            Get
                If Me.Iskasi_kingakuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeSiireDataTable.kasi_kingakuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeSiireDataTable.kasi_kingakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstekiyouNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.tekiyouColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettekiyouNull()
            Me(Me.tableExcelSiwakeSiireDataTable.tekiyouColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_zeiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_zeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_zeiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_zeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kamoku_meiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_kamoku_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kamoku_meiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_kamoku_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kamokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_kamokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kamokuNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_kamokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_saimokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_saimokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_saimokuNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_saimokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_keisikiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_keisikiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_keisikiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_keisikiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_youtoNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_youtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_youtoNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_youtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_tukekaesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_tukekaesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_tukekaesakiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_tukekaesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_lineNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_lineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_lineNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_lineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_aitesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_aitesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_aitesakiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_aitesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kingakuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kari_kingakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kingakuNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kari_kingakuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_zeiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_zeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_zeiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_zeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kamoku_meiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_kamoku_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kamoku_meiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_kamoku_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kamokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_kamokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kamokuNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_kamokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_saimokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_saimokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_saimokuNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_saimokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_keisikiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_keisikiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_keisikiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_keisikiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_youtoNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_youtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_youtoNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_youtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_tukekaesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_tukekaesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_tukekaesakiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_tukekaesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_lineNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_lineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_lineNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_lineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_aitesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_aitesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_aitesakiNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_aitesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kingakuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeSiireDataTable.kasi_kingakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kingakuNull()
            Me(Me.tableExcelSiwakeSiireDataTable.kasi_kingakuColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ExcelSiwakeNyuukinDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableExcelSiwakeNyuukinDataTable As ExcelSiwakeNyuukinDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableExcelSiwakeNyuukinDataTable = CType(Me.Table,ExcelSiwakeNyuukinDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tekiyou() As String
            Get
                If Me.IstekiyouNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.tekiyouColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.tekiyouColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_zei() As String
            Get
                If Me.Iskari_zeiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_zeiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_zeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kamoku_mei() As String
            Get
                If Me.Iskari_kamoku_meiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kamoku_meiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kamoku_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kamoku() As String
            Get
                If Me.Iskari_kamokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kamokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kamokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_saimoku() As String
            Get
                If Me.Iskari_saimokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_saimokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_saimokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_keisiki() As String
            Get
                If Me.Iskari_keisikiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_keisikiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_keisikiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_youto() As String
            Get
                If Me.Iskari_youtoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_youtoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_youtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_tukekaesaki() As String
            Get
                If Me.Iskari_tukekaesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_tukekaesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_tukekaesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_line() As String
            Get
                If Me.Iskari_lineNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_lineColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_lineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_aitesaki() As String
            Get
                If Me.Iskari_aitesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_aitesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_aitesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kari_kingaku() As String
            Get
                If Me.Iskari_kingakuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kingakuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kingakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_zei() As String
            Get
                If Me.Iskasi_zeiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_zeiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_zeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kamoku_mei() As String
            Get
                If Me.Iskasi_kamoku_meiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kamoku_meiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kamoku_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kamoku() As String
            Get
                If Me.Iskasi_kamokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kamokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kamokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_saimoku() As String
            Get
                If Me.Iskasi_saimokuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_saimokuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_saimokuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_keisiki() As String
            Get
                If Me.Iskasi_keisikiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_keisikiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_keisikiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_youto() As String
            Get
                If Me.Iskasi_youtoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_youtoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_youtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_tukekaesaki() As String
            Get
                If Me.Iskasi_tukekaesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_tukekaesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_tukekaesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_line() As String
            Get
                If Me.Iskasi_lineNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_lineColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_lineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_aitesaki() As String
            Get
                If Me.Iskasi_aitesakiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_aitesakiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_aitesakiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kasi_kingaku() As String
            Get
                If Me.Iskasi_kingakuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kingakuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kingakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstekiyouNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.tekiyouColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettekiyouNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.tekiyouColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_zeiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_zeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_zeiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_zeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kamoku_meiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_kamoku_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kamoku_meiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kamoku_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kamokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_kamokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kamokuNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kamokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_saimokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_saimokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_saimokuNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_saimokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_keisikiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_keisikiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_keisikiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_keisikiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_youtoNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_youtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_youtoNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_youtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_tukekaesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_tukekaesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_tukekaesakiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_tukekaesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_lineNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_lineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_lineNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_lineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_aitesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_aitesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_aitesakiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_aitesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskari_kingakuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kari_kingakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkari_kingakuNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kari_kingakuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_zeiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_zeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_zeiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_zeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kamoku_meiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_kamoku_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kamoku_meiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kamoku_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kamokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_kamokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kamokuNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kamokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_saimokuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_saimokuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_saimokuNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_saimokuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_keisikiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_keisikiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_keisikiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_keisikiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_youtoNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_youtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_youtoNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_youtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_tukekaesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_tukekaesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_tukekaesakiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_tukekaesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_lineNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_lineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_lineNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_lineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_aitesakiNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_aitesakiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_aitesakiNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_aitesakiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskasi_kingakuNull() As Boolean
            Return Me.IsNull(Me.tableExcelSiwakeNyuukinDataTable.kasi_kingakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkasi_kingakuNull()
            Me(Me.tableExcelSiwakeNyuukinDataTable.kasi_kingakuColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class UrikakekinZandakaHyouRow
        Inherits Global.System.Data.DataRow
        
        Private tableUrikakekinZandakaHyou As UrikakekinZandakaHyouDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUrikakekinZandakaHyou = CType(Me.Table,UrikakekinZandakaHyouDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property datakbn() As String
            Get
                If Me.IsdatakbnNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.datakbnColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.datakbnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tokuisaki_cd() As String
            Get
                If Me.Istokuisaki_cdNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.tokuisaki_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.tokuisaki_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tokuisaki_mei1() As String
            Get
                If Me.Istokuisaki_mei1Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.tokuisaki_mei1Column),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.tokuisaki_mei1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tokuisaki_mei2() As String
            Get
                If Me.Istokuisaki_mei2Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.tokuisaki_mei2Column),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.tokuisaki_mei2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kurikosi_zanndaka() As String
            Get
                If Me.Iskurikosi_zanndakaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.kurikosi_zanndakaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.kurikosi_zanndakaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property genkin_furikomi() As String
            Get
                If Me.Isgenkin_furikomiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.genkin_furikomiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.genkin_furikomiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tegata() As String
            Get
                If Me.IstegataNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.tegataColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.tegataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sousaihoka() As String
            Get
                If Me.IssousaihokaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.sousaihokaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.sousaihokaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nyuukin_goukei() As String
            Get
                If Me.Isnyuukin_goukeiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.nyuukin_goukeiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.nyuukin_goukeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mikaisyuu_zanndaka() As String
            Get
                If Me.Ismikaisyuu_zanndakaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.mikaisyuu_zanndakaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.mikaisyuu_zanndakaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property uriagedaka() As String
            Get
                If Me.IsuriagedakaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.uriagedakaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.uriagedakaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property syouhizeinado() As String
            Get
                If Me.IssyouhizeinadoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.syouhizeinadoColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.syouhizeinadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sasihiki_zanndaka() As String
            Get
                If Me.Issasihiki_zanndakaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.sasihiki_zanndakaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.sasihiki_zanndakaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tegata_zanndaka() As String
            Get
                If Me.Istegata_zanndakaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.tegata_zanndakaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.tegata_zanndakaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property uriage_saiken() As String
            Get
                If Me.Isuriage_saikenNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableUrikakekinZandakaHyou.uriage_saikenColumn),String)
                End If
            End Get
            Set
                Me(Me.tableUrikakekinZandakaHyou.uriage_saikenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdatakbnNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.datakbnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdatakbnNull()
            Me(Me.tableUrikakekinZandakaHyou.datakbnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istokuisaki_cdNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.tokuisaki_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settokuisaki_cdNull()
            Me(Me.tableUrikakekinZandakaHyou.tokuisaki_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istokuisaki_mei1Null() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.tokuisaki_mei1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settokuisaki_mei1Null()
            Me(Me.tableUrikakekinZandakaHyou.tokuisaki_mei1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istokuisaki_mei2Null() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.tokuisaki_mei2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settokuisaki_mei2Null()
            Me(Me.tableUrikakekinZandakaHyou.tokuisaki_mei2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskurikosi_zanndakaNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.kurikosi_zanndakaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkurikosi_zanndakaNull()
            Me(Me.tableUrikakekinZandakaHyou.kurikosi_zanndakaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isgenkin_furikomiNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.genkin_furikomiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setgenkin_furikomiNull()
            Me(Me.tableUrikakekinZandakaHyou.genkin_furikomiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstegataNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.tegataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettegataNull()
            Me(Me.tableUrikakekinZandakaHyou.tegataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssousaihokaNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.sousaihokaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsousaihokaNull()
            Me(Me.tableUrikakekinZandakaHyou.sousaihokaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnyuukin_goukeiNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.nyuukin_goukeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnyuukin_goukeiNull()
            Me(Me.tableUrikakekinZandakaHyou.nyuukin_goukeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ismikaisyuu_zanndakaNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.mikaisyuu_zanndakaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setmikaisyuu_zanndakaNull()
            Me(Me.tableUrikakekinZandakaHyou.mikaisyuu_zanndakaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsuriagedakaNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.uriagedakaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SeturiagedakaNull()
            Me(Me.tableUrikakekinZandakaHyou.uriagedakaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssyouhizeinadoNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.syouhizeinadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsyouhizeinadoNull()
            Me(Me.tableUrikakekinZandakaHyou.syouhizeinadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issasihiki_zanndakaNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.sasihiki_zanndakaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsasihiki_zanndakaNull()
            Me(Me.tableUrikakekinZandakaHyou.sasihiki_zanndakaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istegata_zanndakaNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.tegata_zanndakaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settegata_zanndakaNull()
            Me(Me.tableUrikakekinZandakaHyou.tegata_zanndakaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isuriage_saikenNull() As Boolean
            Return Me.IsNull(Me.tableUrikakekinZandakaHyou.uriage_saikenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Seturiage_saikenNull()
            Me(Me.tableUrikakekinZandakaHyou.uriage_saikenColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class KaikakekinZandakaHyouRow
        Inherits Global.System.Data.DataRow
        
        Private tableKaikakekinZandakaHyou As KaikakekinZandakaHyouDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKaikakekinZandakaHyou = CType(Me.Table,KaikakekinZandakaHyouDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property datakbn() As String
            Get
                If Me.IsdatakbnNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.datakbnColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.datakbnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tokuisaki_cd() As String
            Get
                If Me.Istokuisaki_cdNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.tokuisaki_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.tokuisaki_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tokuisaki_mei1() As String
            Get
                If Me.Istokuisaki_mei1Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.tokuisaki_mei1Column),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.tokuisaki_mei1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tokuisaki_mei2() As String
            Get
                If Me.Istokuisaki_mei2Null Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.tokuisaki_mei2Column),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.tokuisaki_mei2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kurikosi_zanndaka() As String
            Get
                If Me.Iskurikosi_zanndakaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.kurikosi_zanndakaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.kurikosi_zanndakaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property furikomi() As String
            Get
                If Me.IsfurikomiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.furikomiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.furikomiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sousai() As String
            Get
                If Me.IssousaiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.sousaiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.sousaiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property goukei() As String
            Get
                If Me.IsgoukeiNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.goukeiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.goukeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property gou_zandaka() As String
            Get
                If Me.Isgou_zandakaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.gou_zandakaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.gou_zandakaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_gaku() As String
            Get
                If Me.Issiire_gakuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.siire_gakuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.siire_gakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sotozei_gaku() As String
            Get
                If Me.Issotozei_gakuNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.sotozei_gakuColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.sotozei_gakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sai_zandaka() As String
            Get
                If Me.Issai_zandakaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableKaikakekinZandakaHyou.sai_zandakaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableKaikakekinZandakaHyou.sai_zandakaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdatakbnNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.datakbnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdatakbnNull()
            Me(Me.tableKaikakekinZandakaHyou.datakbnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istokuisaki_cdNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.tokuisaki_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settokuisaki_cdNull()
            Me(Me.tableKaikakekinZandakaHyou.tokuisaki_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istokuisaki_mei1Null() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.tokuisaki_mei1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settokuisaki_mei1Null()
            Me(Me.tableKaikakekinZandakaHyou.tokuisaki_mei1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istokuisaki_mei2Null() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.tokuisaki_mei2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settokuisaki_mei2Null()
            Me(Me.tableKaikakekinZandakaHyou.tokuisaki_mei2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskurikosi_zanndakaNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.kurikosi_zanndakaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkurikosi_zanndakaNull()
            Me(Me.tableKaikakekinZandakaHyou.kurikosi_zanndakaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfurikomiNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.furikomiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfurikomiNull()
            Me(Me.tableKaikakekinZandakaHyou.furikomiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssousaiNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.sousaiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsousaiNull()
            Me(Me.tableKaikakekinZandakaHyou.sousaiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgoukeiNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.goukeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgoukeiNull()
            Me(Me.tableKaikakekinZandakaHyou.goukeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isgou_zandakaNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.gou_zandakaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setgou_zandakaNull()
            Me(Me.tableKaikakekinZandakaHyou.gou_zandakaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_gakuNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.siire_gakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_gakuNull()
            Me(Me.tableKaikakekinZandakaHyou.siire_gakuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issotozei_gakuNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.sotozei_gakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsotozei_gakuNull()
            Me(Me.tableKaikakekinZandakaHyou.sotozei_gakuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issai_zandakaNull() As Boolean
            Return Me.IsNull(Me.tableKaikakekinZandakaHyou.sai_zandakaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsai_zandakaNull()
            Me(Me.tableKaikakekinZandakaHyou.sai_zandakaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ExcelSiwakeUriageDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ExcelSiwakeUriageDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ExcelSiwakeUriageDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ExcelSiwakeUriageDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ExcelSiwakeSiireDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ExcelSiwakeSiireDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ExcelSiwakeSiireDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ExcelSiwakeSiireDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ExcelSiwakeNyuukinDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ExcelSiwakeNyuukinDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ExcelSiwakeNyuukinDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ExcelSiwakeNyuukinDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class UrikakekinZandakaHyouRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UrikakekinZandakaHyouRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As UrikakekinZandakaHyouRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As UrikakekinZandakaHyouRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class KaikakekinZandakaHyouRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KaikakekinZandakaHyouRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As KaikakekinZandakaHyouRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As KaikakekinZandakaHyouRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

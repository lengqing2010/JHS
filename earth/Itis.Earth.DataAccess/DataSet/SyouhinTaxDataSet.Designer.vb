'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.832
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System


<System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.ComponentModel.ToolboxItem(true),  _
 System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 System.Xml.Serialization.XmlRootAttribute("SyouhinTaxDataSet"),  _
 System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SyouhinTaxDataSet
    Inherits System.Data.DataSet
    
    Private tableSyouhinZeirituTable As SyouhinZeirituTableDataTable
    
    Private _schemaSerializationMode As System.Data.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SyouhinZeirituTable")) Is Nothing) Then
                MyBase.Tables.Add(New SyouhinZeirituTableDataTable(ds.Tables("SyouhinZeirituTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New System.Xml.XmlTextReader(New System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SyouhinZeirituTable() As SyouhinZeirituTableDataTable
        Get
            Return Me.tableSyouhinZeirituTable
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.BrowsableAttribute(true),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As System.Data.DataSet
        Dim cln As SyouhinTaxDataSet = CType(MyBase.Clone,SyouhinTaxDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As System.Data.DataSet = New System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("SyouhinZeirituTable")) Is Nothing) Then
                MyBase.Tables.Add(New SyouhinZeirituTableDataTable(ds.Tables("SyouhinZeirituTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSyouhinZeirituTable = CType(MyBase.Tables("SyouhinZeirituTable"),SyouhinZeirituTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSyouhinZeirituTable) Is Nothing) Then
                Me.tableSyouhinZeirituTable.InitVars
            End If
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "SyouhinTaxDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SyouhinTaxDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSyouhinZeirituTable = New SyouhinZeirituTableDataTable
        MyBase.Tables.Add(Me.tableSyouhinZeirituTable)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSyouhinZeirituTable() As Boolean
        Return false
    End Function
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SyouhinTaxDataSet = New SyouhinTaxDataSet
        Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
        xs.Add(ds.GetSchemaSerializable)
        Dim any As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Return type
    End Function
    
    Public Delegate Sub SyouhinZeirituTableRowChangeEventHandler(ByVal sender As Object, ByVal e As SyouhinZeirituTableRowChangeEvent)
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     System.Serializable(),  _
     System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SyouhinZeirituTableDataTable
        Inherits System.Data.DataTable
        Implements System.Collections.IEnumerable
        
        Private columnsyouhin_cd As System.Data.DataColumn
        
        Private columnsyouhin_mei As System.Data.DataColumn
        
        Private columntani As System.Data.DataColumn
        
        Private columnseikyuusaki_kbn As System.Data.DataColumn
        
        Private columnzei_kbn As System.Data.DataColumn
        
        Private columnzeikomi_kbn As System.Data.DataColumn
        
        Private columnhyoujun_kkk As System.Data.DataColumn
        
        Private columnkeiretu_cd As System.Data.DataColumn
        
        Private columnbuilder_seikyuugaku As System.Data.DataColumn
        
        Private columnsouko_cd As System.Data.DataColumn
        
        Private columnsiire_kkk As System.Data.DataColumn
        
        Private columnzeiritu As System.Data.DataColumn
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SyouhinZeirituTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property syouhin_cdColumn() As System.Data.DataColumn
            Get
                Return Me.columnsyouhin_cd
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property syouhin_meiColumn() As System.Data.DataColumn
            Get
                Return Me.columnsyouhin_mei
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property taniColumn() As System.Data.DataColumn
            Get
                Return Me.columntani
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property seikyuusaki_kbnColumn() As System.Data.DataColumn
            Get
                Return Me.columnseikyuusaki_kbn
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zei_kbnColumn() As System.Data.DataColumn
            Get
                Return Me.columnzei_kbn
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zeikomi_kbnColumn() As System.Data.DataColumn
            Get
                Return Me.columnzeikomi_kbn
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hyoujun_kkkColumn() As System.Data.DataColumn
            Get
                Return Me.columnhyoujun_kkk
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property keiretu_cdColumn() As System.Data.DataColumn
            Get
                Return Me.columnkeiretu_cd
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property builder_seikyuugakuColumn() As System.Data.DataColumn
            Get
                Return Me.columnbuilder_seikyuugaku
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property souko_cdColumn() As System.Data.DataColumn
            Get
                Return Me.columnsouko_cd
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_kkkColumn() As System.Data.DataColumn
            Get
                Return Me.columnsiire_kkk
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zeirituColumn() As System.Data.DataColumn
            Get
                Return Me.columnzeiritu
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SyouhinZeirituTableRow
            Get
                Return CType(Me.Rows(index),SyouhinZeirituTableRow)
            End Get
        End Property
        
        Public Event SyouhinZeirituTableRowChanging As SyouhinZeirituTableRowChangeEventHandler
        
        Public Event SyouhinZeirituTableRowChanged As SyouhinZeirituTableRowChangeEventHandler
        
        Public Event SyouhinZeirituTableRowDeleting As SyouhinZeirituTableRowChangeEventHandler
        
        Public Event SyouhinZeirituTableRowDeleted As SyouhinZeirituTableRowChangeEventHandler
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSyouhinZeirituTableRow(ByVal row As SyouhinZeirituTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSyouhinZeirituTableRow(ByVal syouhin_cd As String, ByVal syouhin_mei As String, ByVal tani As String, ByVal seikyuusaki_kbn As String, ByVal zei_kbn As String, ByVal zeikomi_kbn As String, ByVal hyoujun_kkk As Integer, ByVal keiretu_cd As String, ByVal builder_seikyuugaku As Integer, ByVal souko_cd As String, ByVal siire_kkk As Integer, ByVal zeiritu As Decimal) As SyouhinZeirituTableRow
            Dim rowSyouhinZeirituTableRow As SyouhinZeirituTableRow = CType(Me.NewRow,SyouhinZeirituTableRow)
            rowSyouhinZeirituTableRow.ItemArray = New Object() {syouhin_cd, syouhin_mei, tani, seikyuusaki_kbn, zei_kbn, zeikomi_kbn, hyoujun_kkk, keiretu_cd, builder_seikyuugaku, souko_cd, siire_kkk, zeiritu}
            Me.Rows.Add(rowSyouhinZeirituTableRow)
            Return rowSyouhinZeirituTableRow
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBysyouhin_cd(ByVal syouhin_cd As String) As SyouhinZeirituTableRow
            Return CType(Me.Rows.Find(New Object() {syouhin_cd}),SyouhinZeirituTableRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As System.Data.DataTable
            Dim cln As SyouhinZeirituTableDataTable = CType(MyBase.Clone,SyouhinZeirituTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As System.Data.DataTable
            Return New SyouhinZeirituTableDataTable
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnsyouhin_cd = MyBase.Columns("syouhin_cd")
            Me.columnsyouhin_mei = MyBase.Columns("syouhin_mei")
            Me.columntani = MyBase.Columns("tani")
            Me.columnseikyuusaki_kbn = MyBase.Columns("seikyuusaki_kbn")
            Me.columnzei_kbn = MyBase.Columns("zei_kbn")
            Me.columnzeikomi_kbn = MyBase.Columns("zeikomi_kbn")
            Me.columnhyoujun_kkk = MyBase.Columns("hyoujun_kkk")
            Me.columnkeiretu_cd = MyBase.Columns("keiretu_cd")
            Me.columnbuilder_seikyuugaku = MyBase.Columns("builder_seikyuugaku")
            Me.columnsouko_cd = MyBase.Columns("souko_cd")
            Me.columnsiire_kkk = MyBase.Columns("siire_kkk")
            Me.columnzeiritu = MyBase.Columns("zeiritu")
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnsyouhin_cd = New System.Data.DataColumn("syouhin_cd", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsyouhin_cd)
            Me.columnsyouhin_mei = New System.Data.DataColumn("syouhin_mei", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsyouhin_mei)
            Me.columntani = New System.Data.DataColumn("tani", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntani)
            Me.columnseikyuusaki_kbn = New System.Data.DataColumn("seikyuusaki_kbn", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseikyuusaki_kbn)
            Me.columnzei_kbn = New System.Data.DataColumn("zei_kbn", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzei_kbn)
            Me.columnzeikomi_kbn = New System.Data.DataColumn("zeikomi_kbn", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzeikomi_kbn)
            Me.columnhyoujun_kkk = New System.Data.DataColumn("hyoujun_kkk", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhyoujun_kkk)
            Me.columnkeiretu_cd = New System.Data.DataColumn("keiretu_cd", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkeiretu_cd)
            Me.columnbuilder_seikyuugaku = New System.Data.DataColumn("builder_seikyuugaku", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbuilder_seikyuugaku)
            Me.columnsouko_cd = New System.Data.DataColumn("souko_cd", GetType(String), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsouko_cd)
            Me.columnsiire_kkk = New System.Data.DataColumn("siire_kkk", GetType(Integer), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_kkk)
            Me.columnzeiritu = New System.Data.DataColumn("zeiritu", GetType(Decimal), Nothing, System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzeiritu)
            Me.Constraints.Add(New System.Data.UniqueConstraint("Constraint1", New System.Data.DataColumn() {Me.columnsyouhin_cd}, true))
            Me.columnsyouhin_cd.AllowDBNull = false
            Me.columnsyouhin_cd.Unique = true
            Me.columnsyouhin_cd.MaxLength = 8
            Me.columnsyouhin_mei.MaxLength = 40
            Me.columntani.MaxLength = 4
            Me.columnseikyuusaki_kbn.MaxLength = 3
            Me.columnzei_kbn.MaxLength = 1
            Me.columnzeikomi_kbn.MaxLength = 1
            Me.columnhyoujun_kkk.DefaultValue = CType(0,Integer)
            Me.columnkeiretu_cd.MaxLength = 5
            Me.columnsouko_cd.MaxLength = 3
            Me.columnsiire_kkk.DefaultValue = CType(0,Integer)
            Me.columnzeiritu.DefaultValue = CType(0,Decimal)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSyouhinZeirituTableRow() As SyouhinZeirituTableRow
            Return CType(Me.NewRow,SyouhinZeirituTableRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As System.Data.DataRowBuilder) As System.Data.DataRow
            Return New SyouhinZeirituTableRow(builder)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(SyouhinZeirituTableRow)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SyouhinZeirituTableRowChangedEvent) Is Nothing) Then
                RaiseEvent SyouhinZeirituTableRowChanged(Me, New SyouhinZeirituTableRowChangeEvent(CType(e.Row,SyouhinZeirituTableRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SyouhinZeirituTableRowChangingEvent) Is Nothing) Then
                RaiseEvent SyouhinZeirituTableRowChanging(Me, New SyouhinZeirituTableRowChangeEvent(CType(e.Row,SyouhinZeirituTableRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SyouhinZeirituTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SyouhinZeirituTableRowDeleted(Me, New SyouhinZeirituTableRowChangeEvent(CType(e.Row,SyouhinZeirituTableRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SyouhinZeirituTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SyouhinZeirituTableRowDeleting(Me, New SyouhinZeirituTableRowChangeEvent(CType(e.Row,SyouhinZeirituTableRow), e.Action))
            End If
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSyouhinZeirituTableRow(ByVal row As SyouhinZeirituTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As System.Xml.Schema.XmlSchemaSet) As System.Xml.Schema.XmlSchemaComplexType
            Dim type As System.Xml.Schema.XmlSchemaComplexType = New System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As System.Xml.Schema.XmlSchemaSequence = New System.Xml.Schema.XmlSchemaSequence
            Dim ds As SyouhinTaxDataSet = New SyouhinTaxDataSet
            xs.Add(ds.GetSchemaSerializable)
            Dim any1 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As System.Xml.Schema.XmlSchemaAny = New System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As System.Xml.Schema.XmlSchemaAttribute = New System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SyouhinZeirituTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Return type
        End Function
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SyouhinZeirituTableRow
        Inherits System.Data.DataRow
        
        Private tableSyouhinZeirituTable As SyouhinZeirituTableDataTable
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSyouhinZeirituTable = CType(Me.Table,SyouhinZeirituTableDataTable)
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property syouhin_cd() As String
            Get
                Return CType(Me(Me.tableSyouhinZeirituTable.syouhin_cdColumn),String)
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.syouhin_cdColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property syouhin_mei() As String
            Get
                If Me.Issyouhin_meiNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSyouhinZeirituTable.syouhin_meiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.syouhin_meiColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tani() As String
            Get
                If Me.IstaniNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSyouhinZeirituTable.taniColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.taniColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property seikyuusaki_kbn() As String
            Get
                If Me.Isseikyuusaki_kbnNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSyouhinZeirituTable.seikyuusaki_kbnColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.seikyuusaki_kbnColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zei_kbn() As String
            Get
                If Me.Iszei_kbnNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSyouhinZeirituTable.zei_kbnColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.zei_kbnColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zeikomi_kbn() As String
            Get
                If Me.Iszeikomi_kbnNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSyouhinZeirituTable.zeikomi_kbnColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.zeikomi_kbnColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hyoujun_kkk() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSyouhinZeirituTable.hyoujun_kkkColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("テーブル 'SyouhinZeirituTable' にある列 'hyoujun_kkk' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.hyoujun_kkkColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property keiretu_cd() As String
            Get
                If Me.Iskeiretu_cdNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSyouhinZeirituTable.keiretu_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.keiretu_cdColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property builder_seikyuugaku() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSyouhinZeirituTable.builder_seikyuugakuColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("テーブル 'SyouhinZeirituTable' にある列 'builder_seikyuugaku' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.builder_seikyuugakuColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property souko_cd() As String
            Get
                If Me.Issouko_cdNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSyouhinZeirituTable.souko_cdColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.souko_cdColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_kkk() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSyouhinZeirituTable.siire_kkkColumn),Integer)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("テーブル 'SyouhinZeirituTable' にある列 'siire_kkk' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.siire_kkkColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zeiritu() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSyouhinZeirituTable.zeirituColumn),Decimal)
                Catch e As System.InvalidCastException
                    Throw New System.Data.StrongTypingException("テーブル 'SyouhinZeirituTable' にある列 'zeiritu' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSyouhinZeirituTable.zeirituColumn) = value
            End Set
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issyouhin_meiNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.syouhin_meiColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsyouhin_meiNull()
            Me(Me.tableSyouhinZeirituTable.syouhin_meiColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstaniNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.taniColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettaniNull()
            Me(Me.tableSyouhinZeirituTable.taniColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isseikyuusaki_kbnNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.seikyuusaki_kbnColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setseikyuusaki_kbnNull()
            Me(Me.tableSyouhinZeirituTable.seikyuusaki_kbnColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iszei_kbnNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.zei_kbnColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setzei_kbnNull()
            Me(Me.tableSyouhinZeirituTable.zei_kbnColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iszeikomi_kbnNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.zeikomi_kbnColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setzeikomi_kbnNull()
            Me(Me.tableSyouhinZeirituTable.zeikomi_kbnColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ishyoujun_kkkNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.hyoujun_kkkColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sethyoujun_kkkNull()
            Me(Me.tableSyouhinZeirituTable.hyoujun_kkkColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskeiretu_cdNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.keiretu_cdColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkeiretu_cdNull()
            Me(Me.tableSyouhinZeirituTable.keiretu_cdColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isbuilder_seikyuugakuNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.builder_seikyuugakuColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setbuilder_seikyuugakuNull()
            Me(Me.tableSyouhinZeirituTable.builder_seikyuugakuColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issouko_cdNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.souko_cdColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsouko_cdNull()
            Me(Me.tableSyouhinZeirituTable.souko_cdColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_kkkNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.siire_kkkColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_kkkNull()
            Me(Me.tableSyouhinZeirituTable.siire_kkkColumn) = System.Convert.DBNull
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IszeirituNull() As Boolean
            Return Me.IsNull(Me.tableSyouhinZeirituTable.zeirituColumn)
        End Function
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetzeirituNull()
            Me(Me.tableSyouhinZeirituTable.zeirituColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SyouhinZeirituTableRowChangeEvent
        Inherits System.EventArgs
        
        Private eventRow As SyouhinZeirituTableRow
        
        Private eventAction As System.Data.DataRowAction
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SyouhinZeirituTableRow, ByVal action As System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SyouhinZeirituTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

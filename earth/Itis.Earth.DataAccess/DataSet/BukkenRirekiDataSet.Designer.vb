'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.3603
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("BukkenRirekiDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class BukkenRirekiDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableBukkenRirekiTable As BukkenRirekiTableDataTable
    
    Private tableMaxNyuuryokuNoTable As MaxNyuuryokuNoTableDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("BukkenRirekiTable")) Is Nothing) Then
                MyBase.Tables.Add(New BukkenRirekiTableDataTable(ds.Tables("BukkenRirekiTable")))
            End If
            If (Not (ds.Tables("MaxNyuuryokuNoTable")) Is Nothing) Then
                MyBase.Tables.Add(New MaxNyuuryokuNoTableDataTable(ds.Tables("MaxNyuuryokuNoTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BukkenRirekiTable() As BukkenRirekiTableDataTable
        Get
            Return Me.tableBukkenRirekiTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MaxNyuuryokuNoTable() As MaxNyuuryokuNoTableDataTable
        Get
            Return Me.tableMaxNyuuryokuNoTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As BukkenRirekiDataSet = CType(MyBase.Clone,BukkenRirekiDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("BukkenRirekiTable")) Is Nothing) Then
                MyBase.Tables.Add(New BukkenRirekiTableDataTable(ds.Tables("BukkenRirekiTable")))
            End If
            If (Not (ds.Tables("MaxNyuuryokuNoTable")) Is Nothing) Then
                MyBase.Tables.Add(New MaxNyuuryokuNoTableDataTable(ds.Tables("MaxNyuuryokuNoTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableBukkenRirekiTable = CType(MyBase.Tables("BukkenRirekiTable"),BukkenRirekiTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBukkenRirekiTable) Is Nothing) Then
                Me.tableBukkenRirekiTable.InitVars
            End If
        End If
        Me.tableMaxNyuuryokuNoTable = CType(MyBase.Tables("MaxNyuuryokuNoTable"),MaxNyuuryokuNoTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMaxNyuuryokuNoTable) Is Nothing) Then
                Me.tableMaxNyuuryokuNoTable.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "BukkenRirekiDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/BukkenRirekiDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableBukkenRirekiTable = New BukkenRirekiTableDataTable
        MyBase.Tables.Add(Me.tableBukkenRirekiTable)
        Me.tableMaxNyuuryokuNoTable = New MaxNyuuryokuNoTableDataTable
        MyBase.Tables.Add(Me.tableMaxNyuuryokuNoTable)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeBukkenRirekiTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeMaxNyuuryokuNoTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As BukkenRirekiDataSet = New BukkenRirekiDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub BukkenRirekiTableRowChangeEventHandler(ByVal sender As Object, ByVal e As BukkenRirekiTableRowChangeEvent)
    
    Public Delegate Sub MaxNyuuryokuNoTableRowChangeEventHandler(ByVal sender As Object, ByVal e As MaxNyuuryokuNoTableRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BukkenRirekiTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnkbn As Global.System.Data.DataColumn
        
        Private columnhosyousyo_no As Global.System.Data.DataColumn
        
        Private columnrireki_syubetu As Global.System.Data.DataColumn
        
        Private columnrireki_no As Global.System.Data.DataColumn
        
        Private columnnyuuryoku_no As Global.System.Data.DataColumn
        
        Private columnnaiyou As Global.System.Data.DataColumn
        
        Private columnhanyou_date As Global.System.Data.DataColumn
        
        Private columnhanyou_cd As Global.System.Data.DataColumn
        
        Private columnkanri_date As Global.System.Data.DataColumn
        
        Private columnkanri_cd As Global.System.Data.DataColumn
        
        Private columnhenkou_kahi_flg As Global.System.Data.DataColumn
        
        Private columntorikesi As Global.System.Data.DataColumn
        
        Private columnadd_login_user_id As Global.System.Data.DataColumn
        
        Private columnadd_datetime As Global.System.Data.DataColumn
        
        Private columnupd_login_user_id As Global.System.Data.DataColumn
        
        Private columnupd_datetime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BukkenRirekiTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kbnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkbn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hosyousyo_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhosyousyo_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rireki_syubetuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrireki_syubetu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rireki_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrireki_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nyuuryoku_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnyuuryoku_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property naiyouColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnaiyou
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hanyou_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhanyou_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hanyou_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhanyou_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kanri_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkanri_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kanri_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkanri_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property henkou_kahi_flgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhenkou_kahi_flg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property torikesiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntorikesi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_login_user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_login_user_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_datetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_datetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property upd_login_user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupd_login_user_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property upd_datetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupd_datetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BukkenRirekiTableRow
            Get
                Return CType(Me.Rows(index),BukkenRirekiTableRow)
            End Get
        End Property
        
        Public Event BukkenRirekiTableRowChanging As BukkenRirekiTableRowChangeEventHandler
        
        Public Event BukkenRirekiTableRowChanged As BukkenRirekiTableRowChangeEventHandler
        
        Public Event BukkenRirekiTableRowDeleting As BukkenRirekiTableRowChangeEventHandler
        
        Public Event BukkenRirekiTableRowDeleted As BukkenRirekiTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddBukkenRirekiTableRow(ByVal row As BukkenRirekiTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddBukkenRirekiTableRow( _
                    ByVal kbn As String,  _
                    ByVal hosyousyo_no As String,  _
                    ByVal rireki_syubetu As String,  _
                    ByVal rireki_no As Integer,  _
                    ByVal nyuuryoku_no As Integer,  _
                    ByVal naiyou As String,  _
                    ByVal hanyou_date As Date,  _
                    ByVal hanyou_cd As String,  _
                    ByVal kanri_date As Date,  _
                    ByVal kanri_cd As String,  _
                    ByVal henkou_kahi_flg As Integer,  _
                    ByVal torikesi As Integer,  _
                    ByVal add_login_user_id As String,  _
                    ByVal add_datetime As Date,  _
                    ByVal upd_login_user_id As String,  _
                    ByVal upd_datetime As Date) As BukkenRirekiTableRow
            Dim rowBukkenRirekiTableRow As BukkenRirekiTableRow = CType(Me.NewRow,BukkenRirekiTableRow)
            Dim columnValuesArray() As Object = New Object() {kbn, hosyousyo_no, rireki_syubetu, rireki_no, nyuuryoku_no, naiyou, hanyou_date, hanyou_cd, kanri_date, kanri_cd, henkou_kahi_flg, torikesi, add_login_user_id, add_datetime, upd_login_user_id, upd_datetime}
            rowBukkenRirekiTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBukkenRirekiTableRow)
            Return rowBukkenRirekiTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBykbnhosyousyo_nonyuuryoku_no(ByVal kbn As String, ByVal hosyousyo_no As String, ByVal nyuuryoku_no As Integer) As BukkenRirekiTableRow
            Return CType(Me.Rows.Find(New Object() {kbn, hosyousyo_no, nyuuryoku_no}),BukkenRirekiTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BukkenRirekiTableDataTable = CType(MyBase.Clone,BukkenRirekiTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BukkenRirekiTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnkbn = MyBase.Columns("kbn")
            Me.columnhosyousyo_no = MyBase.Columns("hosyousyo_no")
            Me.columnrireki_syubetu = MyBase.Columns("rireki_syubetu")
            Me.columnrireki_no = MyBase.Columns("rireki_no")
            Me.columnnyuuryoku_no = MyBase.Columns("nyuuryoku_no")
            Me.columnnaiyou = MyBase.Columns("naiyou")
            Me.columnhanyou_date = MyBase.Columns("hanyou_date")
            Me.columnhanyou_cd = MyBase.Columns("hanyou_cd")
            Me.columnkanri_date = MyBase.Columns("kanri_date")
            Me.columnkanri_cd = MyBase.Columns("kanri_cd")
            Me.columnhenkou_kahi_flg = MyBase.Columns("henkou_kahi_flg")
            Me.columntorikesi = MyBase.Columns("torikesi")
            Me.columnadd_login_user_id = MyBase.Columns("add_login_user_id")
            Me.columnadd_datetime = MyBase.Columns("add_datetime")
            Me.columnupd_login_user_id = MyBase.Columns("upd_login_user_id")
            Me.columnupd_datetime = MyBase.Columns("upd_datetime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnkbn = New Global.System.Data.DataColumn("kbn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkbn)
            Me.columnhosyousyo_no = New Global.System.Data.DataColumn("hosyousyo_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhosyousyo_no)
            Me.columnrireki_syubetu = New Global.System.Data.DataColumn("rireki_syubetu", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrireki_syubetu)
            Me.columnrireki_no = New Global.System.Data.DataColumn("rireki_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrireki_no)
            Me.columnnyuuryoku_no = New Global.System.Data.DataColumn("nyuuryoku_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnyuuryoku_no)
            Me.columnnaiyou = New Global.System.Data.DataColumn("naiyou", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnaiyou)
            Me.columnhanyou_date = New Global.System.Data.DataColumn("hanyou_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhanyou_date)
            Me.columnhanyou_cd = New Global.System.Data.DataColumn("hanyou_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhanyou_cd)
            Me.columnkanri_date = New Global.System.Data.DataColumn("kanri_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkanri_date)
            Me.columnkanri_cd = New Global.System.Data.DataColumn("kanri_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkanri_cd)
            Me.columnhenkou_kahi_flg = New Global.System.Data.DataColumn("henkou_kahi_flg", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhenkou_kahi_flg)
            Me.columntorikesi = New Global.System.Data.DataColumn("torikesi", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntorikesi)
            Me.columnadd_login_user_id = New Global.System.Data.DataColumn("add_login_user_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_login_user_id)
            Me.columnadd_datetime = New Global.System.Data.DataColumn("add_datetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_datetime)
            Me.columnupd_login_user_id = New Global.System.Data.DataColumn("upd_login_user_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupd_login_user_id)
            Me.columnupd_datetime = New Global.System.Data.DataColumn("upd_datetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupd_datetime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnkbn, Me.columnhosyousyo_no, Me.columnnyuuryoku_no}, true))
            Me.columnkbn.AllowDBNull = false
            Me.columnkbn.MaxLength = 1
            Me.columnhosyousyo_no.AllowDBNull = false
            Me.columnhosyousyo_no.MaxLength = 10
            Me.columnrireki_syubetu.AllowDBNull = false
            Me.columnrireki_syubetu.MaxLength = 2
            Me.columnrireki_no.AllowDBNull = false
            Me.columnnyuuryoku_no.AllowDBNull = false
            Me.columnnaiyou.MaxLength = 512
            Me.columnhanyou_cd.MaxLength = 20
            Me.columnkanri_cd.MaxLength = 20
            Me.columnhenkou_kahi_flg.AllowDBNull = false
            Me.columntorikesi.AllowDBNull = false
            Me.columnadd_login_user_id.MaxLength = 30
            Me.columnupd_login_user_id.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewBukkenRirekiTableRow() As BukkenRirekiTableRow
            Return CType(Me.NewRow,BukkenRirekiTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BukkenRirekiTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BukkenRirekiTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BukkenRirekiTableRowChangedEvent) Is Nothing) Then
                RaiseEvent BukkenRirekiTableRowChanged(Me, New BukkenRirekiTableRowChangeEvent(CType(e.Row,BukkenRirekiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BukkenRirekiTableRowChangingEvent) Is Nothing) Then
                RaiseEvent BukkenRirekiTableRowChanging(Me, New BukkenRirekiTableRowChangeEvent(CType(e.Row,BukkenRirekiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BukkenRirekiTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent BukkenRirekiTableRowDeleted(Me, New BukkenRirekiTableRowChangeEvent(CType(e.Row,BukkenRirekiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BukkenRirekiTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent BukkenRirekiTableRowDeleting(Me, New BukkenRirekiTableRowChangeEvent(CType(e.Row,BukkenRirekiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveBukkenRirekiTableRow(ByVal row As BukkenRirekiTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As BukkenRirekiDataSet = New BukkenRirekiDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BukkenRirekiTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MaxNyuuryokuNoTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnMAX_NO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MaxNyuuryokuNoTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MAX_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAX_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MaxNyuuryokuNoTableRow
            Get
                Return CType(Me.Rows(index),MaxNyuuryokuNoTableRow)
            End Get
        End Property
        
        Public Event MaxNyuuryokuNoTableRowChanging As MaxNyuuryokuNoTableRowChangeEventHandler
        
        Public Event MaxNyuuryokuNoTableRowChanged As MaxNyuuryokuNoTableRowChangeEventHandler
        
        Public Event MaxNyuuryokuNoTableRowDeleting As MaxNyuuryokuNoTableRowChangeEventHandler
        
        Public Event MaxNyuuryokuNoTableRowDeleted As MaxNyuuryokuNoTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddMaxNyuuryokuNoTableRow(ByVal row As MaxNyuuryokuNoTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddMaxNyuuryokuNoTableRow(ByVal MAX_NO As String) As MaxNyuuryokuNoTableRow
            Dim rowMaxNyuuryokuNoTableRow As MaxNyuuryokuNoTableRow = CType(Me.NewRow,MaxNyuuryokuNoTableRow)
            Dim columnValuesArray() As Object = New Object() {MAX_NO}
            rowMaxNyuuryokuNoTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMaxNyuuryokuNoTableRow)
            Return rowMaxNyuuryokuNoTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MaxNyuuryokuNoTableDataTable = CType(MyBase.Clone,MaxNyuuryokuNoTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MaxNyuuryokuNoTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMAX_NO = MyBase.Columns("max_no")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMAX_NO = New Global.System.Data.DataColumn("max_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnMAX_NO.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "MAX_NO")
            Me.columnMAX_NO.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "MAX_NOColumn")
            Me.columnMAX_NO.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnMAX_NO")
            Me.columnMAX_NO.ExtendedProperties.Add("Generator_UserColumnName", "max_no")
            MyBase.Columns.Add(Me.columnMAX_NO)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewMaxNyuuryokuNoTableRow() As MaxNyuuryokuNoTableRow
            Return CType(Me.NewRow,MaxNyuuryokuNoTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MaxNyuuryokuNoTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MaxNyuuryokuNoTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MaxNyuuryokuNoTableRowChangedEvent) Is Nothing) Then
                RaiseEvent MaxNyuuryokuNoTableRowChanged(Me, New MaxNyuuryokuNoTableRowChangeEvent(CType(e.Row,MaxNyuuryokuNoTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MaxNyuuryokuNoTableRowChangingEvent) Is Nothing) Then
                RaiseEvent MaxNyuuryokuNoTableRowChanging(Me, New MaxNyuuryokuNoTableRowChangeEvent(CType(e.Row,MaxNyuuryokuNoTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MaxNyuuryokuNoTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent MaxNyuuryokuNoTableRowDeleted(Me, New MaxNyuuryokuNoTableRowChangeEvent(CType(e.Row,MaxNyuuryokuNoTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MaxNyuuryokuNoTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent MaxNyuuryokuNoTableRowDeleting(Me, New MaxNyuuryokuNoTableRowChangeEvent(CType(e.Row,MaxNyuuryokuNoTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveMaxNyuuryokuNoTableRow(ByVal row As MaxNyuuryokuNoTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As BukkenRirekiDataSet = New BukkenRirekiDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MaxNyuuryokuNoTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class BukkenRirekiTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableBukkenRirekiTable As BukkenRirekiTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBukkenRirekiTable = CType(Me.Table,BukkenRirekiTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kbn() As String
            Get
                Return CType(Me(Me.tableBukkenRirekiTable.kbnColumn),String)
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.kbnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hosyousyo_no() As String
            Get
                Return CType(Me(Me.tableBukkenRirekiTable.hosyousyo_noColumn),String)
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.hosyousyo_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rireki_syubetu() As String
            Get
                Return CType(Me(Me.tableBukkenRirekiTable.rireki_syubetuColumn),String)
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.rireki_syubetuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rireki_no() As Integer
            Get
                Return CType(Me(Me.tableBukkenRirekiTable.rireki_noColumn),Integer)
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.rireki_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nyuuryoku_no() As Integer
            Get
                Return CType(Me(Me.tableBukkenRirekiTable.nyuuryoku_noColumn),Integer)
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.nyuuryoku_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property naiyou() As String
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.naiyouColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'naiyou' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.naiyouColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hanyou_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.hanyou_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'hanyou_date' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.hanyou_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hanyou_cd() As String
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.hanyou_cdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'hanyou_cd' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.hanyou_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kanri_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.kanri_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'kanri_date' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.kanri_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kanri_cd() As String
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.kanri_cdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'kanri_cd' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.kanri_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property henkou_kahi_flg() As Integer
            Get
                Return CType(Me(Me.tableBukkenRirekiTable.henkou_kahi_flgColumn),Integer)
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.henkou_kahi_flgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property torikesi() As Integer
            Get
                Return CType(Me(Me.tableBukkenRirekiTable.torikesiColumn),Integer)
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.torikesiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_login_user_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.add_login_user_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'add_login_user_id' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.add_login_user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_datetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.add_datetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'add_datetime' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.add_datetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property upd_login_user_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.upd_login_user_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'upd_login_user_id' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.upd_login_user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property upd_datetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBukkenRirekiTable.upd_datetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'BukkenRirekiTable' にある列 'upd_datetime' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableBukkenRirekiTable.upd_datetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnaiyouNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.naiyouColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnaiyouNull()
            Me(Me.tableBukkenRirekiTable.naiyouColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ishanyou_dateNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.hanyou_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sethanyou_dateNull()
            Me(Me.tableBukkenRirekiTable.hanyou_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ishanyou_cdNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.hanyou_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sethanyou_cdNull()
            Me(Me.tableBukkenRirekiTable.hanyou_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskanri_dateNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.kanri_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkanri_dateNull()
            Me(Me.tableBukkenRirekiTable.kanri_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskanri_cdNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.kanri_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkanri_cdNull()
            Me(Me.tableBukkenRirekiTable.kanri_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_login_user_idNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.add_login_user_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_login_user_idNull()
            Me(Me.tableBukkenRirekiTable.add_login_user_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_datetimeNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.add_datetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_datetimeNull()
            Me(Me.tableBukkenRirekiTable.add_datetimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupd_login_user_idNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.upd_login_user_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupd_login_user_idNull()
            Me(Me.tableBukkenRirekiTable.upd_login_user_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupd_datetimeNull() As Boolean
            Return Me.IsNull(Me.tableBukkenRirekiTable.upd_datetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupd_datetimeNull()
            Me(Me.tableBukkenRirekiTable.upd_datetimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class MaxNyuuryokuNoTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableMaxNyuuryokuNoTable As MaxNyuuryokuNoTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMaxNyuuryokuNoTable = CType(Me.Table,MaxNyuuryokuNoTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MAX_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMaxNyuuryokuNoTable.MAX_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'MaxNyuuryokuNoTable' にある列 'max_no' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableMaxNyuuryokuNoTable.MAX_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMAX_NONull() As Boolean
            Return Me.IsNull(Me.tableMaxNyuuryokuNoTable.MAX_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMAX_NONull()
            Me(Me.tableMaxNyuuryokuNoTable.MAX_NOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class BukkenRirekiTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BukkenRirekiTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As BukkenRirekiTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As BukkenRirekiTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class MaxNyuuryokuNoTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MaxNyuuryokuNoTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As MaxNyuuryokuNoTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As MaxNyuuryokuNoTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

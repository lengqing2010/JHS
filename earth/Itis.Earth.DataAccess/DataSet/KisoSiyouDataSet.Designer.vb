'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.3082
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("KisoSiyouDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class KisoSiyouDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableKisoSiyouTable As KisoSiyouTableDataTable
    
    Private tableKisoSiyouSetuzokusiTable As KisoSiyouSetuzokusiTableDataTable
    
    Private tableKisoSiyouSearchTable As KisoSiyouSearchTableDataTable
    
    Private tableHanteiKojiSyubetuTable As HanteiKojiSyubetuTableDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("KisoSiyouTable")) Is Nothing) Then
                MyBase.Tables.Add(New KisoSiyouTableDataTable(ds.Tables("KisoSiyouTable")))
            End If
            If (Not (ds.Tables("KisoSiyouSetuzokusiTable")) Is Nothing) Then
                MyBase.Tables.Add(New KisoSiyouSetuzokusiTableDataTable(ds.Tables("KisoSiyouSetuzokusiTable")))
            End If
            If (Not (ds.Tables("KisoSiyouSearchTable")) Is Nothing) Then
                MyBase.Tables.Add(New KisoSiyouSearchTableDataTable(ds.Tables("KisoSiyouSearchTable")))
            End If
            If (Not (ds.Tables("HanteiKojiSyubetuTable")) Is Nothing) Then
                MyBase.Tables.Add(New HanteiKojiSyubetuTableDataTable(ds.Tables("HanteiKojiSyubetuTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KisoSiyouTable() As KisoSiyouTableDataTable
        Get
            Return Me.tableKisoSiyouTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KisoSiyouSetuzokusiTable() As KisoSiyouSetuzokusiTableDataTable
        Get
            Return Me.tableKisoSiyouSetuzokusiTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KisoSiyouSearchTable() As KisoSiyouSearchTableDataTable
        Get
            Return Me.tableKisoSiyouSearchTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HanteiKojiSyubetuTable() As HanteiKojiSyubetuTableDataTable
        Get
            Return Me.tableHanteiKojiSyubetuTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As KisoSiyouDataSet = CType(MyBase.Clone,KisoSiyouDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("KisoSiyouTable")) Is Nothing) Then
                MyBase.Tables.Add(New KisoSiyouTableDataTable(ds.Tables("KisoSiyouTable")))
            End If
            If (Not (ds.Tables("KisoSiyouSetuzokusiTable")) Is Nothing) Then
                MyBase.Tables.Add(New KisoSiyouSetuzokusiTableDataTable(ds.Tables("KisoSiyouSetuzokusiTable")))
            End If
            If (Not (ds.Tables("KisoSiyouSearchTable")) Is Nothing) Then
                MyBase.Tables.Add(New KisoSiyouSearchTableDataTable(ds.Tables("KisoSiyouSearchTable")))
            End If
            If (Not (ds.Tables("HanteiKojiSyubetuTable")) Is Nothing) Then
                MyBase.Tables.Add(New HanteiKojiSyubetuTableDataTable(ds.Tables("HanteiKojiSyubetuTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableKisoSiyouTable = CType(MyBase.Tables("KisoSiyouTable"),KisoSiyouTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKisoSiyouTable) Is Nothing) Then
                Me.tableKisoSiyouTable.InitVars
            End If
        End If
        Me.tableKisoSiyouSetuzokusiTable = CType(MyBase.Tables("KisoSiyouSetuzokusiTable"),KisoSiyouSetuzokusiTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKisoSiyouSetuzokusiTable) Is Nothing) Then
                Me.tableKisoSiyouSetuzokusiTable.InitVars
            End If
        End If
        Me.tableKisoSiyouSearchTable = CType(MyBase.Tables("KisoSiyouSearchTable"),KisoSiyouSearchTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKisoSiyouSearchTable) Is Nothing) Then
                Me.tableKisoSiyouSearchTable.InitVars
            End If
        End If
        Me.tableHanteiKojiSyubetuTable = CType(MyBase.Tables("HanteiKojiSyubetuTable"),HanteiKojiSyubetuTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHanteiKojiSyubetuTable) Is Nothing) Then
                Me.tableHanteiKojiSyubetuTable.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "KisoSiyouDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/KisoSiyouDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableKisoSiyouTable = New KisoSiyouTableDataTable
        MyBase.Tables.Add(Me.tableKisoSiyouTable)
        Me.tableKisoSiyouSetuzokusiTable = New KisoSiyouSetuzokusiTableDataTable
        MyBase.Tables.Add(Me.tableKisoSiyouSetuzokusiTable)
        Me.tableKisoSiyouSearchTable = New KisoSiyouSearchTableDataTable
        MyBase.Tables.Add(Me.tableKisoSiyouSearchTable)
        Me.tableHanteiKojiSyubetuTable = New HanteiKojiSyubetuTableDataTable
        MyBase.Tables.Add(Me.tableHanteiKojiSyubetuTable)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeKisoSiyouTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeKisoSiyouSetuzokusiTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeKisoSiyouSearchTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeHanteiKojiSyubetuTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As KisoSiyouDataSet = New KisoSiyouDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub KisoSiyouTableRowChangeEventHandler(ByVal sender As Object, ByVal e As KisoSiyouTableRowChangeEvent)
    
    Public Delegate Sub KisoSiyouSetuzokusiTableRowChangeEventHandler(ByVal sender As Object, ByVal e As KisoSiyouSetuzokusiTableRowChangeEvent)
    
    Public Delegate Sub KisoSiyouSearchTableRowChangeEventHandler(ByVal sender As Object, ByVal e As KisoSiyouSearchTableRowChangeEvent)
    
    Public Delegate Sub HanteiKojiSyubetuTableRowChangeEventHandler(ByVal sender As Object, ByVal e As HanteiKojiSyubetuTableRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KisoSiyouTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnks_siyou_no As Global.System.Data.DataColumn
        
        Private columnks_siyou As Global.System.Data.DataColumn
        
        Private columnkoj_hantei_flg As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KisoSiyouTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ks_siyou_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnks_siyou_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ks_siyouColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnks_siyou
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property koj_hantei_flgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkoj_hantei_flg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KisoSiyouTableRow
            Get
                Return CType(Me.Rows(index),KisoSiyouTableRow)
            End Get
        End Property
        
        Public Event KisoSiyouTableRowChanging As KisoSiyouTableRowChangeEventHandler
        
        Public Event KisoSiyouTableRowChanged As KisoSiyouTableRowChangeEventHandler
        
        Public Event KisoSiyouTableRowDeleting As KisoSiyouTableRowChangeEventHandler
        
        Public Event KisoSiyouTableRowDeleted As KisoSiyouTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddKisoSiyouTableRow(ByVal row As KisoSiyouTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddKisoSiyouTableRow(ByVal ks_siyou_no As Integer, ByVal ks_siyou As String, ByVal koj_hantei_flg As Integer) As KisoSiyouTableRow
            Dim rowKisoSiyouTableRow As KisoSiyouTableRow = CType(Me.NewRow,KisoSiyouTableRow)
            Dim columnValuesArray() As Object = New Object() {ks_siyou_no, ks_siyou, koj_hantei_flg}
            rowKisoSiyouTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKisoSiyouTableRow)
            Return rowKisoSiyouTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KisoSiyouTableDataTable = CType(MyBase.Clone,KisoSiyouTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KisoSiyouTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnks_siyou_no = MyBase.Columns("ks_siyou_no")
            Me.columnks_siyou = MyBase.Columns("ks_siyou")
            Me.columnkoj_hantei_flg = MyBase.Columns("koj_hantei_flg")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnks_siyou_no = New Global.System.Data.DataColumn("ks_siyou_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnks_siyou_no)
            Me.columnks_siyou = New Global.System.Data.DataColumn("ks_siyou", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnks_siyou)
            Me.columnkoj_hantei_flg = New Global.System.Data.DataColumn("koj_hantei_flg", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkoj_hantei_flg)
            Me.columnks_siyou.MaxLength = 80
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewKisoSiyouTableRow() As KisoSiyouTableRow
            Return CType(Me.NewRow,KisoSiyouTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KisoSiyouTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KisoSiyouTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KisoSiyouTableRowChangedEvent) Is Nothing) Then
                RaiseEvent KisoSiyouTableRowChanged(Me, New KisoSiyouTableRowChangeEvent(CType(e.Row,KisoSiyouTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KisoSiyouTableRowChangingEvent) Is Nothing) Then
                RaiseEvent KisoSiyouTableRowChanging(Me, New KisoSiyouTableRowChangeEvent(CType(e.Row,KisoSiyouTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KisoSiyouTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent KisoSiyouTableRowDeleted(Me, New KisoSiyouTableRowChangeEvent(CType(e.Row,KisoSiyouTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KisoSiyouTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent KisoSiyouTableRowDeleting(Me, New KisoSiyouTableRowChangeEvent(CType(e.Row,KisoSiyouTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveKisoSiyouTableRow(ByVal row As KisoSiyouTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As KisoSiyouDataSet = New KisoSiyouDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KisoSiyouTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KisoSiyouSetuzokusiTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnks_siyou_setuzokusi_no As Global.System.Data.DataColumn
        
        Private columnks_siyou_setuzokusi As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KisoSiyouSetuzokusiTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ks_siyou_setuzokusi_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnks_siyou_setuzokusi_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ks_siyou_setuzokusiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnks_siyou_setuzokusi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KisoSiyouSetuzokusiTableRow
            Get
                Return CType(Me.Rows(index),KisoSiyouSetuzokusiTableRow)
            End Get
        End Property
        
        Public Event KisoSiyouSetuzokusiTableRowChanging As KisoSiyouSetuzokusiTableRowChangeEventHandler
        
        Public Event KisoSiyouSetuzokusiTableRowChanged As KisoSiyouSetuzokusiTableRowChangeEventHandler
        
        Public Event KisoSiyouSetuzokusiTableRowDeleting As KisoSiyouSetuzokusiTableRowChangeEventHandler
        
        Public Event KisoSiyouSetuzokusiTableRowDeleted As KisoSiyouSetuzokusiTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddKisoSiyouSetuzokusiTableRow(ByVal row As KisoSiyouSetuzokusiTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddKisoSiyouSetuzokusiTableRow(ByVal ks_siyou_setuzokusi_no As Integer, ByVal ks_siyou_setuzokusi As String) As KisoSiyouSetuzokusiTableRow
            Dim rowKisoSiyouSetuzokusiTableRow As KisoSiyouSetuzokusiTableRow = CType(Me.NewRow,KisoSiyouSetuzokusiTableRow)
            Dim columnValuesArray() As Object = New Object() {ks_siyou_setuzokusi_no, ks_siyou_setuzokusi}
            rowKisoSiyouSetuzokusiTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKisoSiyouSetuzokusiTableRow)
            Return rowKisoSiyouSetuzokusiTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KisoSiyouSetuzokusiTableDataTable = CType(MyBase.Clone,KisoSiyouSetuzokusiTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KisoSiyouSetuzokusiTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnks_siyou_setuzokusi_no = MyBase.Columns("ks_siyou_setuzokusi_no")
            Me.columnks_siyou_setuzokusi = MyBase.Columns("ks_siyou_setuzokusi")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnks_siyou_setuzokusi_no = New Global.System.Data.DataColumn("ks_siyou_setuzokusi_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnks_siyou_setuzokusi_no)
            Me.columnks_siyou_setuzokusi = New Global.System.Data.DataColumn("ks_siyou_setuzokusi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnks_siyou_setuzokusi)
            Me.columnks_siyou_setuzokusi.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewKisoSiyouSetuzokusiTableRow() As KisoSiyouSetuzokusiTableRow
            Return CType(Me.NewRow,KisoSiyouSetuzokusiTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KisoSiyouSetuzokusiTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KisoSiyouSetuzokusiTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KisoSiyouSetuzokusiTableRowChangedEvent) Is Nothing) Then
                RaiseEvent KisoSiyouSetuzokusiTableRowChanged(Me, New KisoSiyouSetuzokusiTableRowChangeEvent(CType(e.Row,KisoSiyouSetuzokusiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KisoSiyouSetuzokusiTableRowChangingEvent) Is Nothing) Then
                RaiseEvent KisoSiyouSetuzokusiTableRowChanging(Me, New KisoSiyouSetuzokusiTableRowChangeEvent(CType(e.Row,KisoSiyouSetuzokusiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KisoSiyouSetuzokusiTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent KisoSiyouSetuzokusiTableRowDeleted(Me, New KisoSiyouSetuzokusiTableRowChangeEvent(CType(e.Row,KisoSiyouSetuzokusiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KisoSiyouSetuzokusiTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent KisoSiyouSetuzokusiTableRowDeleting(Me, New KisoSiyouSetuzokusiTableRowChangeEvent(CType(e.Row,KisoSiyouSetuzokusiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveKisoSiyouSetuzokusiTableRow(ByVal row As KisoSiyouSetuzokusiTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As KisoSiyouDataSet = New KisoSiyouDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KisoSiyouSetuzokusiTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KisoSiyouSearchTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnks_siyou_no As Global.System.Data.DataColumn
        
        Private columnks_siyou As Global.System.Data.DataColumn
        
        Private columnkoj_hantei_flg As Global.System.Data.DataColumn
        
        Private columnkameiten_cd As Global.System.Data.DataColumn
        
        Private columnkahi_kbn As Global.System.Data.DataColumn
        
        Private columnnyuuryoku_no As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KisoSiyouSearchTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ks_siyou_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnks_siyou_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ks_siyouColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnks_siyou
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property koj_hantei_flgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkoj_hantei_flg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kameiten_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkameiten_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kahi_kbnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkahi_kbn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nyuuryoku_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnyuuryoku_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KisoSiyouSearchTableRow
            Get
                Return CType(Me.Rows(index),KisoSiyouSearchTableRow)
            End Get
        End Property
        
        Public Event KisoSiyouSearchTableRowChanging As KisoSiyouSearchTableRowChangeEventHandler
        
        Public Event KisoSiyouSearchTableRowChanged As KisoSiyouSearchTableRowChangeEventHandler
        
        Public Event KisoSiyouSearchTableRowDeleting As KisoSiyouSearchTableRowChangeEventHandler
        
        Public Event KisoSiyouSearchTableRowDeleted As KisoSiyouSearchTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddKisoSiyouSearchTableRow(ByVal row As KisoSiyouSearchTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddKisoSiyouSearchTableRow(ByVal ks_siyou_no As Integer, ByVal ks_siyou As String, ByVal koj_hantei_flg As Integer, ByVal kameiten_cd As String, ByVal kahi_kbn As Integer, ByVal nyuuryoku_no As Integer) As KisoSiyouSearchTableRow
            Dim rowKisoSiyouSearchTableRow As KisoSiyouSearchTableRow = CType(Me.NewRow,KisoSiyouSearchTableRow)
            Dim columnValuesArray() As Object = New Object() {ks_siyou_no, ks_siyou, koj_hantei_flg, kameiten_cd, kahi_kbn, nyuuryoku_no}
            rowKisoSiyouSearchTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKisoSiyouSearchTableRow)
            Return rowKisoSiyouSearchTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KisoSiyouSearchTableDataTable = CType(MyBase.Clone,KisoSiyouSearchTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KisoSiyouSearchTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnks_siyou_no = MyBase.Columns("ks_siyou_no")
            Me.columnks_siyou = MyBase.Columns("ks_siyou")
            Me.columnkoj_hantei_flg = MyBase.Columns("koj_hantei_flg")
            Me.columnkameiten_cd = MyBase.Columns("kameiten_cd")
            Me.columnkahi_kbn = MyBase.Columns("kahi_kbn")
            Me.columnnyuuryoku_no = MyBase.Columns("nyuuryoku_no")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnks_siyou_no = New Global.System.Data.DataColumn("ks_siyou_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnks_siyou_no)
            Me.columnks_siyou = New Global.System.Data.DataColumn("ks_siyou", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnks_siyou)
            Me.columnkoj_hantei_flg = New Global.System.Data.DataColumn("koj_hantei_flg", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkoj_hantei_flg)
            Me.columnkameiten_cd = New Global.System.Data.DataColumn("kameiten_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkameiten_cd)
            Me.columnkahi_kbn = New Global.System.Data.DataColumn("kahi_kbn", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkahi_kbn)
            Me.columnnyuuryoku_no = New Global.System.Data.DataColumn("nyuuryoku_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnyuuryoku_no)
            Me.columnks_siyou.MaxLength = 80
            Me.columnkameiten_cd.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewKisoSiyouSearchTableRow() As KisoSiyouSearchTableRow
            Return CType(Me.NewRow,KisoSiyouSearchTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KisoSiyouSearchTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KisoSiyouSearchTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KisoSiyouSearchTableRowChangedEvent) Is Nothing) Then
                RaiseEvent KisoSiyouSearchTableRowChanged(Me, New KisoSiyouSearchTableRowChangeEvent(CType(e.Row,KisoSiyouSearchTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KisoSiyouSearchTableRowChangingEvent) Is Nothing) Then
                RaiseEvent KisoSiyouSearchTableRowChanging(Me, New KisoSiyouSearchTableRowChangeEvent(CType(e.Row,KisoSiyouSearchTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KisoSiyouSearchTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent KisoSiyouSearchTableRowDeleted(Me, New KisoSiyouSearchTableRowChangeEvent(CType(e.Row,KisoSiyouSearchTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KisoSiyouSearchTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent KisoSiyouSearchTableRowDeleting(Me, New KisoSiyouSearchTableRowChangeEvent(CType(e.Row,KisoSiyouSearchTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveKisoSiyouSearchTableRow(ByVal row As KisoSiyouSearchTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As KisoSiyouDataSet = New KisoSiyouDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KisoSiyouSearchTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class HanteiKojiSyubetuTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnks_siyou_no As Global.System.Data.DataColumn
        
        Private columnkairy_koj_syubetu_no As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "HanteiKojiSyubetuTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ks_siyou_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnks_siyou_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kairy_koj_syubetu_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkairy_koj_syubetu_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As HanteiKojiSyubetuTableRow
            Get
                Return CType(Me.Rows(index),HanteiKojiSyubetuTableRow)
            End Get
        End Property
        
        Public Event HanteiKojiSyubetuTableRowChanging As HanteiKojiSyubetuTableRowChangeEventHandler
        
        Public Event HanteiKojiSyubetuTableRowChanged As HanteiKojiSyubetuTableRowChangeEventHandler
        
        Public Event HanteiKojiSyubetuTableRowDeleting As HanteiKojiSyubetuTableRowChangeEventHandler
        
        Public Event HanteiKojiSyubetuTableRowDeleted As HanteiKojiSyubetuTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddHanteiKojiSyubetuTableRow(ByVal row As HanteiKojiSyubetuTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddHanteiKojiSyubetuTableRow(ByVal ks_siyou_no As Integer, ByVal kairy_koj_syubetu_no As Integer) As HanteiKojiSyubetuTableRow
            Dim rowHanteiKojiSyubetuTableRow As HanteiKojiSyubetuTableRow = CType(Me.NewRow,HanteiKojiSyubetuTableRow)
            Dim columnValuesArray() As Object = New Object() {ks_siyou_no, kairy_koj_syubetu_no}
            rowHanteiKojiSyubetuTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHanteiKojiSyubetuTableRow)
            Return rowHanteiKojiSyubetuTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByks_siyou_nokairy_koj_syubetu_no(ByVal ks_siyou_no As Integer, ByVal kairy_koj_syubetu_no As Integer) As HanteiKojiSyubetuTableRow
            Return CType(Me.Rows.Find(New Object() {ks_siyou_no, kairy_koj_syubetu_no}),HanteiKojiSyubetuTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As HanteiKojiSyubetuTableDataTable = CType(MyBase.Clone,HanteiKojiSyubetuTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New HanteiKojiSyubetuTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnks_siyou_no = MyBase.Columns("ks_siyou_no")
            Me.columnkairy_koj_syubetu_no = MyBase.Columns("kairy_koj_syubetu_no")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnks_siyou_no = New Global.System.Data.DataColumn("ks_siyou_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnks_siyou_no)
            Me.columnkairy_koj_syubetu_no = New Global.System.Data.DataColumn("kairy_koj_syubetu_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkairy_koj_syubetu_no)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnks_siyou_no, Me.columnkairy_koj_syubetu_no}, true))
            Me.columnks_siyou_no.AllowDBNull = false
            Me.columnkairy_koj_syubetu_no.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewHanteiKojiSyubetuTableRow() As HanteiKojiSyubetuTableRow
            Return CType(Me.NewRow,HanteiKojiSyubetuTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New HanteiKojiSyubetuTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(HanteiKojiSyubetuTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HanteiKojiSyubetuTableRowChangedEvent) Is Nothing) Then
                RaiseEvent HanteiKojiSyubetuTableRowChanged(Me, New HanteiKojiSyubetuTableRowChangeEvent(CType(e.Row,HanteiKojiSyubetuTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HanteiKojiSyubetuTableRowChangingEvent) Is Nothing) Then
                RaiseEvent HanteiKojiSyubetuTableRowChanging(Me, New HanteiKojiSyubetuTableRowChangeEvent(CType(e.Row,HanteiKojiSyubetuTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HanteiKojiSyubetuTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent HanteiKojiSyubetuTableRowDeleted(Me, New HanteiKojiSyubetuTableRowChangeEvent(CType(e.Row,HanteiKojiSyubetuTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HanteiKojiSyubetuTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent HanteiKojiSyubetuTableRowDeleting(Me, New HanteiKojiSyubetuTableRowChangeEvent(CType(e.Row,HanteiKojiSyubetuTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveHanteiKojiSyubetuTableRow(ByVal row As HanteiKojiSyubetuTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As KisoSiyouDataSet = New KisoSiyouDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "HanteiKojiSyubetuTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class KisoSiyouTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableKisoSiyouTable As KisoSiyouTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKisoSiyouTable = CType(Me.Table,KisoSiyouTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ks_siyou_no() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouTable.ks_siyou_noColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouTable' にある列 'ks_siyou_no' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouTable.ks_siyou_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ks_siyou() As String
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouTable.ks_siyouColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouTable' にある列 'ks_siyou' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouTable.ks_siyouColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property koj_hantei_flg() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouTable.koj_hantei_flgColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouTable' にある列 'koj_hantei_flg' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouTable.koj_hantei_flgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isks_siyou_noNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouTable.ks_siyou_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setks_siyou_noNull()
            Me(Me.tableKisoSiyouTable.ks_siyou_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isks_siyouNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouTable.ks_siyouColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setks_siyouNull()
            Me(Me.tableKisoSiyouTable.ks_siyouColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskoj_hantei_flgNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouTable.koj_hantei_flgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkoj_hantei_flgNull()
            Me(Me.tableKisoSiyouTable.koj_hantei_flgColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class KisoSiyouSetuzokusiTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableKisoSiyouSetuzokusiTable As KisoSiyouSetuzokusiTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKisoSiyouSetuzokusiTable = CType(Me.Table,KisoSiyouSetuzokusiTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ks_siyou_setuzokusi_no() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouSetuzokusiTable.ks_siyou_setuzokusi_noColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouSetuzokusiTable' にある列 'ks_siyou_setuzokusi_no' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouSetuzokusiTable.ks_siyou_setuzokusi_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ks_siyou_setuzokusi() As String
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouSetuzokusiTable.ks_siyou_setuzokusiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouSetuzokusiTable' にある列 'ks_siyou_setuzokusi' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouSetuzokusiTable.ks_siyou_setuzokusiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isks_siyou_setuzokusi_noNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouSetuzokusiTable.ks_siyou_setuzokusi_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setks_siyou_setuzokusi_noNull()
            Me(Me.tableKisoSiyouSetuzokusiTable.ks_siyou_setuzokusi_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isks_siyou_setuzokusiNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouSetuzokusiTable.ks_siyou_setuzokusiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setks_siyou_setuzokusiNull()
            Me(Me.tableKisoSiyouSetuzokusiTable.ks_siyou_setuzokusiColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class KisoSiyouSearchTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableKisoSiyouSearchTable As KisoSiyouSearchTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKisoSiyouSearchTable = CType(Me.Table,KisoSiyouSearchTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ks_siyou_no() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouSearchTable.ks_siyou_noColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouSearchTable' にある列 'ks_siyou_no' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouSearchTable.ks_siyou_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ks_siyou() As String
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouSearchTable.ks_siyouColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouSearchTable' にある列 'ks_siyou' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouSearchTable.ks_siyouColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property koj_hantei_flg() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouSearchTable.koj_hantei_flgColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouSearchTable' にある列 'koj_hantei_flg' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouSearchTable.koj_hantei_flgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kameiten_cd() As String
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouSearchTable.kameiten_cdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouSearchTable' にある列 'kameiten_cd' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouSearchTable.kameiten_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kahi_kbn() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouSearchTable.kahi_kbnColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouSearchTable' にある列 'kahi_kbn' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouSearchTable.kahi_kbnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nyuuryoku_no() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableKisoSiyouSearchTable.nyuuryoku_noColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'KisoSiyouSearchTable' にある列 'nyuuryoku_no' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableKisoSiyouSearchTable.nyuuryoku_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isks_siyou_noNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouSearchTable.ks_siyou_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setks_siyou_noNull()
            Me(Me.tableKisoSiyouSearchTable.ks_siyou_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isks_siyouNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouSearchTable.ks_siyouColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setks_siyouNull()
            Me(Me.tableKisoSiyouSearchTable.ks_siyouColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskoj_hantei_flgNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouSearchTable.koj_hantei_flgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkoj_hantei_flgNull()
            Me(Me.tableKisoSiyouSearchTable.koj_hantei_flgColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskameiten_cdNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouSearchTable.kameiten_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkameiten_cdNull()
            Me(Me.tableKisoSiyouSearchTable.kameiten_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskahi_kbnNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouSearchTable.kahi_kbnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkahi_kbnNull()
            Me(Me.tableKisoSiyouSearchTable.kahi_kbnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnyuuryoku_noNull() As Boolean
            Return Me.IsNull(Me.tableKisoSiyouSearchTable.nyuuryoku_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnyuuryoku_noNull()
            Me(Me.tableKisoSiyouSearchTable.nyuuryoku_noColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class HanteiKojiSyubetuTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableHanteiKojiSyubetuTable As HanteiKojiSyubetuTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHanteiKojiSyubetuTable = CType(Me.Table,HanteiKojiSyubetuTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ks_siyou_no() As Integer
            Get
                Return CType(Me(Me.tableHanteiKojiSyubetuTable.ks_siyou_noColumn),Integer)
            End Get
            Set
                Me(Me.tableHanteiKojiSyubetuTable.ks_siyou_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kairy_koj_syubetu_no() As Integer
            Get
                Return CType(Me(Me.tableHanteiKojiSyubetuTable.kairy_koj_syubetu_noColumn),Integer)
            End Get
            Set
                Me(Me.tableHanteiKojiSyubetuTable.kairy_koj_syubetu_noColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class KisoSiyouTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KisoSiyouTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As KisoSiyouTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As KisoSiyouTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class KisoSiyouSetuzokusiTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KisoSiyouSetuzokusiTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As KisoSiyouSetuzokusiTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As KisoSiyouSetuzokusiTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class KisoSiyouSearchTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KisoSiyouSearchTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As KisoSiyouSearchTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As KisoSiyouSearchTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class HanteiKojiSyubetuTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As HanteiKojiSyubetuTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As HanteiKojiSyubetuTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As HanteiKojiSyubetuTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

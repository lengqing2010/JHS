'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.3053
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("IkkatuNyuukinTaisyouDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class IkkatuNyuukinTaisyouDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableIkkatuNyuukinTaisyouMstFullSet As IkkatuNyuukinTaisyouMstFullSetDataTable
    
    Private tableSeikyuuSougaku As SeikyuuSougakuDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("IkkatuNyuukinTaisyouMstFullSet")) Is Nothing) Then
                MyBase.Tables.Add(New IkkatuNyuukinTaisyouMstFullSetDataTable(ds.Tables("IkkatuNyuukinTaisyouMstFullSet")))
            End If
            If (Not (ds.Tables("SeikyuuSougaku")) Is Nothing) Then
                MyBase.Tables.Add(New SeikyuuSougakuDataTable(ds.Tables("SeikyuuSougaku")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property IkkatuNyuukinTaisyouMstFullSet() As IkkatuNyuukinTaisyouMstFullSetDataTable
        Get
            Return Me.tableIkkatuNyuukinTaisyouMstFullSet
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SeikyuuSougaku() As SeikyuuSougakuDataTable
        Get
            Return Me.tableSeikyuuSougaku
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As IkkatuNyuukinTaisyouDataSet = CType(MyBase.Clone,IkkatuNyuukinTaisyouDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("IkkatuNyuukinTaisyouMstFullSet")) Is Nothing) Then
                MyBase.Tables.Add(New IkkatuNyuukinTaisyouMstFullSetDataTable(ds.Tables("IkkatuNyuukinTaisyouMstFullSet")))
            End If
            If (Not (ds.Tables("SeikyuuSougaku")) Is Nothing) Then
                MyBase.Tables.Add(New SeikyuuSougakuDataTable(ds.Tables("SeikyuuSougaku")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableIkkatuNyuukinTaisyouMstFullSet = CType(MyBase.Tables("IkkatuNyuukinTaisyouMstFullSet"),IkkatuNyuukinTaisyouMstFullSetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableIkkatuNyuukinTaisyouMstFullSet) Is Nothing) Then
                Me.tableIkkatuNyuukinTaisyouMstFullSet.InitVars
            End If
        End If
        Me.tableSeikyuuSougaku = CType(MyBase.Tables("SeikyuuSougaku"),SeikyuuSougakuDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSeikyuuSougaku) Is Nothing) Then
                Me.tableSeikyuuSougaku.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "IkkatuNyuukinTaisyouDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/IkkatuNyuukinTaisyouDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableIkkatuNyuukinTaisyouMstFullSet = New IkkatuNyuukinTaisyouMstFullSetDataTable
        MyBase.Tables.Add(Me.tableIkkatuNyuukinTaisyouMstFullSet)
        Me.tableSeikyuuSougaku = New SeikyuuSougakuDataTable
        MyBase.Tables.Add(Me.tableSeikyuuSougaku)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeIkkatuNyuukinTaisyouMstFullSet() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSeikyuuSougaku() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As IkkatuNyuukinTaisyouDataSet = New IkkatuNyuukinTaisyouDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub IkkatuNyuukinTaisyouMstFullSetRowChangeEventHandler(ByVal sender As Object, ByVal e As IkkatuNyuukinTaisyouMstFullSetRowChangeEvent)
    
    Public Delegate Sub SeikyuuSougakuRowChangeEventHandler(ByVal sender As Object, ByVal e As SeikyuuSougakuRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class IkkatuNyuukinTaisyouMstFullSetDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnkeiretu_cd As Global.System.Data.DataColumn
        
        Private columnsyouhin1 As Global.System.Data.DataColumn
        
        Private columnsyouhin3 As Global.System.Data.DataColumn
        
        Private columnkairy_koj As Global.System.Data.DataColumn
        
        Private columnt_koj As Global.System.Data.DataColumn
        
        Private columntys_saihak As Global.System.Data.DataColumn
        
        Private columnkoj_saihak As Global.System.Data.DataColumn
        
        Private columnhosyousyo_saihak As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "IkkatuNyuukinTaisyouMstFullSet"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property keiretu_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkeiretu_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property syouhin1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsyouhin1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property syouhin3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsyouhin3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kairy_kojColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkairy_koj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t_kojColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnt_koj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tys_saihakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntys_saihak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property koj_saihakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkoj_saihak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hosyousyo_saihakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhosyousyo_saihak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As IkkatuNyuukinTaisyouMstFullSetRow
            Get
                Return CType(Me.Rows(index),IkkatuNyuukinTaisyouMstFullSetRow)
            End Get
        End Property
        
        Public Event IkkatuNyuukinTaisyouMstFullSetRowChanging As IkkatuNyuukinTaisyouMstFullSetRowChangeEventHandler
        
        Public Event IkkatuNyuukinTaisyouMstFullSetRowChanged As IkkatuNyuukinTaisyouMstFullSetRowChangeEventHandler
        
        Public Event IkkatuNyuukinTaisyouMstFullSetRowDeleting As IkkatuNyuukinTaisyouMstFullSetRowChangeEventHandler
        
        Public Event IkkatuNyuukinTaisyouMstFullSetRowDeleted As IkkatuNyuukinTaisyouMstFullSetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddIkkatuNyuukinTaisyouMstFullSetRow(ByVal row As IkkatuNyuukinTaisyouMstFullSetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddIkkatuNyuukinTaisyouMstFullSetRow(ByVal keiretu_cd As String, ByVal syouhin1 As Integer, ByVal syouhin3 As Integer, ByVal kairy_koj As Integer, ByVal t_koj As Integer, ByVal tys_saihak As Integer, ByVal koj_saihak As Integer, ByVal hosyousyo_saihak As Integer) As IkkatuNyuukinTaisyouMstFullSetRow
            Dim rowIkkatuNyuukinTaisyouMstFullSetRow As IkkatuNyuukinTaisyouMstFullSetRow = CType(Me.NewRow,IkkatuNyuukinTaisyouMstFullSetRow)
            Dim columnValuesArray() As Object = New Object() {keiretu_cd, syouhin1, syouhin3, kairy_koj, t_koj, tys_saihak, koj_saihak, hosyousyo_saihak}
            rowIkkatuNyuukinTaisyouMstFullSetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowIkkatuNyuukinTaisyouMstFullSetRow)
            Return rowIkkatuNyuukinTaisyouMstFullSetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBykeiretu_cd(ByVal keiretu_cd As String) As IkkatuNyuukinTaisyouMstFullSetRow
            Return CType(Me.Rows.Find(New Object() {keiretu_cd}),IkkatuNyuukinTaisyouMstFullSetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As IkkatuNyuukinTaisyouMstFullSetDataTable = CType(MyBase.Clone,IkkatuNyuukinTaisyouMstFullSetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New IkkatuNyuukinTaisyouMstFullSetDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnkeiretu_cd = MyBase.Columns("keiretu_cd")
            Me.columnsyouhin1 = MyBase.Columns("syouhin1")
            Me.columnsyouhin3 = MyBase.Columns("syouhin3")
            Me.columnkairy_koj = MyBase.Columns("kairy_koj")
            Me.columnt_koj = MyBase.Columns("t_koj")
            Me.columntys_saihak = MyBase.Columns("tys_saihak")
            Me.columnkoj_saihak = MyBase.Columns("koj_saihak")
            Me.columnhosyousyo_saihak = MyBase.Columns("hosyousyo_saihak")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnkeiretu_cd = New Global.System.Data.DataColumn("keiretu_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkeiretu_cd)
            Me.columnsyouhin1 = New Global.System.Data.DataColumn("syouhin1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsyouhin1)
            Me.columnsyouhin3 = New Global.System.Data.DataColumn("syouhin3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsyouhin3)
            Me.columnkairy_koj = New Global.System.Data.DataColumn("kairy_koj", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkairy_koj)
            Me.columnt_koj = New Global.System.Data.DataColumn("t_koj", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt_koj)
            Me.columntys_saihak = New Global.System.Data.DataColumn("tys_saihak", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntys_saihak)
            Me.columnkoj_saihak = New Global.System.Data.DataColumn("koj_saihak", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkoj_saihak)
            Me.columnhosyousyo_saihak = New Global.System.Data.DataColumn("hosyousyo_saihak", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhosyousyo_saihak)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnkeiretu_cd}, true))
            Me.columnkeiretu_cd.AllowDBNull = false
            Me.columnkeiretu_cd.Unique = true
            Me.columnkeiretu_cd.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewIkkatuNyuukinTaisyouMstFullSetRow() As IkkatuNyuukinTaisyouMstFullSetRow
            Return CType(Me.NewRow,IkkatuNyuukinTaisyouMstFullSetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New IkkatuNyuukinTaisyouMstFullSetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(IkkatuNyuukinTaisyouMstFullSetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.IkkatuNyuukinTaisyouMstFullSetRowChangedEvent) Is Nothing) Then
                RaiseEvent IkkatuNyuukinTaisyouMstFullSetRowChanged(Me, New IkkatuNyuukinTaisyouMstFullSetRowChangeEvent(CType(e.Row,IkkatuNyuukinTaisyouMstFullSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.IkkatuNyuukinTaisyouMstFullSetRowChangingEvent) Is Nothing) Then
                RaiseEvent IkkatuNyuukinTaisyouMstFullSetRowChanging(Me, New IkkatuNyuukinTaisyouMstFullSetRowChangeEvent(CType(e.Row,IkkatuNyuukinTaisyouMstFullSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.IkkatuNyuukinTaisyouMstFullSetRowDeletedEvent) Is Nothing) Then
                RaiseEvent IkkatuNyuukinTaisyouMstFullSetRowDeleted(Me, New IkkatuNyuukinTaisyouMstFullSetRowChangeEvent(CType(e.Row,IkkatuNyuukinTaisyouMstFullSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.IkkatuNyuukinTaisyouMstFullSetRowDeletingEvent) Is Nothing) Then
                RaiseEvent IkkatuNyuukinTaisyouMstFullSetRowDeleting(Me, New IkkatuNyuukinTaisyouMstFullSetRowChangeEvent(CType(e.Row,IkkatuNyuukinTaisyouMstFullSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveIkkatuNyuukinTaisyouMstFullSetRow(ByVal row As IkkatuNyuukinTaisyouMstFullSetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As IkkatuNyuukinTaisyouDataSet = New IkkatuNyuukinTaisyouDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "IkkatuNyuukinTaisyouMstFullSetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SeikyuuSougakuDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnseikyuu_sougaku As Global.System.Data.DataColumn
        
        Private columnnyuukin_flg As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SeikyuuSougaku"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property seikyuu_sougakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseikyuu_sougaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nyuukin_flgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnyuukin_flg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SeikyuuSougakuRow
            Get
                Return CType(Me.Rows(index),SeikyuuSougakuRow)
            End Get
        End Property
        
        Public Event SeikyuuSougakuRowChanging As SeikyuuSougakuRowChangeEventHandler
        
        Public Event SeikyuuSougakuRowChanged As SeikyuuSougakuRowChangeEventHandler
        
        Public Event SeikyuuSougakuRowDeleting As SeikyuuSougakuRowChangeEventHandler
        
        Public Event SeikyuuSougakuRowDeleted As SeikyuuSougakuRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSeikyuuSougakuRow(ByVal row As SeikyuuSougakuRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSeikyuuSougakuRow(ByVal seikyuu_sougaku As Integer, ByVal nyuukin_flg As Integer) As SeikyuuSougakuRow
            Dim rowSeikyuuSougakuRow As SeikyuuSougakuRow = CType(Me.NewRow,SeikyuuSougakuRow)
            Dim columnValuesArray() As Object = New Object() {seikyuu_sougaku, nyuukin_flg}
            rowSeikyuuSougakuRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSeikyuuSougakuRow)
            Return rowSeikyuuSougakuRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SeikyuuSougakuDataTable = CType(MyBase.Clone,SeikyuuSougakuDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SeikyuuSougakuDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnseikyuu_sougaku = MyBase.Columns("seikyuu_sougaku")
            Me.columnnyuukin_flg = MyBase.Columns("nyuukin_flg")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnseikyuu_sougaku = New Global.System.Data.DataColumn("seikyuu_sougaku", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseikyuu_sougaku)
            Me.columnnyuukin_flg = New Global.System.Data.DataColumn("nyuukin_flg", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnyuukin_flg)
            Me.columnseikyuu_sougaku.Caption = "uri_gaku"
            Me.columnnyuukin_flg.Caption = "ikkatu_nyuukin_flg"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSeikyuuSougakuRow() As SeikyuuSougakuRow
            Return CType(Me.NewRow,SeikyuuSougakuRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SeikyuuSougakuRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SeikyuuSougakuRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SeikyuuSougakuRowChangedEvent) Is Nothing) Then
                RaiseEvent SeikyuuSougakuRowChanged(Me, New SeikyuuSougakuRowChangeEvent(CType(e.Row,SeikyuuSougakuRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SeikyuuSougakuRowChangingEvent) Is Nothing) Then
                RaiseEvent SeikyuuSougakuRowChanging(Me, New SeikyuuSougakuRowChangeEvent(CType(e.Row,SeikyuuSougakuRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SeikyuuSougakuRowDeletedEvent) Is Nothing) Then
                RaiseEvent SeikyuuSougakuRowDeleted(Me, New SeikyuuSougakuRowChangeEvent(CType(e.Row,SeikyuuSougakuRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SeikyuuSougakuRowDeletingEvent) Is Nothing) Then
                RaiseEvent SeikyuuSougakuRowDeleting(Me, New SeikyuuSougakuRowChangeEvent(CType(e.Row,SeikyuuSougakuRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSeikyuuSougakuRow(ByVal row As SeikyuuSougakuRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As IkkatuNyuukinTaisyouDataSet = New IkkatuNyuukinTaisyouDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SeikyuuSougakuDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class IkkatuNyuukinTaisyouMstFullSetRow
        Inherits Global.System.Data.DataRow
        
        Private tableIkkatuNyuukinTaisyouMstFullSet As IkkatuNyuukinTaisyouMstFullSetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableIkkatuNyuukinTaisyouMstFullSet = CType(Me.Table,IkkatuNyuukinTaisyouMstFullSetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property keiretu_cd() As String
            Get
                Return CType(Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.keiretu_cdColumn),String)
            End Get
            Set
                Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.keiretu_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property syouhin1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.syouhin1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IkkatuNyuukinTaisyouMstFullSet' にある列 'syouhin1' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.syouhin1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property syouhin3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.syouhin3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IkkatuNyuukinTaisyouMstFullSet' にある列 'syouhin3' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.syouhin3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kairy_koj() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.kairy_kojColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IkkatuNyuukinTaisyouMstFullSet' にある列 'kairy_koj' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.kairy_kojColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t_koj() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.t_kojColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IkkatuNyuukinTaisyouMstFullSet' にある列 't_koj' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.t_kojColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tys_saihak() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.tys_saihakColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IkkatuNyuukinTaisyouMstFullSet' にある列 'tys_saihak' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.tys_saihakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property koj_saihak() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.koj_saihakColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IkkatuNyuukinTaisyouMstFullSet' にある列 'koj_saihak' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.koj_saihakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hosyousyo_saihak() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.hosyousyo_saihakColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'IkkatuNyuukinTaisyouMstFullSet' にある列 'hosyousyo_saihak' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.hosyousyo_saihakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issyouhin1Null() As Boolean
            Return Me.IsNull(Me.tableIkkatuNyuukinTaisyouMstFullSet.syouhin1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsyouhin1Null()
            Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.syouhin1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issyouhin3Null() As Boolean
            Return Me.IsNull(Me.tableIkkatuNyuukinTaisyouMstFullSet.syouhin3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsyouhin3Null()
            Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.syouhin3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskairy_kojNull() As Boolean
            Return Me.IsNull(Me.tableIkkatuNyuukinTaisyouMstFullSet.kairy_kojColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkairy_kojNull()
            Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.kairy_kojColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ist_kojNull() As Boolean
            Return Me.IsNull(Me.tableIkkatuNyuukinTaisyouMstFullSet.t_kojColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sett_kojNull()
            Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.t_kojColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istys_saihakNull() As Boolean
            Return Me.IsNull(Me.tableIkkatuNyuukinTaisyouMstFullSet.tys_saihakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settys_saihakNull()
            Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.tys_saihakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskoj_saihakNull() As Boolean
            Return Me.IsNull(Me.tableIkkatuNyuukinTaisyouMstFullSet.koj_saihakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkoj_saihakNull()
            Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.koj_saihakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ishosyousyo_saihakNull() As Boolean
            Return Me.IsNull(Me.tableIkkatuNyuukinTaisyouMstFullSet.hosyousyo_saihakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Sethosyousyo_saihakNull()
            Me(Me.tableIkkatuNyuukinTaisyouMstFullSet.hosyousyo_saihakColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SeikyuuSougakuRow
        Inherits Global.System.Data.DataRow
        
        Private tableSeikyuuSougaku As SeikyuuSougakuDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSeikyuuSougaku = CType(Me.Table,SeikyuuSougakuDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property seikyuu_sougaku() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSeikyuuSougaku.seikyuu_sougakuColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SeikyuuSougaku' にある列 'seikyuu_sougaku' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSeikyuuSougaku.seikyuu_sougakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nyuukin_flg() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSeikyuuSougaku.nyuukin_flgColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SeikyuuSougaku' にある列 'nyuukin_flg' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSeikyuuSougaku.nyuukin_flgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isseikyuu_sougakuNull() As Boolean
            Return Me.IsNull(Me.tableSeikyuuSougaku.seikyuu_sougakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setseikyuu_sougakuNull()
            Me(Me.tableSeikyuuSougaku.seikyuu_sougakuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isnyuukin_flgNull() As Boolean
            Return Me.IsNull(Me.tableSeikyuuSougaku.nyuukin_flgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setnyuukin_flgNull()
            Me(Me.tableSeikyuuSougaku.nyuukin_flgColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class IkkatuNyuukinTaisyouMstFullSetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As IkkatuNyuukinTaisyouMstFullSetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As IkkatuNyuukinTaisyouMstFullSetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As IkkatuNyuukinTaisyouMstFullSetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SeikyuuSougakuRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SeikyuuSougakuRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SeikyuuSougakuRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SeikyuuSougakuRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.3603
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("JhsNyuukinTorikomiDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class JhsNyuukinTorikomiDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableNyuukinFileTorikomi As NyuukinFileTorikomiDataTable
    
    Private tableTyoufukuChk As TyoufukuChkDataTable
    
    Private tableNkFileHaitaTable As NkFileHaitaTableDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("NyuukinFileTorikomi")) Is Nothing) Then
                MyBase.Tables.Add(New NyuukinFileTorikomiDataTable(ds.Tables("NyuukinFileTorikomi")))
            End If
            If (Not (ds.Tables("TyoufukuChk")) Is Nothing) Then
                MyBase.Tables.Add(New TyoufukuChkDataTable(ds.Tables("TyoufukuChk")))
            End If
            If (Not (ds.Tables("NkFileHaitaTable")) Is Nothing) Then
                MyBase.Tables.Add(New NkFileHaitaTableDataTable(ds.Tables("NkFileHaitaTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NyuukinFileTorikomi() As NyuukinFileTorikomiDataTable
        Get
            Return Me.tableNyuukinFileTorikomi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TyoufukuChk() As TyoufukuChkDataTable
        Get
            Return Me.tableTyoufukuChk
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NkFileHaitaTable() As NkFileHaitaTableDataTable
        Get
            Return Me.tableNkFileHaitaTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As JhsNyuukinTorikomiDataSet = CType(MyBase.Clone,JhsNyuukinTorikomiDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("NyuukinFileTorikomi")) Is Nothing) Then
                MyBase.Tables.Add(New NyuukinFileTorikomiDataTable(ds.Tables("NyuukinFileTorikomi")))
            End If
            If (Not (ds.Tables("TyoufukuChk")) Is Nothing) Then
                MyBase.Tables.Add(New TyoufukuChkDataTable(ds.Tables("TyoufukuChk")))
            End If
            If (Not (ds.Tables("NkFileHaitaTable")) Is Nothing) Then
                MyBase.Tables.Add(New NkFileHaitaTableDataTable(ds.Tables("NkFileHaitaTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableNyuukinFileTorikomi = CType(MyBase.Tables("NyuukinFileTorikomi"),NyuukinFileTorikomiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNyuukinFileTorikomi) Is Nothing) Then
                Me.tableNyuukinFileTorikomi.InitVars
            End If
        End If
        Me.tableTyoufukuChk = CType(MyBase.Tables("TyoufukuChk"),TyoufukuChkDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTyoufukuChk) Is Nothing) Then
                Me.tableTyoufukuChk.InitVars
            End If
        End If
        Me.tableNkFileHaitaTable = CType(MyBase.Tables("NkFileHaitaTable"),NkFileHaitaTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNkFileHaitaTable) Is Nothing) Then
                Me.tableNkFileHaitaTable.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "JhsNyuukinTorikomiDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/JhsNyuukinTorikomiDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableNyuukinFileTorikomi = New NyuukinFileTorikomiDataTable
        MyBase.Tables.Add(Me.tableNyuukinFileTorikomi)
        Me.tableTyoufukuChk = New TyoufukuChkDataTable
        MyBase.Tables.Add(Me.tableTyoufukuChk)
        Me.tableNkFileHaitaTable = New NkFileHaitaTableDataTable
        MyBase.Tables.Add(Me.tableNkFileHaitaTable)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeNyuukinFileTorikomi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTyoufukuChk() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeNkFileHaitaTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As JhsNyuukinTorikomiDataSet = New JhsNyuukinTorikomiDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub NyuukinFileTorikomiRowChangeEventHandler(ByVal sender As Object, ByVal e As NyuukinFileTorikomiRowChangeEvent)
    
    Public Delegate Sub TyoufukuChkRowChangeEventHandler(ByVal sender As Object, ByVal e As TyoufukuChkRowChangeEvent)
    
    Public Delegate Sub NkFileHaitaTableRowChangeEventHandler(ByVal sender As Object, ByVal e As NkFileHaitaTableRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NyuukinFileTorikomiDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnnyuukin_torikomi_unique_no As Global.System.Data.DataColumn
        
        Private columnedi_jouhou_sakusei_date As Global.System.Data.DataColumn
        
        Private columntorikesi As Global.System.Data.DataColumn
        
        Private columnnyuukin_date As Global.System.Data.DataColumn
        
        Private columntorikomi_denpyou_no As Global.System.Data.DataColumn
        
        Private columnseikyuu_saki_cd As Global.System.Data.DataColumn
        
        Private columnseikyuu_saki_brc As Global.System.Data.DataColumn
        
        Private columnseikyuu_saki_kbn As Global.System.Data.DataColumn
        
        Private columnseikyuu_saki_mei As Global.System.Data.DataColumn
        
        Private columnsyougou_kouza_no As Global.System.Data.DataColumn
        
        Private columngenkin As Global.System.Data.DataColumn
        
        Private columnkogitte As Global.System.Data.DataColumn
        
        Private columnfurikomi As Global.System.Data.DataColumn
        
        Private columntegata As Global.System.Data.DataColumn
        
        Private columnsousai As Global.System.Data.DataColumn
        
        Private columnnebiki As Global.System.Data.DataColumn
        
        Private columnsonota As Global.System.Data.DataColumn
        
        Private columnkyouryoku_kaihi As Global.System.Data.DataColumn
        
        Private columnkouza_furikae As Global.System.Data.DataColumn
        
        Private columnfurikomi_tesuuryou As Global.System.Data.DataColumn
        
        Private columntegata_kijitu As Global.System.Data.DataColumn
        
        Private columntegata_no As Global.System.Data.DataColumn
        
        Private columntekiyou_mei As Global.System.Data.DataColumn
        
        Private columnadd_login_user_id As Global.System.Data.DataColumn
        
        Private columnadd_datetime As Global.System.Data.DataColumn
        
        Private columnupd_login_user_id As Global.System.Data.DataColumn
        
        Private columnupd_datetime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NyuukinFileTorikomi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nyuukin_torikomi_unique_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnyuukin_torikomi_unique_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property edi_jouhou_sakusei_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnedi_jouhou_sakusei_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property torikesiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntorikesi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nyuukin_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnyuukin_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property torikomi_denpyou_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntorikomi_denpyou_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property seikyuu_saki_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseikyuu_saki_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property seikyuu_saki_brcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseikyuu_saki_brc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property seikyuu_saki_kbnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseikyuu_saki_kbn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property seikyuu_saki_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseikyuu_saki_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property syougou_kouza_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsyougou_kouza_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property genkinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngenkin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kogitteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkogitte
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property furikomiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfurikomi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tegataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntegata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sousaiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsousai
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nebikiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnebiki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sonotaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsonota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kyouryoku_kaihiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkyouryoku_kaihi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kouza_furikaeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkouza_furikae
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property furikomi_tesuuryouColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfurikomi_tesuuryou
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tegata_kijituColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntegata_kijitu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tegata_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntegata_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tekiyou_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntekiyou_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_login_user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_login_user_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_datetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_datetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property upd_login_user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupd_login_user_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property upd_datetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupd_datetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NyuukinFileTorikomiRow
            Get
                Return CType(Me.Rows(index),NyuukinFileTorikomiRow)
            End Get
        End Property
        
        Public Event NyuukinFileTorikomiRowChanging As NyuukinFileTorikomiRowChangeEventHandler
        
        Public Event NyuukinFileTorikomiRowChanged As NyuukinFileTorikomiRowChangeEventHandler
        
        Public Event NyuukinFileTorikomiRowDeleting As NyuukinFileTorikomiRowChangeEventHandler
        
        Public Event NyuukinFileTorikomiRowDeleted As NyuukinFileTorikomiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddNyuukinFileTorikomiRow(ByVal row As NyuukinFileTorikomiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddNyuukinFileTorikomiRow( _
                    ByVal edi_jouhou_sakusei_date As String,  _
                    ByVal torikesi As Integer,  _
                    ByVal nyuukin_date As Date,  _
                    ByVal torikomi_denpyou_no As String,  _
                    ByVal seikyuu_saki_cd As String,  _
                    ByVal seikyuu_saki_brc As String,  _
                    ByVal seikyuu_saki_kbn As String,  _
                    ByVal seikyuu_saki_mei As String,  _
                    ByVal syougou_kouza_no As String,  _
                    ByVal genkin As Long,  _
                    ByVal kogitte As Long,  _
                    ByVal furikomi As Long,  _
                    ByVal tegata As Long,  _
                    ByVal sousai As Long,  _
                    ByVal nebiki As Long,  _
                    ByVal sonota As Long,  _
                    ByVal kyouryoku_kaihi As Long,  _
                    ByVal kouza_furikae As Long,  _
                    ByVal furikomi_tesuuryou As Long,  _
                    ByVal tegata_kijitu As Date,  _
                    ByVal tegata_no As String,  _
                    ByVal tekiyou_mei As String,  _
                    ByVal add_login_user_id As String,  _
                    ByVal add_datetime As Date,  _
                    ByVal upd_login_user_id As String,  _
                    ByVal upd_datetime As Date) As NyuukinFileTorikomiRow
            Dim rowNyuukinFileTorikomiRow As NyuukinFileTorikomiRow = CType(Me.NewRow,NyuukinFileTorikomiRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, edi_jouhou_sakusei_date, torikesi, nyuukin_date, torikomi_denpyou_no, seikyuu_saki_cd, seikyuu_saki_brc, seikyuu_saki_kbn, seikyuu_saki_mei, syougou_kouza_no, genkin, kogitte, furikomi, tegata, sousai, nebiki, sonota, kyouryoku_kaihi, kouza_furikae, furikomi_tesuuryou, tegata_kijitu, tegata_no, tekiyou_mei, add_login_user_id, add_datetime, upd_login_user_id, upd_datetime}
            rowNyuukinFileTorikomiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNyuukinFileTorikomiRow)
            Return rowNyuukinFileTorikomiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NyuukinFileTorikomiDataTable = CType(MyBase.Clone,NyuukinFileTorikomiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NyuukinFileTorikomiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnnyuukin_torikomi_unique_no = MyBase.Columns("nyuukin_torikomi_unique_no")
            Me.columnedi_jouhou_sakusei_date = MyBase.Columns("edi_jouhou_sakusei_date")
            Me.columntorikesi = MyBase.Columns("torikesi")
            Me.columnnyuukin_date = MyBase.Columns("nyuukin_date")
            Me.columntorikomi_denpyou_no = MyBase.Columns("torikomi_denpyou_no")
            Me.columnseikyuu_saki_cd = MyBase.Columns("seikyuu_saki_cd")
            Me.columnseikyuu_saki_brc = MyBase.Columns("seikyuu_saki_brc")
            Me.columnseikyuu_saki_kbn = MyBase.Columns("seikyuu_saki_kbn")
            Me.columnseikyuu_saki_mei = MyBase.Columns("seikyuu_saki_mei")
            Me.columnsyougou_kouza_no = MyBase.Columns("syougou_kouza_no")
            Me.columngenkin = MyBase.Columns("genkin")
            Me.columnkogitte = MyBase.Columns("kogitte")
            Me.columnfurikomi = MyBase.Columns("furikomi")
            Me.columntegata = MyBase.Columns("tegata")
            Me.columnsousai = MyBase.Columns("sousai")
            Me.columnnebiki = MyBase.Columns("nebiki")
            Me.columnsonota = MyBase.Columns("sonota")
            Me.columnkyouryoku_kaihi = MyBase.Columns("kyouryoku_kaihi")
            Me.columnkouza_furikae = MyBase.Columns("kouza_furikae")
            Me.columnfurikomi_tesuuryou = MyBase.Columns("furikomi_tesuuryou")
            Me.columntegata_kijitu = MyBase.Columns("tegata_kijitu")
            Me.columntegata_no = MyBase.Columns("tegata_no")
            Me.columntekiyou_mei = MyBase.Columns("tekiyou_mei")
            Me.columnadd_login_user_id = MyBase.Columns("add_login_user_id")
            Me.columnadd_datetime = MyBase.Columns("add_datetime")
            Me.columnupd_login_user_id = MyBase.Columns("upd_login_user_id")
            Me.columnupd_datetime = MyBase.Columns("upd_datetime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnnyuukin_torikomi_unique_no = New Global.System.Data.DataColumn("nyuukin_torikomi_unique_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnyuukin_torikomi_unique_no)
            Me.columnedi_jouhou_sakusei_date = New Global.System.Data.DataColumn("edi_jouhou_sakusei_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnedi_jouhou_sakusei_date)
            Me.columntorikesi = New Global.System.Data.DataColumn("torikesi", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntorikesi)
            Me.columnnyuukin_date = New Global.System.Data.DataColumn("nyuukin_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnyuukin_date)
            Me.columntorikomi_denpyou_no = New Global.System.Data.DataColumn("torikomi_denpyou_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntorikomi_denpyou_no)
            Me.columnseikyuu_saki_cd = New Global.System.Data.DataColumn("seikyuu_saki_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseikyuu_saki_cd)
            Me.columnseikyuu_saki_brc = New Global.System.Data.DataColumn("seikyuu_saki_brc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseikyuu_saki_brc)
            Me.columnseikyuu_saki_kbn = New Global.System.Data.DataColumn("seikyuu_saki_kbn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseikyuu_saki_kbn)
            Me.columnseikyuu_saki_mei = New Global.System.Data.DataColumn("seikyuu_saki_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseikyuu_saki_mei)
            Me.columnsyougou_kouza_no = New Global.System.Data.DataColumn("syougou_kouza_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsyougou_kouza_no)
            Me.columngenkin = New Global.System.Data.DataColumn("genkin", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngenkin)
            Me.columnkogitte = New Global.System.Data.DataColumn("kogitte", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkogitte)
            Me.columnfurikomi = New Global.System.Data.DataColumn("furikomi", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfurikomi)
            Me.columntegata = New Global.System.Data.DataColumn("tegata", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntegata)
            Me.columnsousai = New Global.System.Data.DataColumn("sousai", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsousai)
            Me.columnnebiki = New Global.System.Data.DataColumn("nebiki", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnebiki)
            Me.columnsonota = New Global.System.Data.DataColumn("sonota", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsonota)
            Me.columnkyouryoku_kaihi = New Global.System.Data.DataColumn("kyouryoku_kaihi", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkyouryoku_kaihi)
            Me.columnkouza_furikae = New Global.System.Data.DataColumn("kouza_furikae", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkouza_furikae)
            Me.columnfurikomi_tesuuryou = New Global.System.Data.DataColumn("furikomi_tesuuryou", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfurikomi_tesuuryou)
            Me.columntegata_kijitu = New Global.System.Data.DataColumn("tegata_kijitu", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntegata_kijitu)
            Me.columntegata_no = New Global.System.Data.DataColumn("tegata_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntegata_no)
            Me.columntekiyou_mei = New Global.System.Data.DataColumn("tekiyou_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntekiyou_mei)
            Me.columnadd_login_user_id = New Global.System.Data.DataColumn("add_login_user_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_login_user_id)
            Me.columnadd_datetime = New Global.System.Data.DataColumn("add_datetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_datetime)
            Me.columnupd_login_user_id = New Global.System.Data.DataColumn("upd_login_user_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupd_login_user_id)
            Me.columnupd_datetime = New Global.System.Data.DataColumn("upd_datetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupd_datetime)
            Me.columnnyuukin_torikomi_unique_no.AutoIncrement = true
            Me.columnnyuukin_torikomi_unique_no.AllowDBNull = false
            Me.columnnyuukin_torikomi_unique_no.ReadOnly = true
            Me.columnedi_jouhou_sakusei_date.MaxLength = 40
            Me.columntorikesi.AllowDBNull = false
            Me.columnnyuukin_date.AllowDBNull = false
            Me.columntorikomi_denpyou_no.AllowDBNull = false
            Me.columntorikomi_denpyou_no.MaxLength = 6
            Me.columnseikyuu_saki_cd.AllowDBNull = false
            Me.columnseikyuu_saki_cd.MaxLength = 5
            Me.columnseikyuu_saki_brc.MaxLength = 2
            Me.columnseikyuu_saki_kbn.MaxLength = 1
            Me.columnseikyuu_saki_mei.MaxLength = 80
            Me.columnsyougou_kouza_no.AllowDBNull = false
            Me.columnsyougou_kouza_no.MaxLength = 10
            Me.columntegata_no.MaxLength = 10
            Me.columntekiyou_mei.MaxLength = 255
            Me.columnadd_login_user_id.MaxLength = 30
            Me.columnupd_login_user_id.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewNyuukinFileTorikomiRow() As NyuukinFileTorikomiRow
            Return CType(Me.NewRow,NyuukinFileTorikomiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NyuukinFileTorikomiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NyuukinFileTorikomiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NyuukinFileTorikomiRowChangedEvent) Is Nothing) Then
                RaiseEvent NyuukinFileTorikomiRowChanged(Me, New NyuukinFileTorikomiRowChangeEvent(CType(e.Row,NyuukinFileTorikomiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NyuukinFileTorikomiRowChangingEvent) Is Nothing) Then
                RaiseEvent NyuukinFileTorikomiRowChanging(Me, New NyuukinFileTorikomiRowChangeEvent(CType(e.Row,NyuukinFileTorikomiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NyuukinFileTorikomiRowDeletedEvent) Is Nothing) Then
                RaiseEvent NyuukinFileTorikomiRowDeleted(Me, New NyuukinFileTorikomiRowChangeEvent(CType(e.Row,NyuukinFileTorikomiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NyuukinFileTorikomiRowDeletingEvent) Is Nothing) Then
                RaiseEvent NyuukinFileTorikomiRowDeleting(Me, New NyuukinFileTorikomiRowChangeEvent(CType(e.Row,NyuukinFileTorikomiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveNyuukinFileTorikomiRow(ByVal row As NyuukinFileTorikomiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As JhsNyuukinTorikomiDataSet = New JhsNyuukinTorikomiDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NyuukinFileTorikomiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TyoufukuChkDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndata_cnt As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TyoufukuChk"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property data_cntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_cnt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TyoufukuChkRow
            Get
                Return CType(Me.Rows(index),TyoufukuChkRow)
            End Get
        End Property
        
        Public Event TyoufukuChkRowChanging As TyoufukuChkRowChangeEventHandler
        
        Public Event TyoufukuChkRowChanged As TyoufukuChkRowChangeEventHandler
        
        Public Event TyoufukuChkRowDeleting As TyoufukuChkRowChangeEventHandler
        
        Public Event TyoufukuChkRowDeleted As TyoufukuChkRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTyoufukuChkRow(ByVal row As TyoufukuChkRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTyoufukuChkRow(ByVal data_cnt As Integer) As TyoufukuChkRow
            Dim rowTyoufukuChkRow As TyoufukuChkRow = CType(Me.NewRow,TyoufukuChkRow)
            Dim columnValuesArray() As Object = New Object() {data_cnt}
            rowTyoufukuChkRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTyoufukuChkRow)
            Return rowTyoufukuChkRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TyoufukuChkDataTable = CType(MyBase.Clone,TyoufukuChkDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TyoufukuChkDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndata_cnt = MyBase.Columns("data_cnt")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndata_cnt = New Global.System.Data.DataColumn("data_cnt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_cnt)
            Me.columndata_cnt.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTyoufukuChkRow() As TyoufukuChkRow
            Return CType(Me.NewRow,TyoufukuChkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TyoufukuChkRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TyoufukuChkRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TyoufukuChkRowChangedEvent) Is Nothing) Then
                RaiseEvent TyoufukuChkRowChanged(Me, New TyoufukuChkRowChangeEvent(CType(e.Row,TyoufukuChkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TyoufukuChkRowChangingEvent) Is Nothing) Then
                RaiseEvent TyoufukuChkRowChanging(Me, New TyoufukuChkRowChangeEvent(CType(e.Row,TyoufukuChkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TyoufukuChkRowDeletedEvent) Is Nothing) Then
                RaiseEvent TyoufukuChkRowDeleted(Me, New TyoufukuChkRowChangeEvent(CType(e.Row,TyoufukuChkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TyoufukuChkRowDeletingEvent) Is Nothing) Then
                RaiseEvent TyoufukuChkRowDeleting(Me, New TyoufukuChkRowChangeEvent(CType(e.Row,TyoufukuChkRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTyoufukuChkRow(ByVal row As TyoufukuChkRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As JhsNyuukinTorikomiDataSet = New JhsNyuukinTorikomiDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TyoufukuChkDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NkFileHaitaTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnnyuukin_torikomi_unique_no As Global.System.Data.DataColumn
        
        Private columnupd_login_user_id As Global.System.Data.DataColumn
        
        Private columnupd_datetime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NkFileHaitaTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nyuukin_torikomi_unique_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnyuukin_torikomi_unique_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property upd_login_user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupd_login_user_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property upd_datetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupd_datetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NkFileHaitaTableRow
            Get
                Return CType(Me.Rows(index),NkFileHaitaTableRow)
            End Get
        End Property
        
        Public Event NkFileHaitaTableRowChanging As NkFileHaitaTableRowChangeEventHandler
        
        Public Event NkFileHaitaTableRowChanged As NkFileHaitaTableRowChangeEventHandler
        
        Public Event NkFileHaitaTableRowDeleting As NkFileHaitaTableRowChangeEventHandler
        
        Public Event NkFileHaitaTableRowDeleted As NkFileHaitaTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddNkFileHaitaTableRow(ByVal row As NkFileHaitaTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddNkFileHaitaTableRow(ByVal upd_login_user_id As String, ByVal upd_datetime As Date) As NkFileHaitaTableRow
            Dim rowNkFileHaitaTableRow As NkFileHaitaTableRow = CType(Me.NewRow,NkFileHaitaTableRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, upd_login_user_id, upd_datetime}
            rowNkFileHaitaTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNkFileHaitaTableRow)
            Return rowNkFileHaitaTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBynyuukin_torikomi_unique_no(ByVal nyuukin_torikomi_unique_no As Integer) As NkFileHaitaTableRow
            Return CType(Me.Rows.Find(New Object() {nyuukin_torikomi_unique_no}),NkFileHaitaTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NkFileHaitaTableDataTable = CType(MyBase.Clone,NkFileHaitaTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NkFileHaitaTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnnyuukin_torikomi_unique_no = MyBase.Columns("nyuukin_torikomi_unique_no")
            Me.columnupd_login_user_id = MyBase.Columns("upd_login_user_id")
            Me.columnupd_datetime = MyBase.Columns("upd_datetime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnnyuukin_torikomi_unique_no = New Global.System.Data.DataColumn("nyuukin_torikomi_unique_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnyuukin_torikomi_unique_no)
            Me.columnupd_login_user_id = New Global.System.Data.DataColumn("upd_login_user_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupd_login_user_id)
            Me.columnupd_datetime = New Global.System.Data.DataColumn("upd_datetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupd_datetime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnnyuukin_torikomi_unique_no}, true))
            Me.columnnyuukin_torikomi_unique_no.AutoIncrement = true
            Me.columnnyuukin_torikomi_unique_no.AllowDBNull = false
            Me.columnnyuukin_torikomi_unique_no.ReadOnly = true
            Me.columnnyuukin_torikomi_unique_no.Unique = true
            Me.columnupd_login_user_id.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewNkFileHaitaTableRow() As NkFileHaitaTableRow
            Return CType(Me.NewRow,NkFileHaitaTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NkFileHaitaTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NkFileHaitaTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NkFileHaitaTableRowChangedEvent) Is Nothing) Then
                RaiseEvent NkFileHaitaTableRowChanged(Me, New NkFileHaitaTableRowChangeEvent(CType(e.Row,NkFileHaitaTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NkFileHaitaTableRowChangingEvent) Is Nothing) Then
                RaiseEvent NkFileHaitaTableRowChanging(Me, New NkFileHaitaTableRowChangeEvent(CType(e.Row,NkFileHaitaTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NkFileHaitaTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent NkFileHaitaTableRowDeleted(Me, New NkFileHaitaTableRowChangeEvent(CType(e.Row,NkFileHaitaTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NkFileHaitaTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent NkFileHaitaTableRowDeleting(Me, New NkFileHaitaTableRowChangeEvent(CType(e.Row,NkFileHaitaTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveNkFileHaitaTableRow(ByVal row As NkFileHaitaTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As JhsNyuukinTorikomiDataSet = New JhsNyuukinTorikomiDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NkFileHaitaTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class NyuukinFileTorikomiRow
        Inherits Global.System.Data.DataRow
        
        Private tableNyuukinFileTorikomi As NyuukinFileTorikomiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNyuukinFileTorikomi = CType(Me.Table,NyuukinFileTorikomiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nyuukin_torikomi_unique_no() As Integer
            Get
                Return CType(Me(Me.tableNyuukinFileTorikomi.nyuukin_torikomi_unique_noColumn),Integer)
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.nyuukin_torikomi_unique_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property edi_jouhou_sakusei_date() As String
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.edi_jouhou_sakusei_dateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'edi_jouhou_sakusei_date' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.edi_jouhou_sakusei_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property torikesi() As Integer
            Get
                Return CType(Me(Me.tableNyuukinFileTorikomi.torikesiColumn),Integer)
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.torikesiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nyuukin_date() As Date
            Get
                Return CType(Me(Me.tableNyuukinFileTorikomi.nyuukin_dateColumn),Date)
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.nyuukin_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property torikomi_denpyou_no() As String
            Get
                Return CType(Me(Me.tableNyuukinFileTorikomi.torikomi_denpyou_noColumn),String)
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.torikomi_denpyou_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property seikyuu_saki_cd() As String
            Get
                Return CType(Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_cdColumn),String)
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property seikyuu_saki_brc() As String
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_brcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'seikyuu_saki_brc' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_brcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property seikyuu_saki_kbn() As String
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_kbnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'seikyuu_saki_kbn' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_kbnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property seikyuu_saki_mei() As String
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_meiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'seikyuu_saki_mei' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property syougou_kouza_no() As String
            Get
                Return CType(Me(Me.tableNyuukinFileTorikomi.syougou_kouza_noColumn),String)
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.syougou_kouza_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property genkin() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.genkinColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'genkin' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.genkinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kogitte() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.kogitteColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'kogitte' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.kogitteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property furikomi() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.furikomiColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'furikomi' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.furikomiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tegata() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.tegataColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'tegata' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.tegataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sousai() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.sousaiColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'sousai' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.sousaiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nebiki() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.nebikiColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'nebiki' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.nebikiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sonota() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.sonotaColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'sonota' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.sonotaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kyouryoku_kaihi() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.kyouryoku_kaihiColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'kyouryoku_kaihi' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.kyouryoku_kaihiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kouza_furikae() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.kouza_furikaeColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'kouza_furikae' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.kouza_furikaeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property furikomi_tesuuryou() As Long
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.furikomi_tesuuryouColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'furikomi_tesuuryou' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.furikomi_tesuuryouColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tegata_kijitu() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.tegata_kijituColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'tegata_kijitu' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.tegata_kijituColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tegata_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.tegata_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'tegata_no' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.tegata_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tekiyou_mei() As String
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.tekiyou_meiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'tekiyou_mei' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.tekiyou_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_login_user_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.add_login_user_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'add_login_user_id' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.add_login_user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_datetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.add_datetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'add_datetime' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.add_datetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property upd_login_user_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.upd_login_user_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'upd_login_user_id' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.upd_login_user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property upd_datetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNyuukinFileTorikomi.upd_datetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NyuukinFileTorikomi' にある列 'upd_datetime' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNyuukinFileTorikomi.upd_datetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isedi_jouhou_sakusei_dateNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.edi_jouhou_sakusei_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setedi_jouhou_sakusei_dateNull()
            Me(Me.tableNyuukinFileTorikomi.edi_jouhou_sakusei_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isseikyuu_saki_brcNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.seikyuu_saki_brcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setseikyuu_saki_brcNull()
            Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_brcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isseikyuu_saki_kbnNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.seikyuu_saki_kbnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setseikyuu_saki_kbnNull()
            Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_kbnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isseikyuu_saki_meiNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.seikyuu_saki_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setseikyuu_saki_meiNull()
            Me(Me.tableNyuukinFileTorikomi.seikyuu_saki_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgenkinNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.genkinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgenkinNull()
            Me(Me.tableNyuukinFileTorikomi.genkinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IskogitteNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.kogitteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetkogitteNull()
            Me(Me.tableNyuukinFileTorikomi.kogitteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfurikomiNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.furikomiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfurikomiNull()
            Me(Me.tableNyuukinFileTorikomi.furikomiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstegataNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.tegataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettegataNull()
            Me(Me.tableNyuukinFileTorikomi.tegataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssousaiNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.sousaiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsousaiNull()
            Me(Me.tableNyuukinFileTorikomi.sousaiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsnebikiNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.nebikiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetnebikiNull()
            Me(Me.tableNyuukinFileTorikomi.nebikiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssonotaNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.sonotaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsonotaNull()
            Me(Me.tableNyuukinFileTorikomi.sonotaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskyouryoku_kaihiNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.kyouryoku_kaihiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkyouryoku_kaihiNull()
            Me(Me.tableNyuukinFileTorikomi.kyouryoku_kaihiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iskouza_furikaeNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.kouza_furikaeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setkouza_furikaeNull()
            Me(Me.tableNyuukinFileTorikomi.kouza_furikaeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isfurikomi_tesuuryouNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.furikomi_tesuuryouColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setfurikomi_tesuuryouNull()
            Me(Me.tableNyuukinFileTorikomi.furikomi_tesuuryouColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istegata_kijituNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.tegata_kijituColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settegata_kijituNull()
            Me(Me.tableNyuukinFileTorikomi.tegata_kijituColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istegata_noNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.tegata_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settegata_noNull()
            Me(Me.tableNyuukinFileTorikomi.tegata_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istekiyou_meiNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.tekiyou_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settekiyou_meiNull()
            Me(Me.tableNyuukinFileTorikomi.tekiyou_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_login_user_idNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.add_login_user_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_login_user_idNull()
            Me(Me.tableNyuukinFileTorikomi.add_login_user_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_datetimeNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.add_datetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_datetimeNull()
            Me(Me.tableNyuukinFileTorikomi.add_datetimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupd_login_user_idNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.upd_login_user_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupd_login_user_idNull()
            Me(Me.tableNyuukinFileTorikomi.upd_login_user_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupd_datetimeNull() As Boolean
            Return Me.IsNull(Me.tableNyuukinFileTorikomi.upd_datetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupd_datetimeNull()
            Me(Me.tableNyuukinFileTorikomi.upd_datetimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TyoufukuChkRow
        Inherits Global.System.Data.DataRow
        
        Private tableTyoufukuChk As TyoufukuChkDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTyoufukuChk = CType(Me.Table,TyoufukuChkDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property data_cnt() As Integer
            Get
                Return CType(Me(Me.tableTyoufukuChk.data_cntColumn),Integer)
            End Get
            Set
                Me(Me.tableTyoufukuChk.data_cntColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class NkFileHaitaTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableNkFileHaitaTable As NkFileHaitaTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNkFileHaitaTable = CType(Me.Table,NkFileHaitaTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nyuukin_torikomi_unique_no() As Integer
            Get
                Return CType(Me(Me.tableNkFileHaitaTable.nyuukin_torikomi_unique_noColumn),Integer)
            End Get
            Set
                Me(Me.tableNkFileHaitaTable.nyuukin_torikomi_unique_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property upd_login_user_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableNkFileHaitaTable.upd_login_user_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NkFileHaitaTable' にある列 'upd_login_user_id' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNkFileHaitaTable.upd_login_user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property upd_datetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNkFileHaitaTable.upd_datetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'NkFileHaitaTable' にある列 'upd_datetime' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableNkFileHaitaTable.upd_datetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupd_login_user_idNull() As Boolean
            Return Me.IsNull(Me.tableNkFileHaitaTable.upd_login_user_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupd_login_user_idNull()
            Me(Me.tableNkFileHaitaTable.upd_login_user_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupd_datetimeNull() As Boolean
            Return Me.IsNull(Me.tableNkFileHaitaTable.upd_datetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupd_datetimeNull()
            Me(Me.tableNkFileHaitaTable.upd_datetimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class NyuukinFileTorikomiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NyuukinFileTorikomiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As NyuukinFileTorikomiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As NyuukinFileTorikomiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TyoufukuChkRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TyoufukuChkRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TyoufukuChkRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TyoufukuChkRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class NkFileHaitaTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NkFileHaitaTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As NkFileHaitaTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As NkFileHaitaTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

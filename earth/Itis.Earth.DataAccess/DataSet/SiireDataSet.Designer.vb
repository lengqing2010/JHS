'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.3603
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("SiireDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SiireDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableSiireDataMeisaiTable As SiireDataMeisaiTableDataTable
    
    Private tableSiireSakiInfo As SiireSakiInfoDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SiireDataMeisaiTable")) Is Nothing) Then
                MyBase.Tables.Add(New SiireDataMeisaiTableDataTable(ds.Tables("SiireDataMeisaiTable")))
            End If
            If (Not (ds.Tables("SiireSakiInfo")) Is Nothing) Then
                MyBase.Tables.Add(New SiireSakiInfoDataTable(ds.Tables("SiireSakiInfo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SiireDataMeisaiTable() As SiireDataMeisaiTableDataTable
        Get
            Return Me.tableSiireDataMeisaiTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SiireSakiInfo() As SiireSakiInfoDataTable
        Get
            Return Me.tableSiireSakiInfo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SiireDataSet = CType(MyBase.Clone,SiireDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("SiireDataMeisaiTable")) Is Nothing) Then
                MyBase.Tables.Add(New SiireDataMeisaiTableDataTable(ds.Tables("SiireDataMeisaiTable")))
            End If
            If (Not (ds.Tables("SiireSakiInfo")) Is Nothing) Then
                MyBase.Tables.Add(New SiireSakiInfoDataTable(ds.Tables("SiireSakiInfo")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSiireDataMeisaiTable = CType(MyBase.Tables("SiireDataMeisaiTable"),SiireDataMeisaiTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSiireDataMeisaiTable) Is Nothing) Then
                Me.tableSiireDataMeisaiTable.InitVars
            End If
        End If
        Me.tableSiireSakiInfo = CType(MyBase.Tables("SiireSakiInfo"),SiireSakiInfoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSiireSakiInfo) Is Nothing) Then
                Me.tableSiireSakiInfo.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "SiireDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SiireDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSiireDataMeisaiTable = New SiireDataMeisaiTableDataTable
        MyBase.Tables.Add(Me.tableSiireDataMeisaiTable)
        Me.tableSiireSakiInfo = New SiireSakiInfoDataTable
        MyBase.Tables.Add(Me.tableSiireSakiInfo)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSiireDataMeisaiTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSiireSakiInfo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SiireDataSet = New SiireDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub SiireDataMeisaiTableRowChangeEventHandler(ByVal sender As Object, ByVal e As SiireDataMeisaiTableRowChangeEvent)
    
    Public Delegate Sub SiireSakiInfoRowChangeEventHandler(ByVal sender As Object, ByVal e As SiireSakiInfoRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SiireDataMeisaiTableDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columndenpyou_unique_no As Global.System.Data.DataColumn
        
        Private columndenpyou_no As Global.System.Data.DataColumn
        
        Private columndenpyou_syubetu As Global.System.Data.DataColumn
        
        Private columntorikesi_moto_denpyou_unique_no As Global.System.Data.DataColumn
        
        Private columnkbn As Global.System.Data.DataColumn
        
        Private columnbangou As Global.System.Data.DataColumn
        
        Private columnhimoduke_cd As Global.System.Data.DataColumn
        
        Private columnhimoduke_table_type As Global.System.Data.DataColumn
        
        Private columnsiire_date As Global.System.Data.DataColumn
        
        Private columnsiire_saki_cd As Global.System.Data.DataColumn
        
        Private columnsiire_saki_brc As Global.System.Data.DataColumn
        
        Private columnsiire_mei As Global.System.Data.DataColumn
        
        Private columnsesyu_mei As Global.System.Data.DataColumn
        
        Private columnsyouhin_cd As Global.System.Data.DataColumn
        
        Private columnhinmei As Global.System.Data.DataColumn
        
        Private columnsuu As Global.System.Data.DataColumn
        
        Private columntani As Global.System.Data.DataColumn
        
        Private columntanka As Global.System.Data.DataColumn
        
        Private columnsiire_gaku As Global.System.Data.DataColumn
        
        Private columnsotozei_gaku As Global.System.Data.DataColumn
        
        Private columnzei_kbn As Global.System.Data.DataColumn
        
        Private columnadd_login_user_id As Global.System.Data.DataColumn
        
        Private columnadd_login_user_name As Global.System.Data.DataColumn
        
        Private columnadd_datetime As Global.System.Data.DataColumn
        
        Private columnupd_login_user_id As Global.System.Data.DataColumn
        
        Private columnupd_datetime As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SiireDataMeisaiTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property denpyou_unique_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndenpyou_unique_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property denpyou_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndenpyou_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property denpyou_syubetuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndenpyou_syubetu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property torikesi_moto_denpyou_unique_noColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntorikesi_moto_denpyou_unique_no
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property kbnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkbn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bangouColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbangou
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property himoduke_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhimoduke_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property himoduke_table_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhimoduke_table_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_saki_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_saki_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_saki_brcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_saki_brc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sesyu_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsesyu_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property syouhin_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsyouhin_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hinmeiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhinmei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property suuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsuu
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property taniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntani
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tankaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanka
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_gakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_gaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sotozei_gakuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsotozei_gaku
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zei_kbnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzei_kbn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_login_user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_login_user_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_login_user_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_login_user_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property add_datetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadd_datetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property upd_login_user_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupd_login_user_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property upd_datetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupd_datetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SiireDataMeisaiTableRow
            Get
                Return CType(Me.Rows(index),SiireDataMeisaiTableRow)
            End Get
        End Property
        
        Public Event SiireDataMeisaiTableRowChanging As SiireDataMeisaiTableRowChangeEventHandler
        
        Public Event SiireDataMeisaiTableRowChanged As SiireDataMeisaiTableRowChangeEventHandler
        
        Public Event SiireDataMeisaiTableRowDeleting As SiireDataMeisaiTableRowChangeEventHandler
        
        Public Event SiireDataMeisaiTableRowDeleted As SiireDataMeisaiTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSiireDataMeisaiTableRow(ByVal row As SiireDataMeisaiTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSiireDataMeisaiTableRow( _
                    ByVal denpyou_no As String,  _
                    ByVal denpyou_syubetu As String,  _
                    ByVal torikesi_moto_denpyou_unique_no As Integer,  _
                    ByVal kbn As String,  _
                    ByVal bangou As String,  _
                    ByVal himoduke_cd As String,  _
                    ByVal himoduke_table_type As String,  _
                    ByVal siire_date As Date,  _
                    ByVal siire_saki_cd As String,  _
                    ByVal siire_saki_brc As String,  _
                    ByVal siire_mei As String,  _
                    ByVal sesyu_mei As String,  _
                    ByVal syouhin_cd As String,  _
                    ByVal hinmei As String,  _
                    ByVal suu As Integer,  _
                    ByVal tani As String,  _
                    ByVal tanka As Integer,  _
                    ByVal siire_gaku As Integer,  _
                    ByVal sotozei_gaku As Integer,  _
                    ByVal zei_kbn As String,  _
                    ByVal add_login_user_id As String,  _
                    ByVal add_login_user_name As String,  _
                    ByVal add_datetime As Date,  _
                    ByVal upd_login_user_id As String,  _
                    ByVal upd_datetime As Date) As SiireDataMeisaiTableRow
            Dim rowSiireDataMeisaiTableRow As SiireDataMeisaiTableRow = CType(Me.NewRow,SiireDataMeisaiTableRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, denpyou_no, denpyou_syubetu, torikesi_moto_denpyou_unique_no, kbn, bangou, himoduke_cd, himoduke_table_type, siire_date, siire_saki_cd, siire_saki_brc, siire_mei, sesyu_mei, syouhin_cd, hinmei, suu, tani, tanka, siire_gaku, sotozei_gaku, zei_kbn, add_login_user_id, add_login_user_name, add_datetime, upd_login_user_id, upd_datetime}
            rowSiireDataMeisaiTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSiireDataMeisaiTableRow)
            Return rowSiireDataMeisaiTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydenpyou_unique_no(ByVal denpyou_unique_no As Integer) As SiireDataMeisaiTableRow
            Return CType(Me.Rows.Find(New Object() {denpyou_unique_no}),SiireDataMeisaiTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SiireDataMeisaiTableDataTable = CType(MyBase.Clone,SiireDataMeisaiTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SiireDataMeisaiTableDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndenpyou_unique_no = MyBase.Columns("denpyou_unique_no")
            Me.columndenpyou_no = MyBase.Columns("denpyou_no")
            Me.columndenpyou_syubetu = MyBase.Columns("denpyou_syubetu")
            Me.columntorikesi_moto_denpyou_unique_no = MyBase.Columns("torikesi_moto_denpyou_unique_no")
            Me.columnkbn = MyBase.Columns("kbn")
            Me.columnbangou = MyBase.Columns("bangou")
            Me.columnhimoduke_cd = MyBase.Columns("himoduke_cd")
            Me.columnhimoduke_table_type = MyBase.Columns("himoduke_table_type")
            Me.columnsiire_date = MyBase.Columns("siire_date")
            Me.columnsiire_saki_cd = MyBase.Columns("siire_saki_cd")
            Me.columnsiire_saki_brc = MyBase.Columns("siire_saki_brc")
            Me.columnsiire_mei = MyBase.Columns("siire_mei")
            Me.columnsesyu_mei = MyBase.Columns("sesyu_mei")
            Me.columnsyouhin_cd = MyBase.Columns("syouhin_cd")
            Me.columnhinmei = MyBase.Columns("hinmei")
            Me.columnsuu = MyBase.Columns("suu")
            Me.columntani = MyBase.Columns("tani")
            Me.columntanka = MyBase.Columns("tanka")
            Me.columnsiire_gaku = MyBase.Columns("siire_gaku")
            Me.columnsotozei_gaku = MyBase.Columns("sotozei_gaku")
            Me.columnzei_kbn = MyBase.Columns("zei_kbn")
            Me.columnadd_login_user_id = MyBase.Columns("add_login_user_id")
            Me.columnadd_login_user_name = MyBase.Columns("add_login_user_name")
            Me.columnadd_datetime = MyBase.Columns("add_datetime")
            Me.columnupd_login_user_id = MyBase.Columns("upd_login_user_id")
            Me.columnupd_datetime = MyBase.Columns("upd_datetime")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndenpyou_unique_no = New Global.System.Data.DataColumn("denpyou_unique_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndenpyou_unique_no)
            Me.columndenpyou_no = New Global.System.Data.DataColumn("denpyou_no", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndenpyou_no)
            Me.columndenpyou_syubetu = New Global.System.Data.DataColumn("denpyou_syubetu", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndenpyou_syubetu)
            Me.columntorikesi_moto_denpyou_unique_no = New Global.System.Data.DataColumn("torikesi_moto_denpyou_unique_no", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntorikesi_moto_denpyou_unique_no)
            Me.columnkbn = New Global.System.Data.DataColumn("kbn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkbn)
            Me.columnbangou = New Global.System.Data.DataColumn("bangou", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbangou)
            Me.columnhimoduke_cd = New Global.System.Data.DataColumn("himoduke_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhimoduke_cd)
            Me.columnhimoduke_table_type = New Global.System.Data.DataColumn("himoduke_table_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhimoduke_table_type)
            Me.columnsiire_date = New Global.System.Data.DataColumn("siire_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_date)
            Me.columnsiire_saki_cd = New Global.System.Data.DataColumn("siire_saki_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_saki_cd)
            Me.columnsiire_saki_brc = New Global.System.Data.DataColumn("siire_saki_brc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_saki_brc)
            Me.columnsiire_mei = New Global.System.Data.DataColumn("siire_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_mei)
            Me.columnsesyu_mei = New Global.System.Data.DataColumn("sesyu_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsesyu_mei)
            Me.columnsyouhin_cd = New Global.System.Data.DataColumn("syouhin_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsyouhin_cd)
            Me.columnhinmei = New Global.System.Data.DataColumn("hinmei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhinmei)
            Me.columnsuu = New Global.System.Data.DataColumn("suu", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsuu)
            Me.columntani = New Global.System.Data.DataColumn("tani", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntani)
            Me.columntanka = New Global.System.Data.DataColumn("tanka", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanka)
            Me.columnsiire_gaku = New Global.System.Data.DataColumn("siire_gaku", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_gaku)
            Me.columnsotozei_gaku = New Global.System.Data.DataColumn("sotozei_gaku", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsotozei_gaku)
            Me.columnzei_kbn = New Global.System.Data.DataColumn("zei_kbn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzei_kbn)
            Me.columnadd_login_user_id = New Global.System.Data.DataColumn("add_login_user_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_login_user_id)
            Me.columnadd_login_user_name = New Global.System.Data.DataColumn("add_login_user_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_login_user_name)
            Me.columnadd_datetime = New Global.System.Data.DataColumn("add_datetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadd_datetime)
            Me.columnupd_login_user_id = New Global.System.Data.DataColumn("upd_login_user_id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupd_login_user_id)
            Me.columnupd_datetime = New Global.System.Data.DataColumn("upd_datetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupd_datetime)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columndenpyou_unique_no}, true))
            Me.columndenpyou_unique_no.AutoIncrement = true
            Me.columndenpyou_unique_no.AllowDBNull = false
            Me.columndenpyou_unique_no.ReadOnly = true
            Me.columndenpyou_unique_no.Unique = true
            Me.columndenpyou_no.MaxLength = 5
            Me.columndenpyou_syubetu.MaxLength = 2
            Me.columnkbn.MaxLength = 1
            Me.columnbangou.MaxLength = 10
            Me.columnhimoduke_cd.AllowDBNull = false
            Me.columnhimoduke_cd.MaxLength = 30
            Me.columnhimoduke_table_type.AllowDBNull = false
            Me.columnhimoduke_table_type.MaxLength = 30
            Me.columnsiire_saki_cd.MaxLength = 13
            Me.columnsiire_saki_brc.MaxLength = 3
            Me.columnsiire_mei.MaxLength = 40
            Me.columnsesyu_mei.MaxLength = 50
            Me.columnsyouhin_cd.MaxLength = 8
            Me.columnhinmei.MaxLength = 40
            Me.columntani.MaxLength = 4
            Me.columnzei_kbn.MaxLength = 1
            Me.columnadd_login_user_id.MaxLength = 30
            Me.columnadd_login_user_name.MaxLength = 128
            Me.columnupd_login_user_id.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSiireDataMeisaiTableRow() As SiireDataMeisaiTableRow
            Return CType(Me.NewRow,SiireDataMeisaiTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SiireDataMeisaiTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SiireDataMeisaiTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SiireDataMeisaiTableRowChangedEvent) Is Nothing) Then
                RaiseEvent SiireDataMeisaiTableRowChanged(Me, New SiireDataMeisaiTableRowChangeEvent(CType(e.Row,SiireDataMeisaiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SiireDataMeisaiTableRowChangingEvent) Is Nothing) Then
                RaiseEvent SiireDataMeisaiTableRowChanging(Me, New SiireDataMeisaiTableRowChangeEvent(CType(e.Row,SiireDataMeisaiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SiireDataMeisaiTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SiireDataMeisaiTableRowDeleted(Me, New SiireDataMeisaiTableRowChangeEvent(CType(e.Row,SiireDataMeisaiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SiireDataMeisaiTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SiireDataMeisaiTableRowDeleting(Me, New SiireDataMeisaiTableRowChangeEvent(CType(e.Row,SiireDataMeisaiTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSiireDataMeisaiTableRow(ByVal row As SiireDataMeisaiTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As SiireDataSet = New SiireDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SiireDataMeisaiTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SiireSakiInfoDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnsiire_saki_cd As Global.System.Data.DataColumn
        
        Private columnsiire_saki_brc As Global.System.Data.DataColumn
        
        Private columnsiire_saki_mei As Global.System.Data.DataColumn
        
        Private columnsiire_saki_kana As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SiireSakiInfo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_saki_cdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_saki_cd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_saki_brcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_saki_brc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_saki_meiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_saki_mei
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property siire_saki_kanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsiire_saki_kana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SiireSakiInfoRow
            Get
                Return CType(Me.Rows(index),SiireSakiInfoRow)
            End Get
        End Property
        
        Public Event SiireSakiInfoRowChanging As SiireSakiInfoRowChangeEventHandler
        
        Public Event SiireSakiInfoRowChanged As SiireSakiInfoRowChangeEventHandler
        
        Public Event SiireSakiInfoRowDeleting As SiireSakiInfoRowChangeEventHandler
        
        Public Event SiireSakiInfoRowDeleted As SiireSakiInfoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSiireSakiInfoRow(ByVal row As SiireSakiInfoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSiireSakiInfoRow(ByVal siire_saki_cd As String, ByVal siire_saki_brc As String, ByVal siire_saki_mei As String, ByVal siire_saki_kana As String) As SiireSakiInfoRow
            Dim rowSiireSakiInfoRow As SiireSakiInfoRow = CType(Me.NewRow,SiireSakiInfoRow)
            Dim columnValuesArray() As Object = New Object() {siire_saki_cd, siire_saki_brc, siire_saki_mei, siire_saki_kana}
            rowSiireSakiInfoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSiireSakiInfoRow)
            Return rowSiireSakiInfoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SiireSakiInfoDataTable = CType(MyBase.Clone,SiireSakiInfoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SiireSakiInfoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnsiire_saki_cd = MyBase.Columns("siire_saki_cd")
            Me.columnsiire_saki_brc = MyBase.Columns("siire_saki_brc")
            Me.columnsiire_saki_mei = MyBase.Columns("siire_saki_mei")
            Me.columnsiire_saki_kana = MyBase.Columns("siire_saki_kana")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnsiire_saki_cd = New Global.System.Data.DataColumn("siire_saki_cd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_saki_cd)
            Me.columnsiire_saki_brc = New Global.System.Data.DataColumn("siire_saki_brc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_saki_brc)
            Me.columnsiire_saki_mei = New Global.System.Data.DataColumn("siire_saki_mei", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_saki_mei)
            Me.columnsiire_saki_kana = New Global.System.Data.DataColumn("siire_saki_kana", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsiire_saki_kana)
            Me.columnsiire_saki_cd.AllowDBNull = false
            Me.columnsiire_saki_cd.MaxLength = 5
            Me.columnsiire_saki_brc.AllowDBNull = false
            Me.columnsiire_saki_brc.MaxLength = 2
            Me.columnsiire_saki_mei.Caption = "tys_kaisya_mei2"
            Me.columnsiire_saki_mei.MaxLength = 100
            Me.columnsiire_saki_kana.Caption = "tys_kaisya_mei2_kana"
            Me.columnsiire_saki_kana.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSiireSakiInfoRow() As SiireSakiInfoRow
            Return CType(Me.NewRow,SiireSakiInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SiireSakiInfoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SiireSakiInfoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SiireSakiInfoRowChangedEvent) Is Nothing) Then
                RaiseEvent SiireSakiInfoRowChanged(Me, New SiireSakiInfoRowChangeEvent(CType(e.Row,SiireSakiInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SiireSakiInfoRowChangingEvent) Is Nothing) Then
                RaiseEvent SiireSakiInfoRowChanging(Me, New SiireSakiInfoRowChangeEvent(CType(e.Row,SiireSakiInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SiireSakiInfoRowDeletedEvent) Is Nothing) Then
                RaiseEvent SiireSakiInfoRowDeleted(Me, New SiireSakiInfoRowChangeEvent(CType(e.Row,SiireSakiInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SiireSakiInfoRowDeletingEvent) Is Nothing) Then
                RaiseEvent SiireSakiInfoRowDeleting(Me, New SiireSakiInfoRowChangeEvent(CType(e.Row,SiireSakiInfoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSiireSakiInfoRow(ByVal row As SiireSakiInfoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As SiireDataSet = New SiireDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SiireSakiInfoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SiireDataMeisaiTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableSiireDataMeisaiTable As SiireDataMeisaiTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSiireDataMeisaiTable = CType(Me.Table,SiireDataMeisaiTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property denpyou_unique_no() As Integer
            Get
                Return CType(Me(Me.tableSiireDataMeisaiTable.denpyou_unique_noColumn),Integer)
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.denpyou_unique_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property denpyou_no() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.denpyou_noColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'denpyou_no' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.denpyou_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property denpyou_syubetu() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.denpyou_syubetuColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'denpyou_syubetu' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.denpyou_syubetuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property torikesi_moto_denpyou_unique_no() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.torikesi_moto_denpyou_unique_noColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'torikesi_moto_denpyou_unique_no' の値は DBNull です。"& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.torikesi_moto_denpyou_unique_noColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property kbn() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.kbnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'kbn' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.kbnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bangou() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.bangouColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'bangou' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.bangouColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property himoduke_cd() As String
            Get
                Return CType(Me(Me.tableSiireDataMeisaiTable.himoduke_cdColumn),String)
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.himoduke_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property himoduke_table_type() As String
            Get
                Return CType(Me(Me.tableSiireDataMeisaiTable.himoduke_table_typeColumn),String)
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.himoduke_table_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.siire_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'siire_date' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.siire_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_saki_cd() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.siire_saki_cdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'siire_saki_cd' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.siire_saki_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_saki_brc() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.siire_saki_brcColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'siire_saki_brc' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.siire_saki_brcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_mei() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.siire_meiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'siire_mei' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.siire_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sesyu_mei() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.sesyu_meiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'sesyu_mei' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.sesyu_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property syouhin_cd() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.syouhin_cdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'syouhin_cd' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.syouhin_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hinmei() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.hinmeiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'hinmei' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.hinmeiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property suu() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.suuColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'suu' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.suuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tani() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.taniColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'tani' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.taniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tanka() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.tankaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'tanka' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.tankaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_gaku() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.siire_gakuColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'siire_gaku' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.siire_gakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sotozei_gaku() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.sotozei_gakuColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'sotozei_gaku' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.sotozei_gakuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zei_kbn() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.zei_kbnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'zei_kbn' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.zei_kbnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_login_user_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.add_login_user_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'add_login_user_id' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.add_login_user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_login_user_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.add_login_user_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'add_login_user_name' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.add_login_user_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property add_datetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.add_datetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'add_datetime' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.add_datetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property upd_login_user_id() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.upd_login_user_idColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'upd_login_user_id' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.upd_login_user_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property upd_datetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSiireDataMeisaiTable.upd_datetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'SiireDataMeisaiTable' にある列 'upd_datetime' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableSiireDataMeisaiTable.upd_datetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdenpyou_noNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.denpyou_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdenpyou_noNull()
            Me(Me.tableSiireDataMeisaiTable.denpyou_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isdenpyou_syubetuNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.denpyou_syubetuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setdenpyou_syubetuNull()
            Me(Me.tableSiireDataMeisaiTable.denpyou_syubetuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Istorikesi_moto_denpyou_unique_noNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.torikesi_moto_denpyou_unique_noColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Settorikesi_moto_denpyou_unique_noNull()
            Me(Me.tableSiireDataMeisaiTable.torikesi_moto_denpyou_unique_noColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IskbnNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.kbnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetkbnNull()
            Me(Me.tableSiireDataMeisaiTable.kbnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsbangouNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.bangouColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetbangouNull()
            Me(Me.tableSiireDataMeisaiTable.bangouColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_dateNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.siire_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_dateNull()
            Me(Me.tableSiireDataMeisaiTable.siire_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_saki_cdNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.siire_saki_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_saki_cdNull()
            Me(Me.tableSiireDataMeisaiTable.siire_saki_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_saki_brcNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.siire_saki_brcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_saki_brcNull()
            Me(Me.tableSiireDataMeisaiTable.siire_saki_brcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_meiNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.siire_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_meiNull()
            Me(Me.tableSiireDataMeisaiTable.siire_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issesyu_meiNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.sesyu_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsesyu_meiNull()
            Me(Me.tableSiireDataMeisaiTable.sesyu_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issyouhin_cdNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.syouhin_cdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsyouhin_cdNull()
            Me(Me.tableSiireDataMeisaiTable.syouhin_cdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IshinmeiNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.hinmeiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SethinmeiNull()
            Me(Me.tableSiireDataMeisaiTable.hinmeiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssuuNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.suuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsuuNull()
            Me(Me.tableSiireDataMeisaiTable.suuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstaniNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.taniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettaniNull()
            Me(Me.tableSiireDataMeisaiTable.taniColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstankaNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.tankaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettankaNull()
            Me(Me.tableSiireDataMeisaiTable.tankaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_gakuNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.siire_gakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_gakuNull()
            Me(Me.tableSiireDataMeisaiTable.siire_gakuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issotozei_gakuNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.sotozei_gakuColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsotozei_gakuNull()
            Me(Me.tableSiireDataMeisaiTable.sotozei_gakuColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Iszei_kbnNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.zei_kbnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setzei_kbnNull()
            Me(Me.tableSiireDataMeisaiTable.zei_kbnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_login_user_idNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.add_login_user_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_login_user_idNull()
            Me(Me.tableSiireDataMeisaiTable.add_login_user_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_login_user_nameNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.add_login_user_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_login_user_nameNull()
            Me(Me.tableSiireDataMeisaiTable.add_login_user_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isadd_datetimeNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.add_datetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setadd_datetimeNull()
            Me(Me.tableSiireDataMeisaiTable.add_datetimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupd_login_user_idNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.upd_login_user_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupd_login_user_idNull()
            Me(Me.tableSiireDataMeisaiTable.upd_login_user_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isupd_datetimeNull() As Boolean
            Return Me.IsNull(Me.tableSiireDataMeisaiTable.upd_datetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setupd_datetimeNull()
            Me(Me.tableSiireDataMeisaiTable.upd_datetimeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SiireSakiInfoRow
        Inherits Global.System.Data.DataRow
        
        Private tableSiireSakiInfo As SiireSakiInfoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSiireSakiInfo = CType(Me.Table,SiireSakiInfoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_saki_cd() As String
            Get
                Return CType(Me(Me.tableSiireSakiInfo.siire_saki_cdColumn),String)
            End Get
            Set
                Me(Me.tableSiireSakiInfo.siire_saki_cdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_saki_brc() As String
            Get
                Return CType(Me(Me.tableSiireSakiInfo.siire_saki_brcColumn),String)
            End Get
            Set
                Me(Me.tableSiireSakiInfo.siire_saki_brcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_saki_mei() As String
            Get
                If Me.Issiire_saki_meiNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSiireSakiInfo.siire_saki_meiColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSiireSakiInfo.siire_saki_meiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property siire_saki_kana() As String
            Get
                If Me.Issiire_saki_kanaNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableSiireSakiInfo.siire_saki_kanaColumn),String)
                End If
            End Get
            Set
                Me(Me.tableSiireSakiInfo.siire_saki_kanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_saki_meiNull() As Boolean
            Return Me.IsNull(Me.tableSiireSakiInfo.siire_saki_meiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_saki_meiNull()
            Me(Me.tableSiireSakiInfo.siire_saki_meiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Issiire_saki_kanaNull() As Boolean
            Return Me.IsNull(Me.tableSiireSakiInfo.siire_saki_kanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setsiire_saki_kanaNull()
            Me(Me.tableSiireSakiInfo.siire_saki_kanaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SiireDataMeisaiTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SiireDataMeisaiTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SiireDataMeisaiTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SiireDataMeisaiTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SiireSakiInfoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SiireSakiInfoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SiireSakiInfoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SiireSakiInfoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
